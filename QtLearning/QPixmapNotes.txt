Detailed Description
The QPixmap class 
is an off-screen image representation 
that can be used as a paint device.

Qt provides four classes 
for handling image data: 
QImage, QPixmap, QBitmap and QPicture. 

QImage is designed and optimized for I/O, 
and for direct pixel access and manipulation, 

while 
QPixmap is designed and optimized for showing images on screen. 

QBitmap is only a convenience class 
that inherits QPixmap, 
ensuring a depth of 1. 
The isQBitmap() function returns true 
if a QPixmap object is really a bitmap, 
otherwise returns false. 

Finally, 
the QPicture class is a paint device 
that records and replays QPainter commands.


A QPixmap can easily be displayed on the screen 
using QLabel or one of QAbstractButton's subclasses 
(such as QPushButton and QToolButton). 
QLabel has a pixmap property, 
whereas QAbstractButton has an icon property.

QPixmap objects can be passed around by value 
since the QPixmap class uses implicit data sharing. 

For more information, 
see the Implicit Data Sharing documentation. 

QPixmap objects can also be streamed.
Note that the pixel data in a pixmap 
is internal and is managed by the underlying window system. 

Because QPixmap is a QPaintDevice subclass, 
QPainter can be used to draw directly onto pixmaps. 

Pixels can only be accessed 
through QPainter functions 
or by converting the QPixmap to a QImage. 

However, 
the fill() function 
is available for initializing the entire pixmap 
with a given color.

There are functions to convert between QImage and QPixmap. 

Typically, 
the QImage class is used to load an image file, 
optionally manipulating the image data, 
before the QImage object 
is converted into a QPixmap to be shown on screen. 

Alternatively, 
if no manipulation is desired, 
the image file can be loaded directly into a QPixmap.
QPixmap provides a collection of functions 
that can be used 
to obtain a variety of information about the pixmap. 

In addition, 
there are several functions 
that enables transformation of the pixmap. 
