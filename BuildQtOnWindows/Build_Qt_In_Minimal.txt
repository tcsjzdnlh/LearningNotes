include/exclude: parts, modules, features

parts: -make <parts_name>, no-make <parts_name>

modules: -skip <module_name>
	
features(features list in qfeatures.txt, only for qtbase)
	: -feature-<feature_name>, -no-feature-<feature_name>


//-----------------------------------

-no-compile-examples
-no-widgets
-no-gui
-no-accessibility
-no-opengl
-no-openvg
-no-nis
-no-iconv
-no-evdev
-no-mtdev
-no-inotify
-no-eventfd
-no-system-proxies
-no-zlib
-no-pcre
-no-icu
-no-gif
-no-libpng
-no-libjpeg
-no-freetype
-no-glib
-no-fontconfig
-no-harfbuzz
-no-angle

-no-incredibuild-xge
-no-openssl
-no-libproxy
-no-dbus
-no-audio-backend
-no-wmf-backend
-no-qml-debug
-no-directwrite
-no-direct2d
-no-native-gestures




-no-webengine



-skip glib




//--------------------------------------------------------------------------------------------------------

Build Qt in Minimal 

//--------------------------------------------------------------------------------------------------------
OPENSSL_LIBS="-L(path for openssl) 
-lssl 
-lcrypto
" ./configure -release
-opensource 
-prefix (path for prefix) 
-extprefix (path for prefix) 
-shared
-largefile 
-I (path for jpeg) 
-L (path for jpeg) 
-sysroot (path for sysroot)
-xplatform linux-arm_v5t_le-g++ 
-confirm-license 
-system-zlib 
-system-libpng
-system-libjpeg 
-openssl-linked 
-no-accessibility 
-no-freetype 
-no-harfbuzz
-no-glib 
-no-gui 
-no-widgets 
-no-cups 
-no-iconv 
-no-evdev 
-no-icu
-no-fontconfig 
-no-pch 
-no-dbus 
-no-xcb 
-no-directfb 
-no-linuxfb 
-no-kms
-no-opengl 
-nomake examples 
-nomake tests 
-skip qtdeclarative 
-skip qtdoc
-skip qtgraphicaleffects 
-skip qtlocation 
-skip qtquick1 
-skip qtquickcontrols 
-skip qtscript 
-skip qttranslations 
-skip qtwebkit 
-skip qtwebkit -examples 
-skip qtx11extras 
-skip qtxmlpatterns
-no-feature-TEXTHTMLPARSER 
-no-feature-TEXTODFWRITER 
-no-feature-CSSPARSER
-no-feature-CONCURRENT 
-no-feature-DRAGANDDROP 
-no-feature-SESSIONMANAGER
-no-feature-SHORTCUT 
-no-feature-ACTION 
-no-feature-DOM
-no-feature-FILESYSTEMMODEL 
-no-feature-FILESYSTEMWATCHER
-no-feature-ITEMVIEWS 
-no-feature-DIRMODEL 
-no-feature-STANDARDITEMMODEL
-no-feature-PROXYMODEL 
-no-feature-SORTFILTERPROXYMODEL
-no-feature-IDENTITYPROXYMODEL 
-no-feature-STRINGLISTMODEL
-no-feature-LISTVIEW 
-no-feature-TABLEVIEW 
-no-feature-TREEVIEW
-no-feature-DATAWIDGETMAPPER 
-no-feature-COLUMNVIEW 
-no-feature-MOVIE
-no-feature-IMAGEFORMAT_PPM 
-no-feature-IMAGEFORMAT_XBM
-no-feature-IMAGEFORMAT_XPM 
-no-feature-FREETYPE 
-no-feature-BIG_CODECS
-no-feature-ICONV 
-no-feature-FTP 
-no-feature-ACCESSIBILITY
-no-feature-ANIMATION 
-no-feature-STATEMACHINE 
-no-feature-GESTURES
-no-feature-DBUS 
-no-feature-XMLSCHEMA -verbose

It went down to 5.3 MB. 5.3 MB was still too bit, 
so I went through the features from qfeatures.txt, 
and did "-no-feature" for every single feature listed.  
libQt5Core wouldn't compile without LIBRARY, 
SETTINGS and REGULAREXPRESSION, 
so I took the "-no-feature" out for those things.  
Even with all of that removed, 
libQt5Core.so.5.3.0 was still 4.3 MB after being stripped.  
That would have some things removed though that we want.

Is there any way to get Qt Core to compile smaller, 
like under 3MB? 
Am I missing anything to skip 
or "-no-xyz" or "-nomake" or "-no-feature"?  
Why is libQt5Core.so.5.3.0 so much bigger than libQtCore4.so.4.8.4?

We may just need to move to 4.8.6 
and leave it there instead of jumping onto 5.x.

Thanks,
-Daniel
-------------- next part --------------
An HTML attachment was scrubbed...

//--------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------

#############################################################################
# Makefile for building: qt
# Generated by qmake (3.0) (Qt 5.6.0)
# Project:  ..\qt-everywhere-opensource-src-5.6.0\qt.pro
# Template: subdirs
# Command: E:\XfsFile\CodeLibs\QtCode\Qt5.6\Qt5.6BuildAndInstallDir_1\qtbase\bin\qmake -o Makefile ..\qt-everywhere-opensource-src-5.6.0\qt.pro
#############################################################################

MAKEFILE      = Makefile

first: make_first
QMAKE         = E:\XfsFile\CodeLibs\QtCode\Qt5.6\Qt5.6BuildAndInstallDir_1\qtbase\bin\qmake
DEL_FILE      = del
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir
COPY          = copy /y
COPY_FILE     = copy /y
COPY_DIR      = xcopy /s /q /y /i
INSTALL_FILE  = copy /y
INSTALL_PROGRAM = copy /y
INSTALL_DIR   = xcopy /s /q /y /i
DEL_FILE      = del
SYMLINK       = $(QMAKE) -install ln -f -s
DEL_DIR       = rmdir
MOVE          = move
SUBTARGETS    =  \
		module-qtbase \
		module-qtmacextras \
		module-qtx11extras \
		module-qtimageformats \
		module-qtandroidextras \
		module-qtserialport \
		module-qtserialbus \
		module-qtactiveqt \
		module-qtxmlpatterns \
		module-qtsvg \
		module-qtdeclarative \
		module-qtcanvas3d \
		module-qtenginio \
		module-qt3d \
		module-qtwayland \
		module-qtconnectivity \
		module-qtwebsockets \
		module-qtwebchannel \
		module-qtsensors \
		module-qtmultimedia \
		module-qtwinextras \
		module-qtgraphicaleffects \
		module-qtquickcontrols \
		module-qtquickcontrols2 \
		module-qtlocation \
		module-qtwebengine \
		module-qtwebview \
		module-qttools \
		module-qtscript \
		module-qttranslations \
		module-qtdoc


module-qtbase-qmake_all:  FORCE
	@if not exist qtbase\ mkdir qtbase\ & if not exist qtbase\ exit 1
	cd qtbase\ && $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtbase\qtbase.pro -o Makefile
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtbase\ && $(MAKE) -f Makefile qmake_all
module-qtbase: FORCE
	@if not exist qtbase\ mkdir qtbase\ & if not exist qtbase\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtbase\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtbase\qtbase.pro -o Makefile ) && $(MAKE) -f Makefile
module-qtbase-make_first: FORCE
	@if not exist qtbase\ mkdir qtbase\ & if not exist qtbase\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtbase\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtbase\qtbase.pro -o Makefile ) && $(MAKE) -f Makefile 
module-qtbase-all: FORCE
	@if not exist qtbase\ mkdir qtbase\ & if not exist qtbase\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtbase\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtbase\qtbase.pro -o Makefile ) && $(MAKE) -f Makefile all
module-qtbase-clean: FORCE
	@if not exist qtbase\ mkdir qtbase\ & if not exist qtbase\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtbase\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtbase\qtbase.pro -o Makefile ) && $(MAKE) -f Makefile clean
module-qtbase-distclean: FORCE
	@if not exist qtbase\ mkdir qtbase\ & if not exist qtbase\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtbase\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtbase\qtbase.pro -o Makefile ) && $(MAKE) -f Makefile distclean
module-qtbase-install_subtargets: FORCE
	@if not exist qtbase\ mkdir qtbase\ & if not exist qtbase\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtbase\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtbase\qtbase.pro -o Makefile ) && $(MAKE) -f Makefile install
module-qtbase-uninstall_subtargets: FORCE
	@if not exist qtbase\ mkdir qtbase\ & if not exist qtbase\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtbase\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtbase\qtbase.pro -o Makefile ) && $(MAKE) -f Makefile uninstall
module-qtmacextras-qmake_all: module-qtbase-qmake_all FORCE
	@if not exist qtmacextras\ mkdir qtmacextras\ & if not exist qtmacextras\ exit 1
	cd qtmacextras\ && $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtmacextras\qtmacextras.pro -o Makefile
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtmacextras\ && $(MAKE) -f Makefile qmake_all
module-qtmacextras: module-qtbase FORCE
	@if not exist qtmacextras\ mkdir qtmacextras\ & if not exist qtmacextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtmacextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtmacextras\qtmacextras.pro -o Makefile ) && $(MAKE) -f Makefile
module-qtmacextras-make_first: module-qtbase-make_first FORCE
	@if not exist qtmacextras\ mkdir qtmacextras\ & if not exist qtmacextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtmacextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtmacextras\qtmacextras.pro -o Makefile ) && $(MAKE) -f Makefile 
module-qtmacextras-all: module-qtbase-all FORCE
	@if not exist qtmacextras\ mkdir qtmacextras\ & if not exist qtmacextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtmacextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtmacextras\qtmacextras.pro -o Makefile ) && $(MAKE) -f Makefile all
module-qtmacextras-clean: module-qtbase-clean FORCE
	@if not exist qtmacextras\ mkdir qtmacextras\ & if not exist qtmacextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtmacextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtmacextras\qtmacextras.pro -o Makefile ) && $(MAKE) -f Makefile clean
module-qtmacextras-distclean: module-qtbase-distclean FORCE
	@if not exist qtmacextras\ mkdir qtmacextras\ & if not exist qtmacextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtmacextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtmacextras\qtmacextras.pro -o Makefile ) && $(MAKE) -f Makefile distclean
module-qtmacextras-install_subtargets: module-qtbase-install_subtargets FORCE
	@if not exist qtmacextras\ mkdir qtmacextras\ & if not exist qtmacextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtmacextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtmacextras\qtmacextras.pro -o Makefile ) && $(MAKE) -f Makefile install
module-qtmacextras-uninstall_subtargets: module-qtbase-uninstall_subtargets FORCE
	@if not exist qtmacextras\ mkdir qtmacextras\ & if not exist qtmacextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtmacextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtmacextras\qtmacextras.pro -o Makefile ) && $(MAKE) -f Makefile uninstall
module-qtx11extras-qmake_all: module-qtbase-qmake_all FORCE
	@if not exist qtx11extras\ mkdir qtx11extras\ & if not exist qtx11extras\ exit 1
	cd qtx11extras\ && $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtx11extras\qtx11extras.pro -o Makefile
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtx11extras\ && $(MAKE) -f Makefile qmake_all
module-qtx11extras: module-qtbase FORCE
	@if not exist qtx11extras\ mkdir qtx11extras\ & if not exist qtx11extras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtx11extras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtx11extras\qtx11extras.pro -o Makefile ) && $(MAKE) -f Makefile
module-qtx11extras-make_first: module-qtbase-make_first FORCE
	@if not exist qtx11extras\ mkdir qtx11extras\ & if not exist qtx11extras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtx11extras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtx11extras\qtx11extras.pro -o Makefile ) && $(MAKE) -f Makefile 
module-qtx11extras-all: module-qtbase-all FORCE
	@if not exist qtx11extras\ mkdir qtx11extras\ & if not exist qtx11extras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtx11extras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtx11extras\qtx11extras.pro -o Makefile ) && $(MAKE) -f Makefile all
module-qtx11extras-clean: module-qtbase-clean FORCE
	@if not exist qtx11extras\ mkdir qtx11extras\ & if not exist qtx11extras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtx11extras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtx11extras\qtx11extras.pro -o Makefile ) && $(MAKE) -f Makefile clean
module-qtx11extras-distclean: module-qtbase-distclean FORCE
	@if not exist qtx11extras\ mkdir qtx11extras\ & if not exist qtx11extras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtx11extras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtx11extras\qtx11extras.pro -o Makefile ) && $(MAKE) -f Makefile distclean
module-qtx11extras-install_subtargets: module-qtbase-install_subtargets FORCE
	@if not exist qtx11extras\ mkdir qtx11extras\ & if not exist qtx11extras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtx11extras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtx11extras\qtx11extras.pro -o Makefile ) && $(MAKE) -f Makefile install
module-qtx11extras-uninstall_subtargets: module-qtbase-uninstall_subtargets FORCE
	@if not exist qtx11extras\ mkdir qtx11extras\ & if not exist qtx11extras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtx11extras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtx11extras\qtx11extras.pro -o Makefile ) && $(MAKE) -f Makefile uninstall
module-qtimageformats-qmake_all: module-qtbase-qmake_all FORCE
	@if not exist qtimageformats\ mkdir qtimageformats\ & if not exist qtimageformats\ exit 1
	cd qtimageformats\ && $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtimageformats\qtimageformats.pro -o Makefile
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtimageformats\ && $(MAKE) -f Makefile qmake_all
module-qtimageformats: module-qtbase FORCE
	@if not exist qtimageformats\ mkdir qtimageformats\ & if not exist qtimageformats\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtimageformats\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtimageformats\qtimageformats.pro -o Makefile ) && $(MAKE) -f Makefile
module-qtimageformats-make_first: module-qtbase-make_first FORCE
	@if not exist qtimageformats\ mkdir qtimageformats\ & if not exist qtimageformats\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtimageformats\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtimageformats\qtimageformats.pro -o Makefile ) && $(MAKE) -f Makefile 
module-qtimageformats-all: module-qtbase-all FORCE
	@if not exist qtimageformats\ mkdir qtimageformats\ & if not exist qtimageformats\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtimageformats\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtimageformats\qtimageformats.pro -o Makefile ) && $(MAKE) -f Makefile all
module-qtimageformats-clean: module-qtbase-clean FORCE
	@if not exist qtimageformats\ mkdir qtimageformats\ & if not exist qtimageformats\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtimageformats\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtimageformats\qtimageformats.pro -o Makefile ) && $(MAKE) -f Makefile clean
module-qtimageformats-distclean: module-qtbase-distclean FORCE
	@if not exist qtimageformats\ mkdir qtimageformats\ & if not exist qtimageformats\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtimageformats\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtimageformats\qtimageformats.pro -o Makefile ) && $(MAKE) -f Makefile distclean
module-qtimageformats-install_subtargets: module-qtbase-install_subtargets FORCE
	@if not exist qtimageformats\ mkdir qtimageformats\ & if not exist qtimageformats\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtimageformats\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtimageformats\qtimageformats.pro -o Makefile ) && $(MAKE) -f Makefile install
module-qtimageformats-uninstall_subtargets: module-qtbase-uninstall_subtargets FORCE
	@if not exist qtimageformats\ mkdir qtimageformats\ & if not exist qtimageformats\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtimageformats\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtimageformats\qtimageformats.pro -o Makefile ) && $(MAKE) -f Makefile uninstall
module-qtandroidextras-qmake_all: module-qtbase-qmake_all FORCE
	@if not exist qtandroidextras\ mkdir qtandroidextras\ & if not exist qtandroidextras\ exit 1
	cd qtandroidextras\ && $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtandroidextras\qtandroidextras.pro -o Makefile
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtandroidextras\ && $(MAKE) -f Makefile qmake_all
module-qtandroidextras: module-qtbase FORCE
	@if not exist qtandroidextras\ mkdir qtandroidextras\ & if not exist qtandroidextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtandroidextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtandroidextras\qtandroidextras.pro -o Makefile ) && $(MAKE) -f Makefile
module-qtandroidextras-make_first: module-qtbase-make_first FORCE
	@if not exist qtandroidextras\ mkdir qtandroidextras\ & if not exist qtandroidextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtandroidextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtandroidextras\qtandroidextras.pro -o Makefile ) && $(MAKE) -f Makefile 
module-qtandroidextras-all: module-qtbase-all FORCE
	@if not exist qtandroidextras\ mkdir qtandroidextras\ & if not exist qtandroidextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtandroidextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtandroidextras\qtandroidextras.pro -o Makefile ) && $(MAKE) -f Makefile all
module-qtandroidextras-clean: module-qtbase-clean FORCE
	@if not exist qtandroidextras\ mkdir qtandroidextras\ & if not exist qtandroidextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtandroidextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtandroidextras\qtandroidextras.pro -o Makefile ) && $(MAKE) -f Makefile clean
module-qtandroidextras-distclean: module-qtbase-distclean FORCE
	@if not exist qtandroidextras\ mkdir qtandroidextras\ & if not exist qtandroidextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtandroidextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtandroidextras\qtandroidextras.pro -o Makefile ) && $(MAKE) -f Makefile distclean
module-qtandroidextras-install_subtargets: module-qtbase-install_subtargets FORCE
	@if not exist qtandroidextras\ mkdir qtandroidextras\ & if not exist qtandroidextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtandroidextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtandroidextras\qtandroidextras.pro -o Makefile ) && $(MAKE) -f Makefile install
module-qtandroidextras-uninstall_subtargets: module-qtbase-uninstall_subtargets FORCE
	@if not exist qtandroidextras\ mkdir qtandroidextras\ & if not exist qtandroidextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtandroidextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtandroidextras\qtandroidextras.pro -o Makefile ) && $(MAKE) -f Makefile uninstall
module-qtserialport-qmake_all: module-qtbase-qmake_all FORCE
	@if not exist qtserialport\ mkdir qtserialport\ & if not exist qtserialport\ exit 1
	cd qtserialport\ && $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtserialport\qtserialport.pro -o Makefile
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtserialport\ && $(MAKE) -f Makefile qmake_all
module-qtserialport: module-qtbase FORCE
	@if not exist qtserialport\ mkdir qtserialport\ & if not exist qtserialport\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtserialport\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtserialport\qtserialport.pro -o Makefile ) && $(MAKE) -f Makefile
module-qtserialport-make_first: module-qtbase-make_first FORCE
	@if not exist qtserialport\ mkdir qtserialport\ & if not exist qtserialport\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtserialport\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtserialport\qtserialport.pro -o Makefile ) && $(MAKE) -f Makefile 
module-qtserialport-all: module-qtbase-all FORCE
	@if not exist qtserialport\ mkdir qtserialport\ & if not exist qtserialport\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtserialport\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtserialport\qtserialport.pro -o Makefile ) && $(MAKE) -f Makefile all
module-qtserialport-clean: module-qtbase-clean FORCE
	@if not exist qtserialport\ mkdir qtserialport\ & if not exist qtserialport\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtserialport\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtserialport\qtserialport.pro -o Makefile ) && $(MAKE) -f Makefile clean
module-qtserialport-distclean: module-qtbase-distclean FORCE
	@if not exist qtserialport\ mkdir qtserialport\ & if not exist qtserialport\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtserialport\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtserialport\qtserialport.pro -o Makefile ) && $(MAKE) -f Makefile distclean
module-qtserialport-install_subtargets: module-qtbase-install_subtargets FORCE
	@if not exist qtserialport\ mkdir qtserialport\ & if not exist qtserialport\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtserialport\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtserialport\qtserialport.pro -o Makefile ) && $(MAKE) -f Makefile install
module-qtserialport-uninstall_subtargets: module-qtbase-uninstall_subtargets FORCE
	@if not exist qtserialport\ mkdir qtserialport\ & if not exist qtserialport\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtserialport\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtserialport\qtserialport.pro -o Makefile ) && $(MAKE) -f Makefile uninstall
module-qtserialbus-qmake_all: module-qtserialport-qmake_all FORCE
	@if not exist qtserialbus\ mkdir qtserialbus\ & if not exist qtserialbus\ exit 1
	cd qtserialbus\ && $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtserialbus\qtserialbus.pro -o Makefile
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtserialbus\ && $(MAKE) -f Makefile qmake_all
module-qtserialbus: module-qtserialport FORCE
	@if not exist qtserialbus\ mkdir qtserialbus\ & if not exist qtserialbus\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtserialbus\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtserialbus\qtserialbus.pro -o Makefile ) && $(MAKE) -f Makefile
module-qtserialbus-make_first: module-qtserialport-make_first FORCE
	@if not exist qtserialbus\ mkdir qtserialbus\ & if not exist qtserialbus\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtserialbus\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtserialbus\qtserialbus.pro -o Makefile ) && $(MAKE) -f Makefile 
module-qtserialbus-all: module-qtserialport-all FORCE
	@if not exist qtserialbus\ mkdir qtserialbus\ & if not exist qtserialbus\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtserialbus\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtserialbus\qtserialbus.pro -o Makefile ) && $(MAKE) -f Makefile all
module-qtserialbus-clean: module-qtserialport-clean FORCE
	@if not exist qtserialbus\ mkdir qtserialbus\ & if not exist qtserialbus\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtserialbus\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtserialbus\qtserialbus.pro -o Makefile ) && $(MAKE) -f Makefile clean
module-qtserialbus-distclean: module-qtserialport-distclean FORCE
	@if not exist qtserialbus\ mkdir qtserialbus\ & if not exist qtserialbus\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtserialbus\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtserialbus\qtserialbus.pro -o Makefile ) && $(MAKE) -f Makefile distclean
module-qtserialbus-install_subtargets: module-qtserialport-install_subtargets FORCE
	@if not exist qtserialbus\ mkdir qtserialbus\ & if not exist qtserialbus\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtserialbus\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtserialbus\qtserialbus.pro -o Makefile ) && $(MAKE) -f Makefile install
module-qtserialbus-uninstall_subtargets: module-qtserialport-uninstall_subtargets FORCE
	@if not exist qtserialbus\ mkdir qtserialbus\ & if not exist qtserialbus\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtserialbus\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtserialbus\qtserialbus.pro -o Makefile ) && $(MAKE) -f Makefile uninstall
module-qtactiveqt-qmake_all: module-qtbase-qmake_all FORCE
	@if not exist qtactiveqt\ mkdir qtactiveqt\ & if not exist qtactiveqt\ exit 1
	cd qtactiveqt\ && $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtactiveqt\qtactiveqt.pro -o Makefile
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtactiveqt\ && $(MAKE) -f Makefile qmake_all
module-qtactiveqt: module-qtbase FORCE
	@if not exist qtactiveqt\ mkdir qtactiveqt\ & if not exist qtactiveqt\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtactiveqt\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtactiveqt\qtactiveqt.pro -o Makefile ) && $(MAKE) -f Makefile
module-qtactiveqt-make_first: module-qtbase-make_first FORCE
	@if not exist qtactiveqt\ mkdir qtactiveqt\ & if not exist qtactiveqt\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtactiveqt\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtactiveqt\qtactiveqt.pro -o Makefile ) && $(MAKE) -f Makefile 
module-qtactiveqt-all: module-qtbase-all FORCE
	@if not exist qtactiveqt\ mkdir qtactiveqt\ & if not exist qtactiveqt\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtactiveqt\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtactiveqt\qtactiveqt.pro -o Makefile ) && $(MAKE) -f Makefile all
module-qtactiveqt-clean: module-qtbase-clean FORCE
	@if not exist qtactiveqt\ mkdir qtactiveqt\ & if not exist qtactiveqt\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtactiveqt\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtactiveqt\qtactiveqt.pro -o Makefile ) && $(MAKE) -f Makefile clean
module-qtactiveqt-distclean: module-qtbase-distclean FORCE
	@if not exist qtactiveqt\ mkdir qtactiveqt\ & if not exist qtactiveqt\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtactiveqt\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtactiveqt\qtactiveqt.pro -o Makefile ) && $(MAKE) -f Makefile distclean
module-qtactiveqt-install_subtargets: module-qtbase-install_subtargets FORCE
	@if not exist qtactiveqt\ mkdir qtactiveqt\ & if not exist qtactiveqt\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtactiveqt\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtactiveqt\qtactiveqt.pro -o Makefile ) && $(MAKE) -f Makefile install
module-qtactiveqt-uninstall_subtargets: module-qtbase-uninstall_subtargets FORCE
	@if not exist qtactiveqt\ mkdir qtactiveqt\ & if not exist qtactiveqt\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtactiveqt\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtactiveqt\qtactiveqt.pro -o Makefile ) && $(MAKE) -f Makefile uninstall
module-qtxmlpatterns-qmake_all: module-qtbase-qmake_all FORCE
	@if not exist qtxmlpatterns\ mkdir qtxmlpatterns\ & if not exist qtxmlpatterns\ exit 1
	cd qtxmlpatterns\ && $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtxmlpatterns\qtxmlpatterns.pro -o Makefile
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtxmlpatterns\ && $(MAKE) -f Makefile qmake_all
module-qtxmlpatterns: module-qtbase FORCE
	@if not exist qtxmlpatterns\ mkdir qtxmlpatterns\ & if not exist qtxmlpatterns\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtxmlpatterns\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtxmlpatterns\qtxmlpatterns.pro -o Makefile ) && $(MAKE) -f Makefile
module-qtxmlpatterns-make_first: module-qtbase-make_first FORCE
	@if not exist qtxmlpatterns\ mkdir qtxmlpatterns\ & if not exist qtxmlpatterns\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtxmlpatterns\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtxmlpatterns\qtxmlpatterns.pro -o Makefile ) && $(MAKE) -f Makefile 
module-qtxmlpatterns-all: module-qtbase-all FORCE
	@if not exist qtxmlpatterns\ mkdir qtxmlpatterns\ & if not exist qtxmlpatterns\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtxmlpatterns\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtxmlpatterns\qtxmlpatterns.pro -o Makefile ) && $(MAKE) -f Makefile all
module-qtxmlpatterns-clean: module-qtbase-clean FORCE
	@if not exist qtxmlpatterns\ mkdir qtxmlpatterns\ & if not exist qtxmlpatterns\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtxmlpatterns\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtxmlpatterns\qtxmlpatterns.pro -o Makefile ) && $(MAKE) -f Makefile clean
module-qtxmlpatterns-distclean: module-qtbase-distclean FORCE
	@if not exist qtxmlpatterns\ mkdir qtxmlpatterns\ & if not exist qtxmlpatterns\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtxmlpatterns\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtxmlpatterns\qtxmlpatterns.pro -o Makefile ) && $(MAKE) -f Makefile distclean
module-qtxmlpatterns-install_subtargets: module-qtbase-install_subtargets FORCE
	@if not exist qtxmlpatterns\ mkdir qtxmlpatterns\ & if not exist qtxmlpatterns\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtxmlpatterns\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtxmlpatterns\qtxmlpatterns.pro -o Makefile ) && $(MAKE) -f Makefile install
module-qtxmlpatterns-uninstall_subtargets: module-qtbase-uninstall_subtargets FORCE
	@if not exist qtxmlpatterns\ mkdir qtxmlpatterns\ & if not exist qtxmlpatterns\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtxmlpatterns\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtxmlpatterns\qtxmlpatterns.pro -o Makefile ) && $(MAKE) -f Makefile uninstall
module-qtsvg-qmake_all: module-qtbase-qmake_all FORCE
	@if not exist qtsvg\ mkdir qtsvg\ & if not exist qtsvg\ exit 1
	cd qtsvg\ && $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtsvg\qtsvg.pro -o Makefile
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtsvg\ && $(MAKE) -f Makefile qmake_all
module-qtsvg: module-qtbase FORCE
	@if not exist qtsvg\ mkdir qtsvg\ & if not exist qtsvg\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtsvg\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtsvg\qtsvg.pro -o Makefile ) && $(MAKE) -f Makefile
module-qtsvg-make_first: module-qtbase-make_first FORCE
	@if not exist qtsvg\ mkdir qtsvg\ & if not exist qtsvg\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtsvg\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtsvg\qtsvg.pro -o Makefile ) && $(MAKE) -f Makefile 
module-qtsvg-all: module-qtbase-all FORCE
	@if not exist qtsvg\ mkdir qtsvg\ & if not exist qtsvg\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtsvg\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtsvg\qtsvg.pro -o Makefile ) && $(MAKE) -f Makefile all
module-qtsvg-clean: module-qtbase-clean FORCE
	@if not exist qtsvg\ mkdir qtsvg\ & if not exist qtsvg\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtsvg\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtsvg\qtsvg.pro -o Makefile ) && $(MAKE) -f Makefile clean
module-qtsvg-distclean: module-qtbase-distclean FORCE
	@if not exist qtsvg\ mkdir qtsvg\ & if not exist qtsvg\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtsvg\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtsvg\qtsvg.pro -o Makefile ) && $(MAKE) -f Makefile distclean
module-qtsvg-install_subtargets: module-qtbase-install_subtargets FORCE
	@if not exist qtsvg\ mkdir qtsvg\ & if not exist qtsvg\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtsvg\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtsvg\qtsvg.pro -o Makefile ) && $(MAKE) -f Makefile install
module-qtsvg-uninstall_subtargets: module-qtbase-uninstall_subtargets FORCE
	@if not exist qtsvg\ mkdir qtsvg\ & if not exist qtsvg\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtsvg\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtsvg\qtsvg.pro -o Makefile ) && $(MAKE) -f Makefile uninstall
module-qtdeclarative-qmake_all: module-qtbase-qmake_all module-qtsvg-qmake_all module-qtxmlpatterns-qmake_all FORCE
	@if not exist qtdeclarative\ mkdir qtdeclarative\ & if not exist qtdeclarative\ exit 1
	cd qtdeclarative\ && $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtdeclarative\qtdeclarative.pro -o Makefile
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtdeclarative\ && $(MAKE) -f Makefile qmake_all
module-qtdeclarative: module-qtbase \
		module-qtsvg \
		module-qtxmlpatterns FORCE
	@if not exist qtdeclarative\ mkdir qtdeclarative\ & if not exist qtdeclarative\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtdeclarative\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtdeclarative\qtdeclarative.pro -o Makefile ) && $(MAKE) -f Makefile
module-qtdeclarative-make_first: module-qtbase-make_first module-qtsvg-make_first module-qtxmlpatterns-make_first FORCE
	@if not exist qtdeclarative\ mkdir qtdeclarative\ & if not exist qtdeclarative\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtdeclarative\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtdeclarative\qtdeclarative.pro -o Makefile ) && $(MAKE) -f Makefile 
module-qtdeclarative-all: module-qtbase-all module-qtsvg-all module-qtxmlpatterns-all FORCE
	@if not exist qtdeclarative\ mkdir qtdeclarative\ & if not exist qtdeclarative\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtdeclarative\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtdeclarative\qtdeclarative.pro -o Makefile ) && $(MAKE) -f Makefile all
module-qtdeclarative-clean: module-qtbase-clean module-qtsvg-clean module-qtxmlpatterns-clean FORCE
	@if not exist qtdeclarative\ mkdir qtdeclarative\ & if not exist qtdeclarative\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtdeclarative\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtdeclarative\qtdeclarative.pro -o Makefile ) && $(MAKE) -f Makefile clean
module-qtdeclarative-distclean: module-qtbase-distclean module-qtsvg-distclean module-qtxmlpatterns-distclean FORCE
	@if not exist qtdeclarative\ mkdir qtdeclarative\ & if not exist qtdeclarative\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtdeclarative\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtdeclarative\qtdeclarative.pro -o Makefile ) && $(MAKE) -f Makefile distclean
module-qtdeclarative-install_subtargets: module-qtbase-install_subtargets module-qtsvg-install_subtargets module-qtxmlpatterns-install_subtargets FORCE
	@if not exist qtdeclarative\ mkdir qtdeclarative\ & if not exist qtdeclarative\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtdeclarative\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtdeclarative\qtdeclarative.pro -o Makefile ) && $(MAKE) -f Makefile install
module-qtdeclarative-uninstall_subtargets: module-qtbase-uninstall_subtargets module-qtsvg-uninstall_subtargets module-qtxmlpatterns-uninstall_subtargets FORCE
	@if not exist qtdeclarative\ mkdir qtdeclarative\ & if not exist qtdeclarative\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtdeclarative\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtdeclarative\qtdeclarative.pro -o Makefile ) && $(MAKE) -f Makefile uninstall
module-qtcanvas3d-qmake_all: module-qtdeclarative-qmake_all FORCE
	@if not exist qtcanvas3d\ mkdir qtcanvas3d\ & if not exist qtcanvas3d\ exit 1
	cd qtcanvas3d\ && $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtcanvas3d\qtcanvas3d.pro -o Makefile
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtcanvas3d\ && $(MAKE) -f Makefile qmake_all
module-qtcanvas3d: module-qtdeclarative FORCE
	@if not exist qtcanvas3d\ mkdir qtcanvas3d\ & if not exist qtcanvas3d\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtcanvas3d\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtcanvas3d\qtcanvas3d.pro -o Makefile ) && $(MAKE) -f Makefile
module-qtcanvas3d-make_first: module-qtdeclarative-make_first FORCE
	@if not exist qtcanvas3d\ mkdir qtcanvas3d\ & if not exist qtcanvas3d\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtcanvas3d\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtcanvas3d\qtcanvas3d.pro -o Makefile ) && $(MAKE) -f Makefile 
module-qtcanvas3d-all: module-qtdeclarative-all FORCE
	@if not exist qtcanvas3d\ mkdir qtcanvas3d\ & if not exist qtcanvas3d\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtcanvas3d\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtcanvas3d\qtcanvas3d.pro -o Makefile ) && $(MAKE) -f Makefile all
module-qtcanvas3d-clean: module-qtdeclarative-clean FORCE
	@if not exist qtcanvas3d\ mkdir qtcanvas3d\ & if not exist qtcanvas3d\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtcanvas3d\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtcanvas3d\qtcanvas3d.pro -o Makefile ) && $(MAKE) -f Makefile clean
module-qtcanvas3d-distclean: module-qtdeclarative-distclean FORCE
	@if not exist qtcanvas3d\ mkdir qtcanvas3d\ & if not exist qtcanvas3d\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtcanvas3d\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtcanvas3d\qtcanvas3d.pro -o Makefile ) && $(MAKE) -f Makefile distclean
module-qtcanvas3d-install_subtargets: module-qtdeclarative-install_subtargets FORCE
	@if not exist qtcanvas3d\ mkdir qtcanvas3d\ & if not exist qtcanvas3d\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtcanvas3d\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtcanvas3d\qtcanvas3d.pro -o Makefile ) && $(MAKE) -f Makefile install
module-qtcanvas3d-uninstall_subtargets: module-qtdeclarative-uninstall_subtargets FORCE
	@if not exist qtcanvas3d\ mkdir qtcanvas3d\ & if not exist qtcanvas3d\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtcanvas3d\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtcanvas3d\qtcanvas3d.pro -o Makefile ) && $(MAKE) -f Makefile uninstall
module-qtenginio-qmake_all: module-qtdeclarative-qmake_all FORCE
	@if not exist qtenginio\ mkdir qtenginio\ & if not exist qtenginio\ exit 1
	cd qtenginio\ && $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtenginio\qtenginio.pro -o Makefile
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtenginio\ && $(MAKE) -f Makefile qmake_all
module-qtenginio: module-qtdeclarative FORCE
	@if not exist qtenginio\ mkdir qtenginio\ & if not exist qtenginio\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtenginio\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtenginio\qtenginio.pro -o Makefile ) && $(MAKE) -f Makefile
module-qtenginio-make_first: module-qtdeclarative-make_first FORCE
	@if not exist qtenginio\ mkdir qtenginio\ & if not exist qtenginio\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtenginio\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtenginio\qtenginio.pro -o Makefile ) && $(MAKE) -f Makefile 
module-qtenginio-all: module-qtdeclarative-all FORCE
	@if not exist qtenginio\ mkdir qtenginio\ & if not exist qtenginio\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtenginio\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtenginio\qtenginio.pro -o Makefile ) && $(MAKE) -f Makefile all
module-qtenginio-clean: module-qtdeclarative-clean FORCE
	@if not exist qtenginio\ mkdir qtenginio\ & if not exist qtenginio\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtenginio\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtenginio\qtenginio.pro -o Makefile ) && $(MAKE) -f Makefile clean
module-qtenginio-distclean: module-qtdeclarative-distclean FORCE
	@if not exist qtenginio\ mkdir qtenginio\ & if not exist qtenginio\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtenginio\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtenginio\qtenginio.pro -o Makefile ) && $(MAKE) -f Makefile distclean
module-qtenginio-install_subtargets: module-qtdeclarative-install_subtargets FORCE
	@if not exist qtenginio\ mkdir qtenginio\ & if not exist qtenginio\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtenginio\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtenginio\qtenginio.pro -o Makefile ) && $(MAKE) -f Makefile install
module-qtenginio-uninstall_subtargets: module-qtdeclarative-uninstall_subtargets FORCE
	@if not exist qtenginio\ mkdir qtenginio\ & if not exist qtenginio\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtenginio\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtenginio\qtenginio.pro -o Makefile ) && $(MAKE) -f Makefile uninstall
module-qt3d-qmake_all: module-qtdeclarative-qmake_all module-qtimageformats-qmake_all FORCE
	@if not exist qt3d\ mkdir qt3d\ & if not exist qt3d\ exit 1
	cd qt3d\ && $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qt3d\qt3d.pro -o Makefile
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qt3d\ && $(MAKE) -f Makefile qmake_all
module-qt3d: module-qtdeclarative \
		module-qtimageformats FORCE
	@if not exist qt3d\ mkdir qt3d\ & if not exist qt3d\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qt3d\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qt3d\qt3d.pro -o Makefile ) && $(MAKE) -f Makefile
module-qt3d-make_first: module-qtdeclarative-make_first module-qtimageformats-make_first FORCE
	@if not exist qt3d\ mkdir qt3d\ & if not exist qt3d\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qt3d\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qt3d\qt3d.pro -o Makefile ) && $(MAKE) -f Makefile 
module-qt3d-all: module-qtdeclarative-all module-qtimageformats-all FORCE
	@if not exist qt3d\ mkdir qt3d\ & if not exist qt3d\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qt3d\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qt3d\qt3d.pro -o Makefile ) && $(MAKE) -f Makefile all
module-qt3d-clean: module-qtdeclarative-clean module-qtimageformats-clean FORCE
	@if not exist qt3d\ mkdir qt3d\ & if not exist qt3d\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qt3d\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qt3d\qt3d.pro -o Makefile ) && $(MAKE) -f Makefile clean
module-qt3d-distclean: module-qtdeclarative-distclean module-qtimageformats-distclean FORCE
	@if not exist qt3d\ mkdir qt3d\ & if not exist qt3d\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qt3d\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qt3d\qt3d.pro -o Makefile ) && $(MAKE) -f Makefile distclean
module-qt3d-install_subtargets: module-qtdeclarative-install_subtargets module-qtimageformats-install_subtargets FORCE
	@if not exist qt3d\ mkdir qt3d\ & if not exist qt3d\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qt3d\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qt3d\qt3d.pro -o Makefile ) && $(MAKE) -f Makefile install
module-qt3d-uninstall_subtargets: module-qtdeclarative-uninstall_subtargets module-qtimageformats-uninstall_subtargets FORCE
	@if not exist qt3d\ mkdir qt3d\ & if not exist qt3d\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qt3d\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qt3d\qt3d.pro -o Makefile ) && $(MAKE) -f Makefile uninstall
module-qtwayland-qmake_all: module-qtbase-qmake_all module-qtdeclarative-qmake_all FORCE
	@if not exist qtwayland\ mkdir qtwayland\ & if not exist qtwayland\ exit 1
	cd qtwayland\ && $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwayland\qtwayland.pro -o Makefile
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwayland\ && $(MAKE) -f Makefile qmake_all
module-qtwayland: module-qtbase \
		module-qtdeclarative FORCE
	@if not exist qtwayland\ mkdir qtwayland\ & if not exist qtwayland\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwayland\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwayland\qtwayland.pro -o Makefile ) && $(MAKE) -f Makefile
module-qtwayland-make_first: module-qtbase-make_first module-qtdeclarative-make_first FORCE
	@if not exist qtwayland\ mkdir qtwayland\ & if not exist qtwayland\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwayland\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwayland\qtwayland.pro -o Makefile ) && $(MAKE) -f Makefile 
module-qtwayland-all: module-qtbase-all module-qtdeclarative-all FORCE
	@if not exist qtwayland\ mkdir qtwayland\ & if not exist qtwayland\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwayland\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwayland\qtwayland.pro -o Makefile ) && $(MAKE) -f Makefile all
module-qtwayland-clean: module-qtbase-clean module-qtdeclarative-clean FORCE
	@if not exist qtwayland\ mkdir qtwayland\ & if not exist qtwayland\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwayland\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwayland\qtwayland.pro -o Makefile ) && $(MAKE) -f Makefile clean
module-qtwayland-distclean: module-qtbase-distclean module-qtdeclarative-distclean FORCE
	@if not exist qtwayland\ mkdir qtwayland\ & if not exist qtwayland\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwayland\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwayland\qtwayland.pro -o Makefile ) && $(MAKE) -f Makefile distclean
module-qtwayland-install_subtargets: module-qtbase-install_subtargets module-qtdeclarative-install_subtargets FORCE
	@if not exist qtwayland\ mkdir qtwayland\ & if not exist qtwayland\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwayland\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwayland\qtwayland.pro -o Makefile ) && $(MAKE) -f Makefile install
module-qtwayland-uninstall_subtargets: module-qtbase-uninstall_subtargets module-qtdeclarative-uninstall_subtargets FORCE
	@if not exist qtwayland\ mkdir qtwayland\ & if not exist qtwayland\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwayland\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwayland\qtwayland.pro -o Makefile ) && $(MAKE) -f Makefile uninstall
module-qtconnectivity-qmake_all: module-qtbase-qmake_all module-qtdeclarative-qmake_all module-qtandroidextras-qmake_all FORCE
	@if not exist qtconnectivity\ mkdir qtconnectivity\ & if not exist qtconnectivity\ exit 1
	cd qtconnectivity\ && $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtconnectivity\qtconnectivity.pro -o Makefile
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtconnectivity\ && $(MAKE) -f Makefile qmake_all
module-qtconnectivity: module-qtbase \
		module-qtdeclarative \
		module-qtandroidextras FORCE
	@if not exist qtconnectivity\ mkdir qtconnectivity\ & if not exist qtconnectivity\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtconnectivity\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtconnectivity\qtconnectivity.pro -o Makefile ) && $(MAKE) -f Makefile
module-qtconnectivity-make_first: module-qtbase-make_first module-qtdeclarative-make_first module-qtandroidextras-make_first FORCE
	@if not exist qtconnectivity\ mkdir qtconnectivity\ & if not exist qtconnectivity\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtconnectivity\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtconnectivity\qtconnectivity.pro -o Makefile ) && $(MAKE) -f Makefile 
module-qtconnectivity-all: module-qtbase-all module-qtdeclarative-all module-qtandroidextras-all FORCE
	@if not exist qtconnectivity\ mkdir qtconnectivity\ & if not exist qtconnectivity\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtconnectivity\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtconnectivity\qtconnectivity.pro -o Makefile ) && $(MAKE) -f Makefile all
module-qtconnectivity-clean: module-qtbase-clean module-qtdeclarative-clean module-qtandroidextras-clean FORCE
	@if not exist qtconnectivity\ mkdir qtconnectivity\ & if not exist qtconnectivity\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtconnectivity\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtconnectivity\qtconnectivity.pro -o Makefile ) && $(MAKE) -f Makefile clean
module-qtconnectivity-distclean: module-qtbase-distclean module-qtdeclarative-distclean module-qtandroidextras-distclean FORCE
	@if not exist qtconnectivity\ mkdir qtconnectivity\ & if not exist qtconnectivity\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtconnectivity\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtconnectivity\qtconnectivity.pro -o Makefile ) && $(MAKE) -f Makefile distclean
module-qtconnectivity-install_subtargets: module-qtbase-install_subtargets module-qtdeclarative-install_subtargets module-qtandroidextras-install_subtargets FORCE
	@if not exist qtconnectivity\ mkdir qtconnectivity\ & if not exist qtconnectivity\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtconnectivity\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtconnectivity\qtconnectivity.pro -o Makefile ) && $(MAKE) -f Makefile install
module-qtconnectivity-uninstall_subtargets: module-qtbase-uninstall_subtargets module-qtdeclarative-uninstall_subtargets module-qtandroidextras-uninstall_subtargets FORCE
	@if not exist qtconnectivity\ mkdir qtconnectivity\ & if not exist qtconnectivity\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtconnectivity\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtconnectivity\qtconnectivity.pro -o Makefile ) && $(MAKE) -f Makefile uninstall
module-qtwebsockets-qmake_all: module-qtbase-qmake_all module-qtdeclarative-qmake_all FORCE
	@if not exist qtwebsockets\ mkdir qtwebsockets\ & if not exist qtwebsockets\ exit 1
	cd qtwebsockets\ && $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebsockets\qtwebsockets.pro -o Makefile
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebsockets\ && $(MAKE) -f Makefile qmake_all
module-qtwebsockets: module-qtbase \
		module-qtdeclarative FORCE
	@if not exist qtwebsockets\ mkdir qtwebsockets\ & if not exist qtwebsockets\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebsockets\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebsockets\qtwebsockets.pro -o Makefile ) && $(MAKE) -f Makefile
module-qtwebsockets-make_first: module-qtbase-make_first module-qtdeclarative-make_first FORCE
	@if not exist qtwebsockets\ mkdir qtwebsockets\ & if not exist qtwebsockets\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebsockets\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebsockets\qtwebsockets.pro -o Makefile ) && $(MAKE) -f Makefile 
module-qtwebsockets-all: module-qtbase-all module-qtdeclarative-all FORCE
	@if not exist qtwebsockets\ mkdir qtwebsockets\ & if not exist qtwebsockets\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebsockets\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebsockets\qtwebsockets.pro -o Makefile ) && $(MAKE) -f Makefile all
module-qtwebsockets-clean: module-qtbase-clean module-qtdeclarative-clean FORCE
	@if not exist qtwebsockets\ mkdir qtwebsockets\ & if not exist qtwebsockets\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebsockets\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebsockets\qtwebsockets.pro -o Makefile ) && $(MAKE) -f Makefile clean
module-qtwebsockets-distclean: module-qtbase-distclean module-qtdeclarative-distclean FORCE
	@if not exist qtwebsockets\ mkdir qtwebsockets\ & if not exist qtwebsockets\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebsockets\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebsockets\qtwebsockets.pro -o Makefile ) && $(MAKE) -f Makefile distclean
module-qtwebsockets-install_subtargets: module-qtbase-install_subtargets module-qtdeclarative-install_subtargets FORCE
	@if not exist qtwebsockets\ mkdir qtwebsockets\ & if not exist qtwebsockets\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebsockets\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebsockets\qtwebsockets.pro -o Makefile ) && $(MAKE) -f Makefile install
module-qtwebsockets-uninstall_subtargets: module-qtbase-uninstall_subtargets module-qtdeclarative-uninstall_subtargets FORCE
	@if not exist qtwebsockets\ mkdir qtwebsockets\ & if not exist qtwebsockets\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebsockets\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebsockets\qtwebsockets.pro -o Makefile ) && $(MAKE) -f Makefile uninstall
module-qtwebchannel-qmake_all: module-qtbase-qmake_all module-qtdeclarative-qmake_all module-qtwebsockets-qmake_all FORCE
	@if not exist qtwebchannel\ mkdir qtwebchannel\ & if not exist qtwebchannel\ exit 1
	cd qtwebchannel\ && $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebchannel\qtwebchannel.pro -o Makefile
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebchannel\ && $(MAKE) -f Makefile qmake_all
module-qtwebchannel: module-qtbase \
		module-qtdeclarative \
		module-qtwebsockets FORCE
	@if not exist qtwebchannel\ mkdir qtwebchannel\ & if not exist qtwebchannel\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebchannel\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebchannel\qtwebchannel.pro -o Makefile ) && $(MAKE) -f Makefile
module-qtwebchannel-make_first: module-qtbase-make_first module-qtdeclarative-make_first module-qtwebsockets-make_first FORCE
	@if not exist qtwebchannel\ mkdir qtwebchannel\ & if not exist qtwebchannel\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebchannel\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebchannel\qtwebchannel.pro -o Makefile ) && $(MAKE) -f Makefile 
module-qtwebchannel-all: module-qtbase-all module-qtdeclarative-all module-qtwebsockets-all FORCE
	@if not exist qtwebchannel\ mkdir qtwebchannel\ & if not exist qtwebchannel\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebchannel\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebchannel\qtwebchannel.pro -o Makefile ) && $(MAKE) -f Makefile all
module-qtwebchannel-clean: module-qtbase-clean module-qtdeclarative-clean module-qtwebsockets-clean FORCE
	@if not exist qtwebchannel\ mkdir qtwebchannel\ & if not exist qtwebchannel\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebchannel\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebchannel\qtwebchannel.pro -o Makefile ) && $(MAKE) -f Makefile clean
module-qtwebchannel-distclean: module-qtbase-distclean module-qtdeclarative-distclean module-qtwebsockets-distclean FORCE
	@if not exist qtwebchannel\ mkdir qtwebchannel\ & if not exist qtwebchannel\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebchannel\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebchannel\qtwebchannel.pro -o Makefile ) && $(MAKE) -f Makefile distclean
module-qtwebchannel-install_subtargets: module-qtbase-install_subtargets module-qtdeclarative-install_subtargets module-qtwebsockets-install_subtargets FORCE
	@if not exist qtwebchannel\ mkdir qtwebchannel\ & if not exist qtwebchannel\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebchannel\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebchannel\qtwebchannel.pro -o Makefile ) && $(MAKE) -f Makefile install
module-qtwebchannel-uninstall_subtargets: module-qtbase-uninstall_subtargets module-qtdeclarative-uninstall_subtargets module-qtwebsockets-uninstall_subtargets FORCE
	@if not exist qtwebchannel\ mkdir qtwebchannel\ & if not exist qtwebchannel\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebchannel\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebchannel\qtwebchannel.pro -o Makefile ) && $(MAKE) -f Makefile uninstall
module-qtsensors-qmake_all: module-qtbase-qmake_all module-qtdeclarative-qmake_all FORCE
	@if not exist qtsensors\ mkdir qtsensors\ & if not exist qtsensors\ exit 1
	cd qtsensors\ && $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtsensors\qtsensors.pro -o Makefile
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtsensors\ && $(MAKE) -f Makefile qmake_all
module-qtsensors: module-qtbase \
		module-qtdeclarative FORCE
	@if not exist qtsensors\ mkdir qtsensors\ & if not exist qtsensors\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtsensors\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtsensors\qtsensors.pro -o Makefile ) && $(MAKE) -f Makefile
module-qtsensors-make_first: module-qtbase-make_first module-qtdeclarative-make_first FORCE
	@if not exist qtsensors\ mkdir qtsensors\ & if not exist qtsensors\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtsensors\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtsensors\qtsensors.pro -o Makefile ) && $(MAKE) -f Makefile 
module-qtsensors-all: module-qtbase-all module-qtdeclarative-all FORCE
	@if not exist qtsensors\ mkdir qtsensors\ & if not exist qtsensors\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtsensors\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtsensors\qtsensors.pro -o Makefile ) && $(MAKE) -f Makefile all
module-qtsensors-clean: module-qtbase-clean module-qtdeclarative-clean FORCE
	@if not exist qtsensors\ mkdir qtsensors\ & if not exist qtsensors\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtsensors\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtsensors\qtsensors.pro -o Makefile ) && $(MAKE) -f Makefile clean
module-qtsensors-distclean: module-qtbase-distclean module-qtdeclarative-distclean FORCE
	@if not exist qtsensors\ mkdir qtsensors\ & if not exist qtsensors\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtsensors\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtsensors\qtsensors.pro -o Makefile ) && $(MAKE) -f Makefile distclean
module-qtsensors-install_subtargets: module-qtbase-install_subtargets module-qtdeclarative-install_subtargets FORCE
	@if not exist qtsensors\ mkdir qtsensors\ & if not exist qtsensors\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtsensors\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtsensors\qtsensors.pro -o Makefile ) && $(MAKE) -f Makefile install
module-qtsensors-uninstall_subtargets: module-qtbase-uninstall_subtargets module-qtdeclarative-uninstall_subtargets FORCE
	@if not exist qtsensors\ mkdir qtsensors\ & if not exist qtsensors\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtsensors\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtsensors\qtsensors.pro -o Makefile ) && $(MAKE) -f Makefile uninstall
module-qtmultimedia-qmake_all: module-qtbase-qmake_all module-qtdeclarative-qmake_all FORCE
	@if not exist qtmultimedia\ mkdir qtmultimedia\ & if not exist qtmultimedia\ exit 1
	cd qtmultimedia\ && $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtmultimedia\qtmultimedia.pro -o Makefile
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtmultimedia\ && $(MAKE) -f Makefile qmake_all
module-qtmultimedia: module-qtbase \
		module-qtdeclarative FORCE
	@if not exist qtmultimedia\ mkdir qtmultimedia\ & if not exist qtmultimedia\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtmultimedia\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtmultimedia\qtmultimedia.pro -o Makefile ) && $(MAKE) -f Makefile
module-qtmultimedia-make_first: module-qtbase-make_first module-qtdeclarative-make_first FORCE
	@if not exist qtmultimedia\ mkdir qtmultimedia\ & if not exist qtmultimedia\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtmultimedia\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtmultimedia\qtmultimedia.pro -o Makefile ) && $(MAKE) -f Makefile 
module-qtmultimedia-all: module-qtbase-all module-qtdeclarative-all FORCE
	@if not exist qtmultimedia\ mkdir qtmultimedia\ & if not exist qtmultimedia\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtmultimedia\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtmultimedia\qtmultimedia.pro -o Makefile ) && $(MAKE) -f Makefile all
module-qtmultimedia-clean: module-qtbase-clean module-qtdeclarative-clean FORCE
	@if not exist qtmultimedia\ mkdir qtmultimedia\ & if not exist qtmultimedia\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtmultimedia\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtmultimedia\qtmultimedia.pro -o Makefile ) && $(MAKE) -f Makefile clean
module-qtmultimedia-distclean: module-qtbase-distclean module-qtdeclarative-distclean FORCE
	@if not exist qtmultimedia\ mkdir qtmultimedia\ & if not exist qtmultimedia\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtmultimedia\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtmultimedia\qtmultimedia.pro -o Makefile ) && $(MAKE) -f Makefile distclean
module-qtmultimedia-install_subtargets: module-qtbase-install_subtargets module-qtdeclarative-install_subtargets FORCE
	@if not exist qtmultimedia\ mkdir qtmultimedia\ & if not exist qtmultimedia\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtmultimedia\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtmultimedia\qtmultimedia.pro -o Makefile ) && $(MAKE) -f Makefile install
module-qtmultimedia-uninstall_subtargets: module-qtbase-uninstall_subtargets module-qtdeclarative-uninstall_subtargets FORCE
	@if not exist qtmultimedia\ mkdir qtmultimedia\ & if not exist qtmultimedia\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtmultimedia\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtmultimedia\qtmultimedia.pro -o Makefile ) && $(MAKE) -f Makefile uninstall
module-qtwinextras-qmake_all: module-qtbase-qmake_all module-qtdeclarative-qmake_all module-qtmultimedia-qmake_all FORCE
	@if not exist qtwinextras\ mkdir qtwinextras\ & if not exist qtwinextras\ exit 1
	cd qtwinextras\ && $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwinextras\qtwinextras.pro -o Makefile
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwinextras\ && $(MAKE) -f Makefile qmake_all
module-qtwinextras: module-qtbase \
		module-qtdeclarative \
		module-qtmultimedia FORCE
	@if not exist qtwinextras\ mkdir qtwinextras\ & if not exist qtwinextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwinextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwinextras\qtwinextras.pro -o Makefile ) && $(MAKE) -f Makefile
module-qtwinextras-make_first: module-qtbase-make_first module-qtdeclarative-make_first module-qtmultimedia-make_first FORCE
	@if not exist qtwinextras\ mkdir qtwinextras\ & if not exist qtwinextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwinextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwinextras\qtwinextras.pro -o Makefile ) && $(MAKE) -f Makefile 
module-qtwinextras-all: module-qtbase-all module-qtdeclarative-all module-qtmultimedia-all FORCE
	@if not exist qtwinextras\ mkdir qtwinextras\ & if not exist qtwinextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwinextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwinextras\qtwinextras.pro -o Makefile ) && $(MAKE) -f Makefile all
module-qtwinextras-clean: module-qtbase-clean module-qtdeclarative-clean module-qtmultimedia-clean FORCE
	@if not exist qtwinextras\ mkdir qtwinextras\ & if not exist qtwinextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwinextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwinextras\qtwinextras.pro -o Makefile ) && $(MAKE) -f Makefile clean
module-qtwinextras-distclean: module-qtbase-distclean module-qtdeclarative-distclean module-qtmultimedia-distclean FORCE
	@if not exist qtwinextras\ mkdir qtwinextras\ & if not exist qtwinextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwinextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwinextras\qtwinextras.pro -o Makefile ) && $(MAKE) -f Makefile distclean
module-qtwinextras-install_subtargets: module-qtbase-install_subtargets module-qtdeclarative-install_subtargets module-qtmultimedia-install_subtargets FORCE
	@if not exist qtwinextras\ mkdir qtwinextras\ & if not exist qtwinextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwinextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwinextras\qtwinextras.pro -o Makefile ) && $(MAKE) -f Makefile install
module-qtwinextras-uninstall_subtargets: module-qtbase-uninstall_subtargets module-qtdeclarative-uninstall_subtargets module-qtmultimedia-uninstall_subtargets FORCE
	@if not exist qtwinextras\ mkdir qtwinextras\ & if not exist qtwinextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwinextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwinextras\qtwinextras.pro -o Makefile ) && $(MAKE) -f Makefile uninstall
module-qtgraphicaleffects-qmake_all: module-qtdeclarative-qmake_all FORCE
	@if not exist qtgraphicaleffects\ mkdir qtgraphicaleffects\ & if not exist qtgraphicaleffects\ exit 1
	cd qtgraphicaleffects\ && $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtgraphicaleffects\qtgraphicaleffects.pro -o Makefile
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtgraphicaleffects\ && $(MAKE) -f Makefile qmake_all
module-qtgraphicaleffects: module-qtdeclarative FORCE
	@if not exist qtgraphicaleffects\ mkdir qtgraphicaleffects\ & if not exist qtgraphicaleffects\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtgraphicaleffects\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtgraphicaleffects\qtgraphicaleffects.pro -o Makefile ) && $(MAKE) -f Makefile
module-qtgraphicaleffects-make_first: module-qtdeclarative-make_first FORCE
	@if not exist qtgraphicaleffects\ mkdir qtgraphicaleffects\ & if not exist qtgraphicaleffects\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtgraphicaleffects\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtgraphicaleffects\qtgraphicaleffects.pro -o Makefile ) && $(MAKE) -f Makefile 
module-qtgraphicaleffects-all: module-qtdeclarative-all FORCE
	@if not exist qtgraphicaleffects\ mkdir qtgraphicaleffects\ & if not exist qtgraphicaleffects\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtgraphicaleffects\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtgraphicaleffects\qtgraphicaleffects.pro -o Makefile ) && $(MAKE) -f Makefile all
module-qtgraphicaleffects-clean: module-qtdeclarative-clean FORCE
	@if not exist qtgraphicaleffects\ mkdir qtgraphicaleffects\ & if not exist qtgraphicaleffects\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtgraphicaleffects\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtgraphicaleffects\qtgraphicaleffects.pro -o Makefile ) && $(MAKE) -f Makefile clean
module-qtgraphicaleffects-distclean: module-qtdeclarative-distclean FORCE
	@if not exist qtgraphicaleffects\ mkdir qtgraphicaleffects\ & if not exist qtgraphicaleffects\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtgraphicaleffects\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtgraphicaleffects\qtgraphicaleffects.pro -o Makefile ) && $(MAKE) -f Makefile distclean
module-qtgraphicaleffects-install_subtargets: module-qtdeclarative-install_subtargets FORCE
	@if not exist qtgraphicaleffects\ mkdir qtgraphicaleffects\ & if not exist qtgraphicaleffects\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtgraphicaleffects\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtgraphicaleffects\qtgraphicaleffects.pro -o Makefile ) && $(MAKE) -f Makefile install
module-qtgraphicaleffects-uninstall_subtargets: module-qtdeclarative-uninstall_subtargets FORCE
	@if not exist qtgraphicaleffects\ mkdir qtgraphicaleffects\ & if not exist qtgraphicaleffects\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtgraphicaleffects\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtgraphicaleffects\qtgraphicaleffects.pro -o Makefile ) && $(MAKE) -f Makefile uninstall
module-qtquickcontrols-qmake_all: module-qtdeclarative-qmake_all module-qtgraphicaleffects-qmake_all FORCE
	@if not exist qtquickcontrols\ mkdir qtquickcontrols\ & if not exist qtquickcontrols\ exit 1
	cd qtquickcontrols\ && $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtquickcontrols\qtquickcontrols.pro -o Makefile
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtquickcontrols\ && $(MAKE) -f Makefile qmake_all
module-qtquickcontrols: module-qtdeclarative \
		module-qtgraphicaleffects FORCE
	@if not exist qtquickcontrols\ mkdir qtquickcontrols\ & if not exist qtquickcontrols\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtquickcontrols\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtquickcontrols\qtquickcontrols.pro -o Makefile ) && $(MAKE) -f Makefile
module-qtquickcontrols-make_first: module-qtdeclarative-make_first module-qtgraphicaleffects-make_first FORCE
	@if not exist qtquickcontrols\ mkdir qtquickcontrols\ & if not exist qtquickcontrols\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtquickcontrols\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtquickcontrols\qtquickcontrols.pro -o Makefile ) && $(MAKE) -f Makefile 
module-qtquickcontrols-all: module-qtdeclarative-all module-qtgraphicaleffects-all FORCE
	@if not exist qtquickcontrols\ mkdir qtquickcontrols\ & if not exist qtquickcontrols\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtquickcontrols\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtquickcontrols\qtquickcontrols.pro -o Makefile ) && $(MAKE) -f Makefile all
module-qtquickcontrols-clean: module-qtdeclarative-clean module-qtgraphicaleffects-clean FORCE
	@if not exist qtquickcontrols\ mkdir qtquickcontrols\ & if not exist qtquickcontrols\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtquickcontrols\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtquickcontrols\qtquickcontrols.pro -o Makefile ) && $(MAKE) -f Makefile clean
module-qtquickcontrols-distclean: module-qtdeclarative-distclean module-qtgraphicaleffects-distclean FORCE
	@if not exist qtquickcontrols\ mkdir qtquickcontrols\ & if not exist qtquickcontrols\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtquickcontrols\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtquickcontrols\qtquickcontrols.pro -o Makefile ) && $(MAKE) -f Makefile distclean
module-qtquickcontrols-install_subtargets: module-qtdeclarative-install_subtargets module-qtgraphicaleffects-install_subtargets FORCE
	@if not exist qtquickcontrols\ mkdir qtquickcontrols\ & if not exist qtquickcontrols\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtquickcontrols\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtquickcontrols\qtquickcontrols.pro -o Makefile ) && $(MAKE) -f Makefile install
module-qtquickcontrols-uninstall_subtargets: module-qtdeclarative-uninstall_subtargets module-qtgraphicaleffects-uninstall_subtargets FORCE
	@if not exist qtquickcontrols\ mkdir qtquickcontrols\ & if not exist qtquickcontrols\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtquickcontrols\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtquickcontrols\qtquickcontrols.pro -o Makefile ) && $(MAKE) -f Makefile uninstall
module-qtquickcontrols2-qmake_all: module-qtquickcontrols-qmake_all FORCE
	@if not exist qtquickcontrols2\ mkdir qtquickcontrols2\ & if not exist qtquickcontrols2\ exit 1
	cd qtquickcontrols2\ && $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtquickcontrols2\qtquickcontrols2.pro -o Makefile
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtquickcontrols2\ && $(MAKE) -f Makefile qmake_all
module-qtquickcontrols2: module-qtquickcontrols FORCE
	@if not exist qtquickcontrols2\ mkdir qtquickcontrols2\ & if not exist qtquickcontrols2\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtquickcontrols2\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtquickcontrols2\qtquickcontrols2.pro -o Makefile ) && $(MAKE) -f Makefile
module-qtquickcontrols2-make_first: module-qtquickcontrols-make_first FORCE
	@if not exist qtquickcontrols2\ mkdir qtquickcontrols2\ & if not exist qtquickcontrols2\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtquickcontrols2\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtquickcontrols2\qtquickcontrols2.pro -o Makefile ) && $(MAKE) -f Makefile 
module-qtquickcontrols2-all: module-qtquickcontrols-all FORCE
	@if not exist qtquickcontrols2\ mkdir qtquickcontrols2\ & if not exist qtquickcontrols2\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtquickcontrols2\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtquickcontrols2\qtquickcontrols2.pro -o Makefile ) && $(MAKE) -f Makefile all
module-qtquickcontrols2-clean: module-qtquickcontrols-clean FORCE
	@if not exist qtquickcontrols2\ mkdir qtquickcontrols2\ & if not exist qtquickcontrols2\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtquickcontrols2\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtquickcontrols2\qtquickcontrols2.pro -o Makefile ) && $(MAKE) -f Makefile clean
module-qtquickcontrols2-distclean: module-qtquickcontrols-distclean FORCE
	@if not exist qtquickcontrols2\ mkdir qtquickcontrols2\ & if not exist qtquickcontrols2\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtquickcontrols2\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtquickcontrols2\qtquickcontrols2.pro -o Makefile ) && $(MAKE) -f Makefile distclean
module-qtquickcontrols2-install_subtargets: module-qtquickcontrols-install_subtargets FORCE
	@if not exist qtquickcontrols2\ mkdir qtquickcontrols2\ & if not exist qtquickcontrols2\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtquickcontrols2\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtquickcontrols2\qtquickcontrols2.pro -o Makefile ) && $(MAKE) -f Makefile install
module-qtquickcontrols2-uninstall_subtargets: module-qtquickcontrols-uninstall_subtargets FORCE
	@if not exist qtquickcontrols2\ mkdir qtquickcontrols2\ & if not exist qtquickcontrols2\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtquickcontrols2\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtquickcontrols2\qtquickcontrols2.pro -o Makefile ) && $(MAKE) -f Makefile uninstall
module-qtlocation-qmake_all: module-qtbase-qmake_all module-qtdeclarative-qmake_all module-qtquickcontrols-qmake_all module-qtserialport-qmake_all FORCE
	@if not exist qtlocation\ mkdir qtlocation\ & if not exist qtlocation\ exit 1
	cd qtlocation\ && $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtlocation\qtlocation.pro -o Makefile
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtlocation\ && $(MAKE) -f Makefile qmake_all
module-qtlocation: module-qtbase \
		module-qtdeclarative \
		module-qtquickcontrols \
		module-qtserialport FORCE
	@if not exist qtlocation\ mkdir qtlocation\ & if not exist qtlocation\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtlocation\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtlocation\qtlocation.pro -o Makefile ) && $(MAKE) -f Makefile
module-qtlocation-make_first: module-qtbase-make_first module-qtdeclarative-make_first module-qtquickcontrols-make_first module-qtserialport-make_first FORCE
	@if not exist qtlocation\ mkdir qtlocation\ & if not exist qtlocation\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtlocation\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtlocation\qtlocation.pro -o Makefile ) && $(MAKE) -f Makefile 
module-qtlocation-all: module-qtbase-all module-qtdeclarative-all module-qtquickcontrols-all module-qtserialport-all FORCE
	@if not exist qtlocation\ mkdir qtlocation\ & if not exist qtlocation\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtlocation\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtlocation\qtlocation.pro -o Makefile ) && $(MAKE) -f Makefile all
module-qtlocation-clean: module-qtbase-clean module-qtdeclarative-clean module-qtquickcontrols-clean module-qtserialport-clean FORCE
	@if not exist qtlocation\ mkdir qtlocation\ & if not exist qtlocation\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtlocation\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtlocation\qtlocation.pro -o Makefile ) && $(MAKE) -f Makefile clean
module-qtlocation-distclean: module-qtbase-distclean module-qtdeclarative-distclean module-qtquickcontrols-distclean module-qtserialport-distclean FORCE
	@if not exist qtlocation\ mkdir qtlocation\ & if not exist qtlocation\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtlocation\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtlocation\qtlocation.pro -o Makefile ) && $(MAKE) -f Makefile distclean
module-qtlocation-install_subtargets: module-qtbase-install_subtargets module-qtdeclarative-install_subtargets module-qtquickcontrols-install_subtargets module-qtserialport-install_subtargets FORCE
	@if not exist qtlocation\ mkdir qtlocation\ & if not exist qtlocation\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtlocation\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtlocation\qtlocation.pro -o Makefile ) && $(MAKE) -f Makefile install
module-qtlocation-uninstall_subtargets: module-qtbase-uninstall_subtargets module-qtdeclarative-uninstall_subtargets module-qtquickcontrols-uninstall_subtargets module-qtserialport-uninstall_subtargets FORCE
	@if not exist qtlocation\ mkdir qtlocation\ & if not exist qtlocation\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtlocation\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtlocation\qtlocation.pro -o Makefile ) && $(MAKE) -f Makefile uninstall
module-qtwebengine-qmake_all: module-qtquickcontrols-qmake_all module-qtwebchannel-qmake_all module-qtlocation-qmake_all FORCE
	@if not exist qtwebengine\ mkdir qtwebengine\ & if not exist qtwebengine\ exit 1
	cd qtwebengine\ && $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebengine\qtwebengine.pro -o Makefile
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebengine\ && $(MAKE) -f Makefile qmake_all
module-qtwebengine: module-qtquickcontrols \
		module-qtwebchannel \
		module-qtlocation FORCE
	@if not exist qtwebengine\ mkdir qtwebengine\ & if not exist qtwebengine\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebengine\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebengine\qtwebengine.pro -o Makefile ) && $(MAKE) -f Makefile
module-qtwebengine-make_first: module-qtquickcontrols-make_first module-qtwebchannel-make_first module-qtlocation-make_first FORCE
	@if not exist qtwebengine\ mkdir qtwebengine\ & if not exist qtwebengine\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebengine\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebengine\qtwebengine.pro -o Makefile ) && $(MAKE) -f Makefile 
module-qtwebengine-all: module-qtquickcontrols-all module-qtwebchannel-all module-qtlocation-all FORCE
	@if not exist qtwebengine\ mkdir qtwebengine\ & if not exist qtwebengine\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebengine\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebengine\qtwebengine.pro -o Makefile ) && $(MAKE) -f Makefile all
module-qtwebengine-clean: module-qtquickcontrols-clean module-qtwebchannel-clean module-qtlocation-clean FORCE
	@if not exist qtwebengine\ mkdir qtwebengine\ & if not exist qtwebengine\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebengine\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebengine\qtwebengine.pro -o Makefile ) && $(MAKE) -f Makefile clean
module-qtwebengine-distclean: module-qtquickcontrols-distclean module-qtwebchannel-distclean module-qtlocation-distclean FORCE
	@if not exist qtwebengine\ mkdir qtwebengine\ & if not exist qtwebengine\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebengine\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebengine\qtwebengine.pro -o Makefile ) && $(MAKE) -f Makefile distclean
module-qtwebengine-install_subtargets: module-qtquickcontrols-install_subtargets module-qtwebchannel-install_subtargets module-qtlocation-install_subtargets FORCE
	@if not exist qtwebengine\ mkdir qtwebengine\ & if not exist qtwebengine\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebengine\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebengine\qtwebengine.pro -o Makefile ) && $(MAKE) -f Makefile install
module-qtwebengine-uninstall_subtargets: module-qtquickcontrols-uninstall_subtargets module-qtwebchannel-uninstall_subtargets module-qtlocation-uninstall_subtargets FORCE
	@if not exist qtwebengine\ mkdir qtwebengine\ & if not exist qtwebengine\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebengine\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebengine\qtwebengine.pro -o Makefile ) && $(MAKE) -f Makefile uninstall
module-qtwebview-qmake_all: module-qtdeclarative-qmake_all module-qtwebengine-qmake_all FORCE
	@if not exist qtwebview\ mkdir qtwebview\ & if not exist qtwebview\ exit 1
	cd qtwebview\ && $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebview\qtwebview.pro -o Makefile
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebview\ && $(MAKE) -f Makefile qmake_all
module-qtwebview: module-qtdeclarative \
		module-qtwebengine FORCE
	@if not exist qtwebview\ mkdir qtwebview\ & if not exist qtwebview\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebview\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebview\qtwebview.pro -o Makefile ) && $(MAKE) -f Makefile
module-qtwebview-make_first: module-qtdeclarative-make_first module-qtwebengine-make_first FORCE
	@if not exist qtwebview\ mkdir qtwebview\ & if not exist qtwebview\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebview\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebview\qtwebview.pro -o Makefile ) && $(MAKE) -f Makefile 
module-qtwebview-all: module-qtdeclarative-all module-qtwebengine-all FORCE
	@if not exist qtwebview\ mkdir qtwebview\ & if not exist qtwebview\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebview\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebview\qtwebview.pro -o Makefile ) && $(MAKE) -f Makefile all
module-qtwebview-clean: module-qtdeclarative-clean module-qtwebengine-clean FORCE
	@if not exist qtwebview\ mkdir qtwebview\ & if not exist qtwebview\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebview\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebview\qtwebview.pro -o Makefile ) && $(MAKE) -f Makefile clean
module-qtwebview-distclean: module-qtdeclarative-distclean module-qtwebengine-distclean FORCE
	@if not exist qtwebview\ mkdir qtwebview\ & if not exist qtwebview\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebview\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebview\qtwebview.pro -o Makefile ) && $(MAKE) -f Makefile distclean
module-qtwebview-install_subtargets: module-qtdeclarative-install_subtargets module-qtwebengine-install_subtargets FORCE
	@if not exist qtwebview\ mkdir qtwebview\ & if not exist qtwebview\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebview\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebview\qtwebview.pro -o Makefile ) && $(MAKE) -f Makefile install
module-qtwebview-uninstall_subtargets: module-qtdeclarative-uninstall_subtargets module-qtwebengine-uninstall_subtargets FORCE
	@if not exist qtwebview\ mkdir qtwebview\ & if not exist qtwebview\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebview\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebview\qtwebview.pro -o Makefile ) && $(MAKE) -f Makefile uninstall
module-qttools-qmake_all: module-qtbase-qmake_all module-qtdeclarative-qmake_all module-qtactiveqt-qmake_all FORCE
	@if not exist qttools\ mkdir qttools\ & if not exist qttools\ exit 1
	cd qttools\ && $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qttools\qttools.pro -o Makefile
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qttools\ && $(MAKE) -f Makefile qmake_all
module-qttools: module-qtbase \
		module-qtdeclarative \
		module-qtactiveqt FORCE
	@if not exist qttools\ mkdir qttools\ & if not exist qttools\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qttools\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qttools\qttools.pro -o Makefile ) && $(MAKE) -f Makefile
module-qttools-make_first: module-qtbase-make_first module-qtdeclarative-make_first module-qtactiveqt-make_first FORCE
	@if not exist qttools\ mkdir qttools\ & if not exist qttools\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qttools\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qttools\qttools.pro -o Makefile ) && $(MAKE) -f Makefile 
module-qttools-all: module-qtbase-all module-qtdeclarative-all module-qtactiveqt-all FORCE
	@if not exist qttools\ mkdir qttools\ & if not exist qttools\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qttools\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qttools\qttools.pro -o Makefile ) && $(MAKE) -f Makefile all
module-qttools-clean: module-qtbase-clean module-qtdeclarative-clean module-qtactiveqt-clean FORCE
	@if not exist qttools\ mkdir qttools\ & if not exist qttools\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qttools\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qttools\qttools.pro -o Makefile ) && $(MAKE) -f Makefile clean
module-qttools-distclean: module-qtbase-distclean module-qtdeclarative-distclean module-qtactiveqt-distclean FORCE
	@if not exist qttools\ mkdir qttools\ & if not exist qttools\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qttools\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qttools\qttools.pro -o Makefile ) && $(MAKE) -f Makefile distclean
module-qttools-install_subtargets: module-qtbase-install_subtargets module-qtdeclarative-install_subtargets module-qtactiveqt-install_subtargets FORCE
	@if not exist qttools\ mkdir qttools\ & if not exist qttools\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qttools\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qttools\qttools.pro -o Makefile ) && $(MAKE) -f Makefile install
module-qttools-uninstall_subtargets: module-qtbase-uninstall_subtargets module-qtdeclarative-uninstall_subtargets module-qtactiveqt-uninstall_subtargets FORCE
	@if not exist qttools\ mkdir qttools\ & if not exist qttools\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qttools\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qttools\qttools.pro -o Makefile ) && $(MAKE) -f Makefile uninstall
module-qtscript-qmake_all: module-qtbase-qmake_all module-qttools-qmake_all FORCE
	@if not exist qtscript\ mkdir qtscript\ & if not exist qtscript\ exit 1
	cd qtscript\ && $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtscript\qtscript.pro -o Makefile
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtscript\ && $(MAKE) -f Makefile qmake_all
module-qtscript: module-qtbase \
		module-qttools FORCE
	@if not exist qtscript\ mkdir qtscript\ & if not exist qtscript\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtscript\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtscript\qtscript.pro -o Makefile ) && $(MAKE) -f Makefile
module-qtscript-make_first: module-qtbase-make_first module-qttools-make_first FORCE
	@if not exist qtscript\ mkdir qtscript\ & if not exist qtscript\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtscript\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtscript\qtscript.pro -o Makefile ) && $(MAKE) -f Makefile 
module-qtscript-all: module-qtbase-all module-qttools-all FORCE
	@if not exist qtscript\ mkdir qtscript\ & if not exist qtscript\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtscript\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtscript\qtscript.pro -o Makefile ) && $(MAKE) -f Makefile all
module-qtscript-clean: module-qtbase-clean module-qttools-clean FORCE
	@if not exist qtscript\ mkdir qtscript\ & if not exist qtscript\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtscript\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtscript\qtscript.pro -o Makefile ) && $(MAKE) -f Makefile clean
module-qtscript-distclean: module-qtbase-distclean module-qttools-distclean FORCE
	@if not exist qtscript\ mkdir qtscript\ & if not exist qtscript\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtscript\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtscript\qtscript.pro -o Makefile ) && $(MAKE) -f Makefile distclean
module-qtscript-install_subtargets: module-qtbase-install_subtargets module-qttools-install_subtargets FORCE
	@if not exist qtscript\ mkdir qtscript\ & if not exist qtscript\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtscript\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtscript\qtscript.pro -o Makefile ) && $(MAKE) -f Makefile install
module-qtscript-uninstall_subtargets: module-qtbase-uninstall_subtargets module-qttools-uninstall_subtargets FORCE
	@if not exist qtscript\ mkdir qtscript\ & if not exist qtscript\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtscript\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtscript\qtscript.pro -o Makefile ) && $(MAKE) -f Makefile uninstall
module-qttranslations-qmake_all: module-qttools-qmake_all FORCE
	@if not exist qttranslations\ mkdir qttranslations\ & if not exist qttranslations\ exit 1
	cd qttranslations\ && $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qttranslations\qttranslations.pro -o Makefile
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qttranslations\ && $(MAKE) -f Makefile qmake_all
module-qttranslations: module-qttools FORCE
	@if not exist qttranslations\ mkdir qttranslations\ & if not exist qttranslations\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qttranslations\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qttranslations\qttranslations.pro -o Makefile ) && $(MAKE) -f Makefile
module-qttranslations-make_first: module-qttools-make_first FORCE
	@if not exist qttranslations\ mkdir qttranslations\ & if not exist qttranslations\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qttranslations\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qttranslations\qttranslations.pro -o Makefile ) && $(MAKE) -f Makefile 
module-qttranslations-all: module-qttools-all FORCE
	@if not exist qttranslations\ mkdir qttranslations\ & if not exist qttranslations\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qttranslations\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qttranslations\qttranslations.pro -o Makefile ) && $(MAKE) -f Makefile all
module-qttranslations-clean: module-qttools-clean FORCE
	@if not exist qttranslations\ mkdir qttranslations\ & if not exist qttranslations\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qttranslations\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qttranslations\qttranslations.pro -o Makefile ) && $(MAKE) -f Makefile clean
module-qttranslations-distclean: module-qttools-distclean FORCE
	@if not exist qttranslations\ mkdir qttranslations\ & if not exist qttranslations\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qttranslations\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qttranslations\qttranslations.pro -o Makefile ) && $(MAKE) -f Makefile distclean
module-qttranslations-install_subtargets: module-qttools-install_subtargets FORCE
	@if not exist qttranslations\ mkdir qttranslations\ & if not exist qttranslations\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qttranslations\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qttranslations\qttranslations.pro -o Makefile ) && $(MAKE) -f Makefile install
module-qttranslations-uninstall_subtargets: module-qttools-uninstall_subtargets FORCE
	@if not exist qttranslations\ mkdir qttranslations\ & if not exist qttranslations\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qttranslations\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qttranslations\qttranslations.pro -o Makefile ) && $(MAKE) -f Makefile uninstall
module-qtdoc-qmake_all: module-qtdeclarative-qmake_all FORCE
	@if not exist qtdoc\ mkdir qtdoc\ & if not exist qtdoc\ exit 1
	cd qtdoc\ && $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtdoc\qtdoc.pro -o Makefile
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtdoc\ && $(MAKE) -f Makefile qmake_all
module-qtdoc: module-qtdeclarative FORCE
	@if not exist qtdoc\ mkdir qtdoc\ & if not exist qtdoc\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtdoc\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtdoc\qtdoc.pro -o Makefile ) && $(MAKE) -f Makefile
module-qtdoc-make_first: module-qtdeclarative-make_first FORCE
	@if not exist qtdoc\ mkdir qtdoc\ & if not exist qtdoc\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtdoc\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtdoc\qtdoc.pro -o Makefile ) && $(MAKE) -f Makefile 
module-qtdoc-all: module-qtdeclarative-all FORCE
	@if not exist qtdoc\ mkdir qtdoc\ & if not exist qtdoc\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtdoc\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtdoc\qtdoc.pro -o Makefile ) && $(MAKE) -f Makefile all
module-qtdoc-clean: module-qtdeclarative-clean FORCE
	@if not exist qtdoc\ mkdir qtdoc\ & if not exist qtdoc\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtdoc\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtdoc\qtdoc.pro -o Makefile ) && $(MAKE) -f Makefile clean
module-qtdoc-distclean: module-qtdeclarative-distclean FORCE
	@if not exist qtdoc\ mkdir qtdoc\ & if not exist qtdoc\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtdoc\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtdoc\qtdoc.pro -o Makefile ) && $(MAKE) -f Makefile distclean
module-qtdoc-install_subtargets: module-qtdeclarative-install_subtargets FORCE
	@if not exist qtdoc\ mkdir qtdoc\ & if not exist qtdoc\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtdoc\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtdoc\qtdoc.pro -o Makefile ) && $(MAKE) -f Makefile install
module-qtdoc-uninstall_subtargets: module-qtdeclarative-uninstall_subtargets FORCE
	@if not exist qtdoc\ mkdir qtdoc\ & if not exist qtdoc\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtdoc\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtdoc\qtdoc.pro -o Makefile ) && $(MAKE) -f Makefile uninstall

Makefile: ..\qt-everywhere-opensource-src-5.6.0\qt.pro ..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\win32-msvc2015\qmake.conf ..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\features\spec_pre.prf \
		..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\common\angle.conf \
		..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\common\msvc-base.conf \
		..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\common\msvc-desktop.conf \
		qtbase\mkspecs\qconfig.pri \
		..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\features\qt_functions.prf \
		..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\features\qt_config.prf \
		..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\features\win32\qt_config.prf \
		..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\win32-msvc2015\qmake.conf \
		..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\features\spec_post.prf \
		..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\features\exclusive_builds.prf \
		..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\features\default_pre.prf \
		..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\features\win32\default_pre.prf \
		qtbase\mkspecs\qmodule.pri \
		..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\features\qt_build_config.prf \
		..\qt-everywhere-opensource-src-5.6.0\.gitmodules \
		..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\features\resolve_config.prf \
		..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\features\exclusive_builds_post.prf \
		..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\features\default_post.prf \
		..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\features\exceptions_off.prf \
		..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\features\qt_docs_targets.prf \
		..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\features\win32\rtti.prf \
		..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\features\precompile_header.prf \
		..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\features\warn_on.prf \
		..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\features\win32\windows.prf \
		..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\features\testcase_targets.prf \
		..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\features\yacc.prf \
		..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\features\lex.prf \
		..\qt-everywhere-opensource-src-5.6.0\qt.pro
	$(QMAKE) -o Makefile ..\qt-everywhere-opensource-src-5.6.0\qt.pro
..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\features\spec_pre.prf:
..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\common\angle.conf:
..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\common\msvc-base.conf:
..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\common\msvc-desktop.conf:
qtbase\mkspecs\qconfig.pri:
..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\features\qt_functions.prf:
..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\features\qt_config.prf:
..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\features\win32\qt_config.prf:
..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\win32-msvc2015\qmake.conf:
..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\features\spec_post.prf:
..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\features\exclusive_builds.prf:
..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\features\default_pre.prf:
..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\features\win32\default_pre.prf:
qtbase\mkspecs\qmodule.pri:
..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\features\qt_build_config.prf:
..\qt-everywhere-opensource-src-5.6.0\.gitmodules:
..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\features\resolve_config.prf:
..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\features\exclusive_builds_post.prf:
..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\features\default_post.prf:
..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\features\exceptions_off.prf:
..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\features\qt_docs_targets.prf:
..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\features\win32\rtti.prf:
..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\features\precompile_header.prf:
..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\features\warn_on.prf:
..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\features\win32\windows.prf:
..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\features\testcase_targets.prf:
..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\features\yacc.prf:
..\qt-everywhere-opensource-src-5.6.0\qtbase\mkspecs\features\lex.prf:
..\qt-everywhere-opensource-src-5.6.0\qt.pro:
qmake: FORCE
	@$(QMAKE) -o Makefile ..\qt-everywhere-opensource-src-5.6.0\qt.pro

qmake_all: module-qtbase-qmake_all module-qtmacextras-qmake_all module-qtx11extras-qmake_all module-qtimageformats-qmake_all module-qtandroidextras-qmake_all module-qtserialport-qmake_all module-qtserialbus-qmake_all module-qtactiveqt-qmake_all module-qtxmlpatterns-qmake_all module-qtsvg-qmake_all module-qtdeclarative-qmake_all module-qtcanvas3d-qmake_all module-qtenginio-qmake_all module-qt3d-qmake_all module-qtwayland-qmake_all module-qtconnectivity-qmake_all module-qtwebsockets-qmake_all module-qtwebchannel-qmake_all module-qtsensors-qmake_all module-qtmultimedia-qmake_all module-qtwinextras-qmake_all module-qtgraphicaleffects-qmake_all module-qtquickcontrols-qmake_all module-qtquickcontrols2-qmake_all module-qtlocation-qmake_all module-qtwebengine-qmake_all module-qtwebview-qmake_all module-qttools-qmake_all module-qtscript-qmake_all module-qttranslations-qmake_all module-qtdoc-qmake_all FORCE

make_first: module-qtbase-make_first module-qtmacextras-make_first module-qtx11extras-make_first module-qtimageformats-make_first module-qtandroidextras-make_first module-qtserialport-make_first module-qtserialbus-make_first module-qtactiveqt-make_first module-qtxmlpatterns-make_first module-qtsvg-make_first module-qtdeclarative-make_first module-qtcanvas3d-make_first module-qtenginio-make_first module-qt3d-make_first module-qtwayland-make_first module-qtconnectivity-make_first module-qtwebsockets-make_first module-qtwebchannel-make_first module-qtsensors-make_first module-qtmultimedia-make_first module-qtwinextras-make_first module-qtgraphicaleffects-make_first module-qtquickcontrols-make_first module-qtquickcontrols2-make_first module-qtlocation-make_first module-qtwebengine-make_first module-qtwebview-make_first module-qttools-make_first module-qtscript-make_first module-qttranslations-make_first module-qtdoc-make_first  FORCE
all: module-qtbase-all module-qtmacextras-all module-qtx11extras-all module-qtimageformats-all module-qtandroidextras-all module-qtserialport-all module-qtserialbus-all module-qtactiveqt-all module-qtxmlpatterns-all module-qtsvg-all module-qtdeclarative-all module-qtcanvas3d-all module-qtenginio-all module-qt3d-all module-qtwayland-all module-qtconnectivity-all module-qtwebsockets-all module-qtwebchannel-all module-qtsensors-all module-qtmultimedia-all module-qtwinextras-all module-qtgraphicaleffects-all module-qtquickcontrols-all module-qtquickcontrols2-all module-qtlocation-all module-qtwebengine-all module-qtwebview-all module-qttools-all module-qtscript-all module-qttranslations-all module-qtdoc-all  FORCE
clean: module-qtbase-clean module-qtmacextras-clean module-qtx11extras-clean module-qtimageformats-clean module-qtandroidextras-clean module-qtserialport-clean module-qtserialbus-clean module-qtactiveqt-clean module-qtxmlpatterns-clean module-qtsvg-clean module-qtdeclarative-clean module-qtcanvas3d-clean module-qtenginio-clean module-qt3d-clean module-qtwayland-clean module-qtconnectivity-clean module-qtwebsockets-clean module-qtwebchannel-clean module-qtsensors-clean module-qtmultimedia-clean module-qtwinextras-clean module-qtgraphicaleffects-clean module-qtquickcontrols-clean module-qtquickcontrols2-clean module-qtlocation-clean module-qtwebengine-clean module-qtwebview-clean module-qttools-clean module-qtscript-clean module-qttranslations-clean module-qtdoc-clean  FORCE
distclean: module-qtbase-distclean module-qtmacextras-distclean module-qtx11extras-distclean module-qtimageformats-distclean module-qtandroidextras-distclean module-qtserialport-distclean module-qtserialbus-distclean module-qtactiveqt-distclean module-qtxmlpatterns-distclean module-qtsvg-distclean module-qtdeclarative-distclean module-qtcanvas3d-distclean module-qtenginio-distclean module-qt3d-distclean module-qtwayland-distclean module-qtconnectivity-distclean module-qtwebsockets-distclean module-qtwebchannel-distclean module-qtsensors-distclean module-qtmultimedia-distclean module-qtwinextras-distclean module-qtgraphicaleffects-distclean module-qtquickcontrols-distclean module-qtquickcontrols2-distclean module-qtlocation-distclean module-qtwebengine-distclean module-qtwebview-distclean module-qttools-distclean module-qtscript-distclean module-qttranslations-distclean module-qtdoc-distclean  FORCE
	-$(DEL_FILE) Makefile
	-$(DEL_FILE) .qmake.super
install_subtargets: module-qtbase-install_subtargets module-qtmacextras-install_subtargets module-qtx11extras-install_subtargets module-qtimageformats-install_subtargets module-qtandroidextras-install_subtargets module-qtserialport-install_subtargets module-qtserialbus-install_subtargets module-qtactiveqt-install_subtargets module-qtxmlpatterns-install_subtargets module-qtsvg-install_subtargets module-qtdeclarative-install_subtargets module-qtcanvas3d-install_subtargets module-qtenginio-install_subtargets module-qt3d-install_subtargets module-qtwayland-install_subtargets module-qtconnectivity-install_subtargets module-qtwebsockets-install_subtargets module-qtwebchannel-install_subtargets module-qtsensors-install_subtargets module-qtmultimedia-install_subtargets module-qtwinextras-install_subtargets module-qtgraphicaleffects-install_subtargets module-qtquickcontrols-install_subtargets module-qtquickcontrols2-install_subtargets module-qtlocation-install_subtargets module-qtwebengine-install_subtargets module-qtwebview-install_subtargets module-qttools-install_subtargets module-qtscript-install_subtargets module-qttranslations-install_subtargets module-qtdoc-install_subtargets FORCE
uninstall_subtargets: module-qtbase-uninstall_subtargets module-qtmacextras-uninstall_subtargets module-qtx11extras-uninstall_subtargets module-qtimageformats-uninstall_subtargets module-qtandroidextras-uninstall_subtargets module-qtserialport-uninstall_subtargets module-qtserialbus-uninstall_subtargets module-qtactiveqt-uninstall_subtargets module-qtxmlpatterns-uninstall_subtargets module-qtsvg-uninstall_subtargets module-qtdeclarative-uninstall_subtargets module-qtcanvas3d-uninstall_subtargets module-qtenginio-uninstall_subtargets module-qt3d-uninstall_subtargets module-qtwayland-uninstall_subtargets module-qtconnectivity-uninstall_subtargets module-qtwebsockets-uninstall_subtargets module-qtwebchannel-uninstall_subtargets module-qtsensors-uninstall_subtargets module-qtmultimedia-uninstall_subtargets module-qtwinextras-uninstall_subtargets module-qtgraphicaleffects-uninstall_subtargets module-qtquickcontrols-uninstall_subtargets module-qtquickcontrols2-uninstall_subtargets module-qtlocation-uninstall_subtargets module-qtwebengine-uninstall_subtargets module-qtwebview-uninstall_subtargets module-qttools-uninstall_subtargets module-qtscript-uninstall_subtargets module-qttranslations-uninstall_subtargets module-qtdoc-uninstall_subtargets FORCE

module-qtbase-debug:
	@if not exist qtbase\ mkdir qtbase\ & if not exist qtbase\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtbase\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtbase\qtbase.pro -o Makefile ) && $(MAKE) -f Makefile debug
module-qtmacextras-debug: module-qtbase-debug
	@if not exist qtmacextras\ mkdir qtmacextras\ & if not exist qtmacextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtmacextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtmacextras\qtmacextras.pro -o Makefile ) && $(MAKE) -f Makefile debug
module-qtx11extras-debug: module-qtbase-debug
	@if not exist qtx11extras\ mkdir qtx11extras\ & if not exist qtx11extras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtx11extras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtx11extras\qtx11extras.pro -o Makefile ) && $(MAKE) -f Makefile debug
module-qtimageformats-debug: module-qtbase-debug
	@if not exist qtimageformats\ mkdir qtimageformats\ & if not exist qtimageformats\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtimageformats\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtimageformats\qtimageformats.pro -o Makefile ) && $(MAKE) -f Makefile debug
module-qtandroidextras-debug: module-qtbase-debug
	@if not exist qtandroidextras\ mkdir qtandroidextras\ & if not exist qtandroidextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtandroidextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtandroidextras\qtandroidextras.pro -o Makefile ) && $(MAKE) -f Makefile debug
module-qtserialport-debug: module-qtbase-debug
	@if not exist qtserialport\ mkdir qtserialport\ & if not exist qtserialport\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtserialport\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtserialport\qtserialport.pro -o Makefile ) && $(MAKE) -f Makefile debug
module-qtserialbus-debug: module-qtserialport-debug
	@if not exist qtserialbus\ mkdir qtserialbus\ & if not exist qtserialbus\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtserialbus\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtserialbus\qtserialbus.pro -o Makefile ) && $(MAKE) -f Makefile debug
module-qtactiveqt-debug: module-qtbase-debug
	@if not exist qtactiveqt\ mkdir qtactiveqt\ & if not exist qtactiveqt\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtactiveqt\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtactiveqt\qtactiveqt.pro -o Makefile ) && $(MAKE) -f Makefile debug
module-qtxmlpatterns-debug: module-qtbase-debug
	@if not exist qtxmlpatterns\ mkdir qtxmlpatterns\ & if not exist qtxmlpatterns\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtxmlpatterns\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtxmlpatterns\qtxmlpatterns.pro -o Makefile ) && $(MAKE) -f Makefile debug
module-qtsvg-debug: module-qtbase-debug
	@if not exist qtsvg\ mkdir qtsvg\ & if not exist qtsvg\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtsvg\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtsvg\qtsvg.pro -o Makefile ) && $(MAKE) -f Makefile debug
module-qtdeclarative-debug: module-qtbase-debug module-qtsvg-debug module-qtxmlpatterns-debug
	@if not exist qtdeclarative\ mkdir qtdeclarative\ & if not exist qtdeclarative\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtdeclarative\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtdeclarative\qtdeclarative.pro -o Makefile ) && $(MAKE) -f Makefile debug
module-qtcanvas3d-debug: module-qtdeclarative-debug
	@if not exist qtcanvas3d\ mkdir qtcanvas3d\ & if not exist qtcanvas3d\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtcanvas3d\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtcanvas3d\qtcanvas3d.pro -o Makefile ) && $(MAKE) -f Makefile debug
module-qtenginio-debug: module-qtdeclarative-debug
	@if not exist qtenginio\ mkdir qtenginio\ & if not exist qtenginio\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtenginio\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtenginio\qtenginio.pro -o Makefile ) && $(MAKE) -f Makefile debug
module-qt3d-debug: module-qtdeclarative-debug module-qtimageformats-debug
	@if not exist qt3d\ mkdir qt3d\ & if not exist qt3d\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qt3d\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qt3d\qt3d.pro -o Makefile ) && $(MAKE) -f Makefile debug
module-qtwayland-debug: module-qtbase-debug module-qtdeclarative-debug
	@if not exist qtwayland\ mkdir qtwayland\ & if not exist qtwayland\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwayland\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwayland\qtwayland.pro -o Makefile ) && $(MAKE) -f Makefile debug
module-qtconnectivity-debug: module-qtbase-debug module-qtdeclarative-debug module-qtandroidextras-debug
	@if not exist qtconnectivity\ mkdir qtconnectivity\ & if not exist qtconnectivity\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtconnectivity\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtconnectivity\qtconnectivity.pro -o Makefile ) && $(MAKE) -f Makefile debug
module-qtwebsockets-debug: module-qtbase-debug module-qtdeclarative-debug
	@if not exist qtwebsockets\ mkdir qtwebsockets\ & if not exist qtwebsockets\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebsockets\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebsockets\qtwebsockets.pro -o Makefile ) && $(MAKE) -f Makefile debug
module-qtwebchannel-debug: module-qtbase-debug module-qtdeclarative-debug module-qtwebsockets-debug
	@if not exist qtwebchannel\ mkdir qtwebchannel\ & if not exist qtwebchannel\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebchannel\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebchannel\qtwebchannel.pro -o Makefile ) && $(MAKE) -f Makefile debug
module-qtsensors-debug: module-qtbase-debug module-qtdeclarative-debug
	@if not exist qtsensors\ mkdir qtsensors\ & if not exist qtsensors\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtsensors\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtsensors\qtsensors.pro -o Makefile ) && $(MAKE) -f Makefile debug
module-qtmultimedia-debug: module-qtbase-debug module-qtdeclarative-debug
	@if not exist qtmultimedia\ mkdir qtmultimedia\ & if not exist qtmultimedia\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtmultimedia\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtmultimedia\qtmultimedia.pro -o Makefile ) && $(MAKE) -f Makefile debug
module-qtwinextras-debug: module-qtbase-debug module-qtdeclarative-debug module-qtmultimedia-debug
	@if not exist qtwinextras\ mkdir qtwinextras\ & if not exist qtwinextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwinextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwinextras\qtwinextras.pro -o Makefile ) && $(MAKE) -f Makefile debug
module-qtgraphicaleffects-debug: module-qtdeclarative-debug
	@if not exist qtgraphicaleffects\ mkdir qtgraphicaleffects\ & if not exist qtgraphicaleffects\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtgraphicaleffects\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtgraphicaleffects\qtgraphicaleffects.pro -o Makefile ) && $(MAKE) -f Makefile debug
module-qtquickcontrols-debug: module-qtdeclarative-debug module-qtgraphicaleffects-debug
	@if not exist qtquickcontrols\ mkdir qtquickcontrols\ & if not exist qtquickcontrols\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtquickcontrols\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtquickcontrols\qtquickcontrols.pro -o Makefile ) && $(MAKE) -f Makefile debug
module-qtquickcontrols2-debug: module-qtquickcontrols-debug
	@if not exist qtquickcontrols2\ mkdir qtquickcontrols2\ & if not exist qtquickcontrols2\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtquickcontrols2\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtquickcontrols2\qtquickcontrols2.pro -o Makefile ) && $(MAKE) -f Makefile debug
module-qtlocation-debug: module-qtbase-debug module-qtdeclarative-debug module-qtquickcontrols-debug module-qtserialport-debug
	@if not exist qtlocation\ mkdir qtlocation\ & if not exist qtlocation\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtlocation\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtlocation\qtlocation.pro -o Makefile ) && $(MAKE) -f Makefile debug
module-qtwebengine-debug: module-qtquickcontrols-debug module-qtwebchannel-debug module-qtlocation-debug
	@if not exist qtwebengine\ mkdir qtwebengine\ & if not exist qtwebengine\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebengine\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebengine\qtwebengine.pro -o Makefile ) && $(MAKE) -f Makefile debug
module-qtwebview-debug: module-qtdeclarative-debug module-qtwebengine-debug
	@if not exist qtwebview\ mkdir qtwebview\ & if not exist qtwebview\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebview\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebview\qtwebview.pro -o Makefile ) && $(MAKE) -f Makefile debug
module-qttools-debug: module-qtbase-debug module-qtdeclarative-debug module-qtactiveqt-debug
	@if not exist qttools\ mkdir qttools\ & if not exist qttools\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qttools\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qttools\qttools.pro -o Makefile ) && $(MAKE) -f Makefile debug
module-qtscript-debug: module-qtbase-debug module-qttools-debug
	@if not exist qtscript\ mkdir qtscript\ & if not exist qtscript\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtscript\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtscript\qtscript.pro -o Makefile ) && $(MAKE) -f Makefile debug
module-qttranslations-debug: module-qttools-debug
	@if not exist qttranslations\ mkdir qttranslations\ & if not exist qttranslations\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qttranslations\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qttranslations\qttranslations.pro -o Makefile ) && $(MAKE) -f Makefile debug
module-qtdoc-debug: module-qtdeclarative-debug
	@if not exist qtdoc\ mkdir qtdoc\ & if not exist qtdoc\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtdoc\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtdoc\qtdoc.pro -o Makefile ) && $(MAKE) -f Makefile debug
debug: module-qtbase-debug module-qtmacextras-debug module-qtx11extras-debug module-qtimageformats-debug module-qtandroidextras-debug module-qtserialport-debug module-qtserialbus-debug module-qtactiveqt-debug module-qtxmlpatterns-debug module-qtsvg-debug module-qtdeclarative-debug module-qtcanvas3d-debug module-qtenginio-debug module-qt3d-debug module-qtwayland-debug module-qtconnectivity-debug module-qtwebsockets-debug module-qtwebchannel-debug module-qtsensors-debug module-qtmultimedia-debug module-qtwinextras-debug module-qtgraphicaleffects-debug module-qtquickcontrols-debug module-qtquickcontrols2-debug module-qtlocation-debug module-qtwebengine-debug module-qtwebview-debug module-qttools-debug module-qtscript-debug module-qttranslations-debug module-qtdoc-debug

module-qtbase-release:
	@if not exist qtbase\ mkdir qtbase\ & if not exist qtbase\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtbase\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtbase\qtbase.pro -o Makefile ) && $(MAKE) -f Makefile release
module-qtmacextras-release: module-qtbase-release
	@if not exist qtmacextras\ mkdir qtmacextras\ & if not exist qtmacextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtmacextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtmacextras\qtmacextras.pro -o Makefile ) && $(MAKE) -f Makefile release
module-qtx11extras-release: module-qtbase-release
	@if not exist qtx11extras\ mkdir qtx11extras\ & if not exist qtx11extras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtx11extras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtx11extras\qtx11extras.pro -o Makefile ) && $(MAKE) -f Makefile release
module-qtimageformats-release: module-qtbase-release
	@if not exist qtimageformats\ mkdir qtimageformats\ & if not exist qtimageformats\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtimageformats\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtimageformats\qtimageformats.pro -o Makefile ) && $(MAKE) -f Makefile release
module-qtandroidextras-release: module-qtbase-release
	@if not exist qtandroidextras\ mkdir qtandroidextras\ & if not exist qtandroidextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtandroidextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtandroidextras\qtandroidextras.pro -o Makefile ) && $(MAKE) -f Makefile release
module-qtserialport-release: module-qtbase-release
	@if not exist qtserialport\ mkdir qtserialport\ & if not exist qtserialport\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtserialport\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtserialport\qtserialport.pro -o Makefile ) && $(MAKE) -f Makefile release
module-qtserialbus-release: module-qtserialport-release
	@if not exist qtserialbus\ mkdir qtserialbus\ & if not exist qtserialbus\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtserialbus\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtserialbus\qtserialbus.pro -o Makefile ) && $(MAKE) -f Makefile release
module-qtactiveqt-release: module-qtbase-release
	@if not exist qtactiveqt\ mkdir qtactiveqt\ & if not exist qtactiveqt\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtactiveqt\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtactiveqt\qtactiveqt.pro -o Makefile ) && $(MAKE) -f Makefile release
module-qtxmlpatterns-release: module-qtbase-release
	@if not exist qtxmlpatterns\ mkdir qtxmlpatterns\ & if not exist qtxmlpatterns\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtxmlpatterns\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtxmlpatterns\qtxmlpatterns.pro -o Makefile ) && $(MAKE) -f Makefile release
module-qtsvg-release: module-qtbase-release
	@if not exist qtsvg\ mkdir qtsvg\ & if not exist qtsvg\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtsvg\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtsvg\qtsvg.pro -o Makefile ) && $(MAKE) -f Makefile release
module-qtdeclarative-release: module-qtbase-release module-qtsvg-release module-qtxmlpatterns-release
	@if not exist qtdeclarative\ mkdir qtdeclarative\ & if not exist qtdeclarative\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtdeclarative\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtdeclarative\qtdeclarative.pro -o Makefile ) && $(MAKE) -f Makefile release
module-qtcanvas3d-release: module-qtdeclarative-release
	@if not exist qtcanvas3d\ mkdir qtcanvas3d\ & if not exist qtcanvas3d\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtcanvas3d\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtcanvas3d\qtcanvas3d.pro -o Makefile ) && $(MAKE) -f Makefile release
module-qtenginio-release: module-qtdeclarative-release
	@if not exist qtenginio\ mkdir qtenginio\ & if not exist qtenginio\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtenginio\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtenginio\qtenginio.pro -o Makefile ) && $(MAKE) -f Makefile release
module-qt3d-release: module-qtdeclarative-release module-qtimageformats-release
	@if not exist qt3d\ mkdir qt3d\ & if not exist qt3d\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qt3d\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qt3d\qt3d.pro -o Makefile ) && $(MAKE) -f Makefile release
module-qtwayland-release: module-qtbase-release module-qtdeclarative-release
	@if not exist qtwayland\ mkdir qtwayland\ & if not exist qtwayland\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwayland\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwayland\qtwayland.pro -o Makefile ) && $(MAKE) -f Makefile release
module-qtconnectivity-release: module-qtbase-release module-qtdeclarative-release module-qtandroidextras-release
	@if not exist qtconnectivity\ mkdir qtconnectivity\ & if not exist qtconnectivity\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtconnectivity\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtconnectivity\qtconnectivity.pro -o Makefile ) && $(MAKE) -f Makefile release
module-qtwebsockets-release: module-qtbase-release module-qtdeclarative-release
	@if not exist qtwebsockets\ mkdir qtwebsockets\ & if not exist qtwebsockets\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebsockets\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebsockets\qtwebsockets.pro -o Makefile ) && $(MAKE) -f Makefile release
module-qtwebchannel-release: module-qtbase-release module-qtdeclarative-release module-qtwebsockets-release
	@if not exist qtwebchannel\ mkdir qtwebchannel\ & if not exist qtwebchannel\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebchannel\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebchannel\qtwebchannel.pro -o Makefile ) && $(MAKE) -f Makefile release
module-qtsensors-release: module-qtbase-release module-qtdeclarative-release
	@if not exist qtsensors\ mkdir qtsensors\ & if not exist qtsensors\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtsensors\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtsensors\qtsensors.pro -o Makefile ) && $(MAKE) -f Makefile release
module-qtmultimedia-release: module-qtbase-release module-qtdeclarative-release
	@if not exist qtmultimedia\ mkdir qtmultimedia\ & if not exist qtmultimedia\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtmultimedia\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtmultimedia\qtmultimedia.pro -o Makefile ) && $(MAKE) -f Makefile release
module-qtwinextras-release: module-qtbase-release module-qtdeclarative-release module-qtmultimedia-release
	@if not exist qtwinextras\ mkdir qtwinextras\ & if not exist qtwinextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwinextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwinextras\qtwinextras.pro -o Makefile ) && $(MAKE) -f Makefile release
module-qtgraphicaleffects-release: module-qtdeclarative-release
	@if not exist qtgraphicaleffects\ mkdir qtgraphicaleffects\ & if not exist qtgraphicaleffects\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtgraphicaleffects\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtgraphicaleffects\qtgraphicaleffects.pro -o Makefile ) && $(MAKE) -f Makefile release
module-qtquickcontrols-release: module-qtdeclarative-release module-qtgraphicaleffects-release
	@if not exist qtquickcontrols\ mkdir qtquickcontrols\ & if not exist qtquickcontrols\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtquickcontrols\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtquickcontrols\qtquickcontrols.pro -o Makefile ) && $(MAKE) -f Makefile release
module-qtquickcontrols2-release: module-qtquickcontrols-release
	@if not exist qtquickcontrols2\ mkdir qtquickcontrols2\ & if not exist qtquickcontrols2\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtquickcontrols2\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtquickcontrols2\qtquickcontrols2.pro -o Makefile ) && $(MAKE) -f Makefile release
module-qtlocation-release: module-qtbase-release module-qtdeclarative-release module-qtquickcontrols-release module-qtserialport-release
	@if not exist qtlocation\ mkdir qtlocation\ & if not exist qtlocation\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtlocation\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtlocation\qtlocation.pro -o Makefile ) && $(MAKE) -f Makefile release
module-qtwebengine-release: module-qtquickcontrols-release module-qtwebchannel-release module-qtlocation-release
	@if not exist qtwebengine\ mkdir qtwebengine\ & if not exist qtwebengine\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebengine\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebengine\qtwebengine.pro -o Makefile ) && $(MAKE) -f Makefile release
module-qtwebview-release: module-qtdeclarative-release module-qtwebengine-release
	@if not exist qtwebview\ mkdir qtwebview\ & if not exist qtwebview\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebview\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebview\qtwebview.pro -o Makefile ) && $(MAKE) -f Makefile release
module-qttools-release: module-qtbase-release module-qtdeclarative-release module-qtactiveqt-release
	@if not exist qttools\ mkdir qttools\ & if not exist qttools\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qttools\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qttools\qttools.pro -o Makefile ) && $(MAKE) -f Makefile release
module-qtscript-release: module-qtbase-release module-qttools-release
	@if not exist qtscript\ mkdir qtscript\ & if not exist qtscript\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtscript\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtscript\qtscript.pro -o Makefile ) && $(MAKE) -f Makefile release
module-qttranslations-release: module-qttools-release
	@if not exist qttranslations\ mkdir qttranslations\ & if not exist qttranslations\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qttranslations\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qttranslations\qttranslations.pro -o Makefile ) && $(MAKE) -f Makefile release
module-qtdoc-release: module-qtdeclarative-release
	@if not exist qtdoc\ mkdir qtdoc\ & if not exist qtdoc\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtdoc\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtdoc\qtdoc.pro -o Makefile ) && $(MAKE) -f Makefile release
release: module-qtbase-release module-qtmacextras-release module-qtx11extras-release module-qtimageformats-release module-qtandroidextras-release module-qtserialport-release module-qtserialbus-release module-qtactiveqt-release module-qtxmlpatterns-release module-qtsvg-release module-qtdeclarative-release module-qtcanvas3d-release module-qtenginio-release module-qt3d-release module-qtwayland-release module-qtconnectivity-release module-qtwebsockets-release module-qtwebchannel-release module-qtsensors-release module-qtmultimedia-release module-qtwinextras-release module-qtgraphicaleffects-release module-qtquickcontrols-release module-qtquickcontrols2-release module-qtlocation-release module-qtwebengine-release module-qtwebview-release module-qttools-release module-qtscript-release module-qttranslations-release module-qtdoc-release

html_docs:
	$(MAKE) -f $(MAKEFILE) prepare_docs && $(MAKE) -f $(MAKEFILE) generate_docs

docs:
	$(MAKE) -f $(MAKEFILE) html_docs && $(MAKE) -f $(MAKEFILE) qch_docs

module-qtbase-install_html_docs:
	@if not exist qtbase\ mkdir qtbase\ & if not exist qtbase\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtbase\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtbase\qtbase.pro -o Makefile ) && $(MAKE) -f Makefile install_html_docs
module-qtmacextras-install_html_docs: module-qtbase-install_html_docs
	@if not exist qtmacextras\ mkdir qtmacextras\ & if not exist qtmacextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtmacextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtmacextras\qtmacextras.pro -o Makefile ) && $(MAKE) -f Makefile install_html_docs
module-qtx11extras-install_html_docs: module-qtbase-install_html_docs
	@if not exist qtx11extras\ mkdir qtx11extras\ & if not exist qtx11extras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtx11extras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtx11extras\qtx11extras.pro -o Makefile ) && $(MAKE) -f Makefile install_html_docs
module-qtimageformats-install_html_docs: module-qtbase-install_html_docs
	@if not exist qtimageformats\ mkdir qtimageformats\ & if not exist qtimageformats\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtimageformats\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtimageformats\qtimageformats.pro -o Makefile ) && $(MAKE) -f Makefile install_html_docs
module-qtandroidextras-install_html_docs: module-qtbase-install_html_docs
	@if not exist qtandroidextras\ mkdir qtandroidextras\ & if not exist qtandroidextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtandroidextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtandroidextras\qtandroidextras.pro -o Makefile ) && $(MAKE) -f Makefile install_html_docs
module-qtserialport-install_html_docs: module-qtbase-install_html_docs
	@if not exist qtserialport\ mkdir qtserialport\ & if not exist qtserialport\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtserialport\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtserialport\qtserialport.pro -o Makefile ) && $(MAKE) -f Makefile install_html_docs
module-qtserialbus-install_html_docs: module-qtserialport-install_html_docs
	@if not exist qtserialbus\ mkdir qtserialbus\ & if not exist qtserialbus\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtserialbus\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtserialbus\qtserialbus.pro -o Makefile ) && $(MAKE) -f Makefile install_html_docs
module-qtactiveqt-install_html_docs: module-qtbase-install_html_docs
	@if not exist qtactiveqt\ mkdir qtactiveqt\ & if not exist qtactiveqt\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtactiveqt\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtactiveqt\qtactiveqt.pro -o Makefile ) && $(MAKE) -f Makefile install_html_docs
module-qtxmlpatterns-install_html_docs: module-qtbase-install_html_docs
	@if not exist qtxmlpatterns\ mkdir qtxmlpatterns\ & if not exist qtxmlpatterns\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtxmlpatterns\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtxmlpatterns\qtxmlpatterns.pro -o Makefile ) && $(MAKE) -f Makefile install_html_docs
module-qtsvg-install_html_docs: module-qtbase-install_html_docs
	@if not exist qtsvg\ mkdir qtsvg\ & if not exist qtsvg\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtsvg\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtsvg\qtsvg.pro -o Makefile ) && $(MAKE) -f Makefile install_html_docs
module-qtdeclarative-install_html_docs: module-qtbase-install_html_docs module-qtsvg-install_html_docs module-qtxmlpatterns-install_html_docs
	@if not exist qtdeclarative\ mkdir qtdeclarative\ & if not exist qtdeclarative\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtdeclarative\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtdeclarative\qtdeclarative.pro -o Makefile ) && $(MAKE) -f Makefile install_html_docs
module-qtcanvas3d-install_html_docs: module-qtdeclarative-install_html_docs
	@if not exist qtcanvas3d\ mkdir qtcanvas3d\ & if not exist qtcanvas3d\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtcanvas3d\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtcanvas3d\qtcanvas3d.pro -o Makefile ) && $(MAKE) -f Makefile install_html_docs
module-qtenginio-install_html_docs: module-qtdeclarative-install_html_docs
	@if not exist qtenginio\ mkdir qtenginio\ & if not exist qtenginio\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtenginio\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtenginio\qtenginio.pro -o Makefile ) && $(MAKE) -f Makefile install_html_docs
module-qt3d-install_html_docs: module-qtdeclarative-install_html_docs module-qtimageformats-install_html_docs
	@if not exist qt3d\ mkdir qt3d\ & if not exist qt3d\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qt3d\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qt3d\qt3d.pro -o Makefile ) && $(MAKE) -f Makefile install_html_docs
module-qtwayland-install_html_docs: module-qtbase-install_html_docs module-qtdeclarative-install_html_docs
	@if not exist qtwayland\ mkdir qtwayland\ & if not exist qtwayland\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwayland\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwayland\qtwayland.pro -o Makefile ) && $(MAKE) -f Makefile install_html_docs
module-qtconnectivity-install_html_docs: module-qtbase-install_html_docs module-qtdeclarative-install_html_docs module-qtandroidextras-install_html_docs
	@if not exist qtconnectivity\ mkdir qtconnectivity\ & if not exist qtconnectivity\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtconnectivity\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtconnectivity\qtconnectivity.pro -o Makefile ) && $(MAKE) -f Makefile install_html_docs
module-qtwebsockets-install_html_docs: module-qtbase-install_html_docs module-qtdeclarative-install_html_docs
	@if not exist qtwebsockets\ mkdir qtwebsockets\ & if not exist qtwebsockets\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebsockets\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebsockets\qtwebsockets.pro -o Makefile ) && $(MAKE) -f Makefile install_html_docs
module-qtwebchannel-install_html_docs: module-qtbase-install_html_docs module-qtdeclarative-install_html_docs module-qtwebsockets-install_html_docs
	@if not exist qtwebchannel\ mkdir qtwebchannel\ & if not exist qtwebchannel\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebchannel\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebchannel\qtwebchannel.pro -o Makefile ) && $(MAKE) -f Makefile install_html_docs
module-qtsensors-install_html_docs: module-qtbase-install_html_docs module-qtdeclarative-install_html_docs
	@if not exist qtsensors\ mkdir qtsensors\ & if not exist qtsensors\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtsensors\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtsensors\qtsensors.pro -o Makefile ) && $(MAKE) -f Makefile install_html_docs
module-qtmultimedia-install_html_docs: module-qtbase-install_html_docs module-qtdeclarative-install_html_docs
	@if not exist qtmultimedia\ mkdir qtmultimedia\ & if not exist qtmultimedia\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtmultimedia\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtmultimedia\qtmultimedia.pro -o Makefile ) && $(MAKE) -f Makefile install_html_docs
module-qtwinextras-install_html_docs: module-qtbase-install_html_docs module-qtdeclarative-install_html_docs module-qtmultimedia-install_html_docs
	@if not exist qtwinextras\ mkdir qtwinextras\ & if not exist qtwinextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwinextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwinextras\qtwinextras.pro -o Makefile ) && $(MAKE) -f Makefile install_html_docs
module-qtgraphicaleffects-install_html_docs: module-qtdeclarative-install_html_docs
	@if not exist qtgraphicaleffects\ mkdir qtgraphicaleffects\ & if not exist qtgraphicaleffects\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtgraphicaleffects\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtgraphicaleffects\qtgraphicaleffects.pro -o Makefile ) && $(MAKE) -f Makefile install_html_docs
module-qtquickcontrols-install_html_docs: module-qtdeclarative-install_html_docs module-qtgraphicaleffects-install_html_docs
	@if not exist qtquickcontrols\ mkdir qtquickcontrols\ & if not exist qtquickcontrols\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtquickcontrols\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtquickcontrols\qtquickcontrols.pro -o Makefile ) && $(MAKE) -f Makefile install_html_docs
module-qtquickcontrols2-install_html_docs: module-qtquickcontrols-install_html_docs
	@if not exist qtquickcontrols2\ mkdir qtquickcontrols2\ & if not exist qtquickcontrols2\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtquickcontrols2\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtquickcontrols2\qtquickcontrols2.pro -o Makefile ) && $(MAKE) -f Makefile install_html_docs
module-qtlocation-install_html_docs: module-qtbase-install_html_docs module-qtdeclarative-install_html_docs module-qtquickcontrols-install_html_docs module-qtserialport-install_html_docs
	@if not exist qtlocation\ mkdir qtlocation\ & if not exist qtlocation\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtlocation\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtlocation\qtlocation.pro -o Makefile ) && $(MAKE) -f Makefile install_html_docs
module-qtwebengine-install_html_docs: module-qtquickcontrols-install_html_docs module-qtwebchannel-install_html_docs module-qtlocation-install_html_docs
	@if not exist qtwebengine\ mkdir qtwebengine\ & if not exist qtwebengine\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebengine\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebengine\qtwebengine.pro -o Makefile ) && $(MAKE) -f Makefile install_html_docs
module-qtwebview-install_html_docs: module-qtdeclarative-install_html_docs module-qtwebengine-install_html_docs
	@if not exist qtwebview\ mkdir qtwebview\ & if not exist qtwebview\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebview\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebview\qtwebview.pro -o Makefile ) && $(MAKE) -f Makefile install_html_docs
module-qttools-install_html_docs: module-qtbase-install_html_docs module-qtdeclarative-install_html_docs module-qtactiveqt-install_html_docs
	@if not exist qttools\ mkdir qttools\ & if not exist qttools\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qttools\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qttools\qttools.pro -o Makefile ) && $(MAKE) -f Makefile install_html_docs
module-qtscript-install_html_docs: module-qtbase-install_html_docs module-qttools-install_html_docs
	@if not exist qtscript\ mkdir qtscript\ & if not exist qtscript\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtscript\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtscript\qtscript.pro -o Makefile ) && $(MAKE) -f Makefile install_html_docs
module-qttranslations-install_html_docs: module-qttools-install_html_docs
	@if not exist qttranslations\ mkdir qttranslations\ & if not exist qttranslations\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qttranslations\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qttranslations\qttranslations.pro -o Makefile ) && $(MAKE) -f Makefile install_html_docs
module-qtdoc-install_html_docs: module-qtdeclarative-install_html_docs
	@if not exist qtdoc\ mkdir qtdoc\ & if not exist qtdoc\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtdoc\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtdoc\qtdoc.pro -o Makefile ) && $(MAKE) -f Makefile install_html_docs
install_html_docs: module-qtbase-install_html_docs module-qtmacextras-install_html_docs module-qtx11extras-install_html_docs module-qtimageformats-install_html_docs module-qtandroidextras-install_html_docs module-qtserialport-install_html_docs module-qtserialbus-install_html_docs module-qtactiveqt-install_html_docs module-qtxmlpatterns-install_html_docs module-qtsvg-install_html_docs module-qtdeclarative-install_html_docs module-qtcanvas3d-install_html_docs module-qtenginio-install_html_docs module-qt3d-install_html_docs module-qtwayland-install_html_docs module-qtconnectivity-install_html_docs module-qtwebsockets-install_html_docs module-qtwebchannel-install_html_docs module-qtsensors-install_html_docs module-qtmultimedia-install_html_docs module-qtwinextras-install_html_docs module-qtgraphicaleffects-install_html_docs module-qtquickcontrols-install_html_docs module-qtquickcontrols2-install_html_docs module-qtlocation-install_html_docs module-qtwebengine-install_html_docs module-qtwebview-install_html_docs module-qttools-install_html_docs module-qtscript-install_html_docs module-qttranslations-install_html_docs module-qtdoc-install_html_docs

module-qtbase-uninstall_html_docs:
	@if not exist qtbase\ mkdir qtbase\ & if not exist qtbase\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtbase\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtbase\qtbase.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_html_docs
module-qtmacextras-uninstall_html_docs: module-qtbase-uninstall_html_docs
	@if not exist qtmacextras\ mkdir qtmacextras\ & if not exist qtmacextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtmacextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtmacextras\qtmacextras.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_html_docs
module-qtx11extras-uninstall_html_docs: module-qtbase-uninstall_html_docs
	@if not exist qtx11extras\ mkdir qtx11extras\ & if not exist qtx11extras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtx11extras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtx11extras\qtx11extras.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_html_docs
module-qtimageformats-uninstall_html_docs: module-qtbase-uninstall_html_docs
	@if not exist qtimageformats\ mkdir qtimageformats\ & if not exist qtimageformats\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtimageformats\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtimageformats\qtimageformats.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_html_docs
module-qtandroidextras-uninstall_html_docs: module-qtbase-uninstall_html_docs
	@if not exist qtandroidextras\ mkdir qtandroidextras\ & if not exist qtandroidextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtandroidextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtandroidextras\qtandroidextras.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_html_docs
module-qtserialport-uninstall_html_docs: module-qtbase-uninstall_html_docs
	@if not exist qtserialport\ mkdir qtserialport\ & if not exist qtserialport\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtserialport\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtserialport\qtserialport.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_html_docs
module-qtserialbus-uninstall_html_docs: module-qtserialport-uninstall_html_docs
	@if not exist qtserialbus\ mkdir qtserialbus\ & if not exist qtserialbus\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtserialbus\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtserialbus\qtserialbus.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_html_docs
module-qtactiveqt-uninstall_html_docs: module-qtbase-uninstall_html_docs
	@if not exist qtactiveqt\ mkdir qtactiveqt\ & if not exist qtactiveqt\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtactiveqt\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtactiveqt\qtactiveqt.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_html_docs
module-qtxmlpatterns-uninstall_html_docs: module-qtbase-uninstall_html_docs
	@if not exist qtxmlpatterns\ mkdir qtxmlpatterns\ & if not exist qtxmlpatterns\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtxmlpatterns\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtxmlpatterns\qtxmlpatterns.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_html_docs
module-qtsvg-uninstall_html_docs: module-qtbase-uninstall_html_docs
	@if not exist qtsvg\ mkdir qtsvg\ & if not exist qtsvg\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtsvg\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtsvg\qtsvg.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_html_docs
module-qtdeclarative-uninstall_html_docs: module-qtbase-uninstall_html_docs module-qtsvg-uninstall_html_docs module-qtxmlpatterns-uninstall_html_docs
	@if not exist qtdeclarative\ mkdir qtdeclarative\ & if not exist qtdeclarative\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtdeclarative\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtdeclarative\qtdeclarative.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_html_docs
module-qtcanvas3d-uninstall_html_docs: module-qtdeclarative-uninstall_html_docs
	@if not exist qtcanvas3d\ mkdir qtcanvas3d\ & if not exist qtcanvas3d\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtcanvas3d\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtcanvas3d\qtcanvas3d.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_html_docs
module-qtenginio-uninstall_html_docs: module-qtdeclarative-uninstall_html_docs
	@if not exist qtenginio\ mkdir qtenginio\ & if not exist qtenginio\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtenginio\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtenginio\qtenginio.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_html_docs
module-qt3d-uninstall_html_docs: module-qtdeclarative-uninstall_html_docs module-qtimageformats-uninstall_html_docs
	@if not exist qt3d\ mkdir qt3d\ & if not exist qt3d\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qt3d\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qt3d\qt3d.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_html_docs
module-qtwayland-uninstall_html_docs: module-qtbase-uninstall_html_docs module-qtdeclarative-uninstall_html_docs
	@if not exist qtwayland\ mkdir qtwayland\ & if not exist qtwayland\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwayland\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwayland\qtwayland.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_html_docs
module-qtconnectivity-uninstall_html_docs: module-qtbase-uninstall_html_docs module-qtdeclarative-uninstall_html_docs module-qtandroidextras-uninstall_html_docs
	@if not exist qtconnectivity\ mkdir qtconnectivity\ & if not exist qtconnectivity\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtconnectivity\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtconnectivity\qtconnectivity.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_html_docs
module-qtwebsockets-uninstall_html_docs: module-qtbase-uninstall_html_docs module-qtdeclarative-uninstall_html_docs
	@if not exist qtwebsockets\ mkdir qtwebsockets\ & if not exist qtwebsockets\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebsockets\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebsockets\qtwebsockets.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_html_docs
module-qtwebchannel-uninstall_html_docs: module-qtbase-uninstall_html_docs module-qtdeclarative-uninstall_html_docs module-qtwebsockets-uninstall_html_docs
	@if not exist qtwebchannel\ mkdir qtwebchannel\ & if not exist qtwebchannel\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebchannel\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebchannel\qtwebchannel.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_html_docs
module-qtsensors-uninstall_html_docs: module-qtbase-uninstall_html_docs module-qtdeclarative-uninstall_html_docs
	@if not exist qtsensors\ mkdir qtsensors\ & if not exist qtsensors\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtsensors\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtsensors\qtsensors.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_html_docs
module-qtmultimedia-uninstall_html_docs: module-qtbase-uninstall_html_docs module-qtdeclarative-uninstall_html_docs
	@if not exist qtmultimedia\ mkdir qtmultimedia\ & if not exist qtmultimedia\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtmultimedia\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtmultimedia\qtmultimedia.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_html_docs
module-qtwinextras-uninstall_html_docs: module-qtbase-uninstall_html_docs module-qtdeclarative-uninstall_html_docs module-qtmultimedia-uninstall_html_docs
	@if not exist qtwinextras\ mkdir qtwinextras\ & if not exist qtwinextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwinextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwinextras\qtwinextras.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_html_docs
module-qtgraphicaleffects-uninstall_html_docs: module-qtdeclarative-uninstall_html_docs
	@if not exist qtgraphicaleffects\ mkdir qtgraphicaleffects\ & if not exist qtgraphicaleffects\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtgraphicaleffects\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtgraphicaleffects\qtgraphicaleffects.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_html_docs
module-qtquickcontrols-uninstall_html_docs: module-qtdeclarative-uninstall_html_docs module-qtgraphicaleffects-uninstall_html_docs
	@if not exist qtquickcontrols\ mkdir qtquickcontrols\ & if not exist qtquickcontrols\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtquickcontrols\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtquickcontrols\qtquickcontrols.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_html_docs
module-qtquickcontrols2-uninstall_html_docs: module-qtquickcontrols-uninstall_html_docs
	@if not exist qtquickcontrols2\ mkdir qtquickcontrols2\ & if not exist qtquickcontrols2\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtquickcontrols2\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtquickcontrols2\qtquickcontrols2.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_html_docs
module-qtlocation-uninstall_html_docs: module-qtbase-uninstall_html_docs module-qtdeclarative-uninstall_html_docs module-qtquickcontrols-uninstall_html_docs module-qtserialport-uninstall_html_docs
	@if not exist qtlocation\ mkdir qtlocation\ & if not exist qtlocation\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtlocation\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtlocation\qtlocation.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_html_docs
module-qtwebengine-uninstall_html_docs: module-qtquickcontrols-uninstall_html_docs module-qtwebchannel-uninstall_html_docs module-qtlocation-uninstall_html_docs
	@if not exist qtwebengine\ mkdir qtwebengine\ & if not exist qtwebengine\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebengine\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebengine\qtwebengine.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_html_docs
module-qtwebview-uninstall_html_docs: module-qtdeclarative-uninstall_html_docs module-qtwebengine-uninstall_html_docs
	@if not exist qtwebview\ mkdir qtwebview\ & if not exist qtwebview\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebview\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebview\qtwebview.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_html_docs
module-qttools-uninstall_html_docs: module-qtbase-uninstall_html_docs module-qtdeclarative-uninstall_html_docs module-qtactiveqt-uninstall_html_docs
	@if not exist qttools\ mkdir qttools\ & if not exist qttools\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qttools\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qttools\qttools.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_html_docs
module-qtscript-uninstall_html_docs: module-qtbase-uninstall_html_docs module-qttools-uninstall_html_docs
	@if not exist qtscript\ mkdir qtscript\ & if not exist qtscript\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtscript\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtscript\qtscript.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_html_docs
module-qttranslations-uninstall_html_docs: module-qttools-uninstall_html_docs
	@if not exist qttranslations\ mkdir qttranslations\ & if not exist qttranslations\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qttranslations\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qttranslations\qttranslations.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_html_docs
module-qtdoc-uninstall_html_docs: module-qtdeclarative-uninstall_html_docs
	@if not exist qtdoc\ mkdir qtdoc\ & if not exist qtdoc\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtdoc\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtdoc\qtdoc.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_html_docs
uninstall_html_docs: module-qtbase-uninstall_html_docs module-qtmacextras-uninstall_html_docs module-qtx11extras-uninstall_html_docs module-qtimageformats-uninstall_html_docs module-qtandroidextras-uninstall_html_docs module-qtserialport-uninstall_html_docs module-qtserialbus-uninstall_html_docs module-qtactiveqt-uninstall_html_docs module-qtxmlpatterns-uninstall_html_docs module-qtsvg-uninstall_html_docs module-qtdeclarative-uninstall_html_docs module-qtcanvas3d-uninstall_html_docs module-qtenginio-uninstall_html_docs module-qt3d-uninstall_html_docs module-qtwayland-uninstall_html_docs module-qtconnectivity-uninstall_html_docs module-qtwebsockets-uninstall_html_docs module-qtwebchannel-uninstall_html_docs module-qtsensors-uninstall_html_docs module-qtmultimedia-uninstall_html_docs module-qtwinextras-uninstall_html_docs module-qtgraphicaleffects-uninstall_html_docs module-qtquickcontrols-uninstall_html_docs module-qtquickcontrols2-uninstall_html_docs module-qtlocation-uninstall_html_docs module-qtwebengine-uninstall_html_docs module-qtwebview-uninstall_html_docs module-qttools-uninstall_html_docs module-qtscript-uninstall_html_docs module-qttranslations-uninstall_html_docs module-qtdoc-uninstall_html_docs

module-qtbase-install_qch_docs:
	@if not exist qtbase\ mkdir qtbase\ & if not exist qtbase\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtbase\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtbase\qtbase.pro -o Makefile ) && $(MAKE) -f Makefile install_qch_docs
module-qtmacextras-install_qch_docs: module-qtbase-install_qch_docs
	@if not exist qtmacextras\ mkdir qtmacextras\ & if not exist qtmacextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtmacextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtmacextras\qtmacextras.pro -o Makefile ) && $(MAKE) -f Makefile install_qch_docs
module-qtx11extras-install_qch_docs: module-qtbase-install_qch_docs
	@if not exist qtx11extras\ mkdir qtx11extras\ & if not exist qtx11extras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtx11extras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtx11extras\qtx11extras.pro -o Makefile ) && $(MAKE) -f Makefile install_qch_docs
module-qtimageformats-install_qch_docs: module-qtbase-install_qch_docs
	@if not exist qtimageformats\ mkdir qtimageformats\ & if not exist qtimageformats\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtimageformats\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtimageformats\qtimageformats.pro -o Makefile ) && $(MAKE) -f Makefile install_qch_docs
module-qtandroidextras-install_qch_docs: module-qtbase-install_qch_docs
	@if not exist qtandroidextras\ mkdir qtandroidextras\ & if not exist qtandroidextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtandroidextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtandroidextras\qtandroidextras.pro -o Makefile ) && $(MAKE) -f Makefile install_qch_docs
module-qtserialport-install_qch_docs: module-qtbase-install_qch_docs
	@if not exist qtserialport\ mkdir qtserialport\ & if not exist qtserialport\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtserialport\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtserialport\qtserialport.pro -o Makefile ) && $(MAKE) -f Makefile install_qch_docs
module-qtserialbus-install_qch_docs: module-qtserialport-install_qch_docs
	@if not exist qtserialbus\ mkdir qtserialbus\ & if not exist qtserialbus\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtserialbus\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtserialbus\qtserialbus.pro -o Makefile ) && $(MAKE) -f Makefile install_qch_docs
module-qtactiveqt-install_qch_docs: module-qtbase-install_qch_docs
	@if not exist qtactiveqt\ mkdir qtactiveqt\ & if not exist qtactiveqt\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtactiveqt\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtactiveqt\qtactiveqt.pro -o Makefile ) && $(MAKE) -f Makefile install_qch_docs
module-qtxmlpatterns-install_qch_docs: module-qtbase-install_qch_docs
	@if not exist qtxmlpatterns\ mkdir qtxmlpatterns\ & if not exist qtxmlpatterns\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtxmlpatterns\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtxmlpatterns\qtxmlpatterns.pro -o Makefile ) && $(MAKE) -f Makefile install_qch_docs
module-qtsvg-install_qch_docs: module-qtbase-install_qch_docs
	@if not exist qtsvg\ mkdir qtsvg\ & if not exist qtsvg\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtsvg\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtsvg\qtsvg.pro -o Makefile ) && $(MAKE) -f Makefile install_qch_docs
module-qtdeclarative-install_qch_docs: module-qtbase-install_qch_docs module-qtsvg-install_qch_docs module-qtxmlpatterns-install_qch_docs
	@if not exist qtdeclarative\ mkdir qtdeclarative\ & if not exist qtdeclarative\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtdeclarative\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtdeclarative\qtdeclarative.pro -o Makefile ) && $(MAKE) -f Makefile install_qch_docs
module-qtcanvas3d-install_qch_docs: module-qtdeclarative-install_qch_docs
	@if not exist qtcanvas3d\ mkdir qtcanvas3d\ & if not exist qtcanvas3d\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtcanvas3d\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtcanvas3d\qtcanvas3d.pro -o Makefile ) && $(MAKE) -f Makefile install_qch_docs
module-qtenginio-install_qch_docs: module-qtdeclarative-install_qch_docs
	@if not exist qtenginio\ mkdir qtenginio\ & if not exist qtenginio\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtenginio\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtenginio\qtenginio.pro -o Makefile ) && $(MAKE) -f Makefile install_qch_docs
module-qt3d-install_qch_docs: module-qtdeclarative-install_qch_docs module-qtimageformats-install_qch_docs
	@if not exist qt3d\ mkdir qt3d\ & if not exist qt3d\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qt3d\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qt3d\qt3d.pro -o Makefile ) && $(MAKE) -f Makefile install_qch_docs
module-qtwayland-install_qch_docs: module-qtbase-install_qch_docs module-qtdeclarative-install_qch_docs
	@if not exist qtwayland\ mkdir qtwayland\ & if not exist qtwayland\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwayland\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwayland\qtwayland.pro -o Makefile ) && $(MAKE) -f Makefile install_qch_docs
module-qtconnectivity-install_qch_docs: module-qtbase-install_qch_docs module-qtdeclarative-install_qch_docs module-qtandroidextras-install_qch_docs
	@if not exist qtconnectivity\ mkdir qtconnectivity\ & if not exist qtconnectivity\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtconnectivity\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtconnectivity\qtconnectivity.pro -o Makefile ) && $(MAKE) -f Makefile install_qch_docs
module-qtwebsockets-install_qch_docs: module-qtbase-install_qch_docs module-qtdeclarative-install_qch_docs
	@if not exist qtwebsockets\ mkdir qtwebsockets\ & if not exist qtwebsockets\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebsockets\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebsockets\qtwebsockets.pro -o Makefile ) && $(MAKE) -f Makefile install_qch_docs
module-qtwebchannel-install_qch_docs: module-qtbase-install_qch_docs module-qtdeclarative-install_qch_docs module-qtwebsockets-install_qch_docs
	@if not exist qtwebchannel\ mkdir qtwebchannel\ & if not exist qtwebchannel\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebchannel\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebchannel\qtwebchannel.pro -o Makefile ) && $(MAKE) -f Makefile install_qch_docs
module-qtsensors-install_qch_docs: module-qtbase-install_qch_docs module-qtdeclarative-install_qch_docs
	@if not exist qtsensors\ mkdir qtsensors\ & if not exist qtsensors\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtsensors\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtsensors\qtsensors.pro -o Makefile ) && $(MAKE) -f Makefile install_qch_docs
module-qtmultimedia-install_qch_docs: module-qtbase-install_qch_docs module-qtdeclarative-install_qch_docs
	@if not exist qtmultimedia\ mkdir qtmultimedia\ & if not exist qtmultimedia\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtmultimedia\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtmultimedia\qtmultimedia.pro -o Makefile ) && $(MAKE) -f Makefile install_qch_docs
module-qtwinextras-install_qch_docs: module-qtbase-install_qch_docs module-qtdeclarative-install_qch_docs module-qtmultimedia-install_qch_docs
	@if not exist qtwinextras\ mkdir qtwinextras\ & if not exist qtwinextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwinextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwinextras\qtwinextras.pro -o Makefile ) && $(MAKE) -f Makefile install_qch_docs
module-qtgraphicaleffects-install_qch_docs: module-qtdeclarative-install_qch_docs
	@if not exist qtgraphicaleffects\ mkdir qtgraphicaleffects\ & if not exist qtgraphicaleffects\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtgraphicaleffects\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtgraphicaleffects\qtgraphicaleffects.pro -o Makefile ) && $(MAKE) -f Makefile install_qch_docs
module-qtquickcontrols-install_qch_docs: module-qtdeclarative-install_qch_docs module-qtgraphicaleffects-install_qch_docs
	@if not exist qtquickcontrols\ mkdir qtquickcontrols\ & if not exist qtquickcontrols\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtquickcontrols\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtquickcontrols\qtquickcontrols.pro -o Makefile ) && $(MAKE) -f Makefile install_qch_docs
module-qtquickcontrols2-install_qch_docs: module-qtquickcontrols-install_qch_docs
	@if not exist qtquickcontrols2\ mkdir qtquickcontrols2\ & if not exist qtquickcontrols2\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtquickcontrols2\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtquickcontrols2\qtquickcontrols2.pro -o Makefile ) && $(MAKE) -f Makefile install_qch_docs
module-qtlocation-install_qch_docs: module-qtbase-install_qch_docs module-qtdeclarative-install_qch_docs module-qtquickcontrols-install_qch_docs module-qtserialport-install_qch_docs
	@if not exist qtlocation\ mkdir qtlocation\ & if not exist qtlocation\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtlocation\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtlocation\qtlocation.pro -o Makefile ) && $(MAKE) -f Makefile install_qch_docs
module-qtwebengine-install_qch_docs: module-qtquickcontrols-install_qch_docs module-qtwebchannel-install_qch_docs module-qtlocation-install_qch_docs
	@if not exist qtwebengine\ mkdir qtwebengine\ & if not exist qtwebengine\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebengine\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebengine\qtwebengine.pro -o Makefile ) && $(MAKE) -f Makefile install_qch_docs
module-qtwebview-install_qch_docs: module-qtdeclarative-install_qch_docs module-qtwebengine-install_qch_docs
	@if not exist qtwebview\ mkdir qtwebview\ & if not exist qtwebview\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebview\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebview\qtwebview.pro -o Makefile ) && $(MAKE) -f Makefile install_qch_docs
module-qttools-install_qch_docs: module-qtbase-install_qch_docs module-qtdeclarative-install_qch_docs module-qtactiveqt-install_qch_docs
	@if not exist qttools\ mkdir qttools\ & if not exist qttools\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qttools\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qttools\qttools.pro -o Makefile ) && $(MAKE) -f Makefile install_qch_docs
module-qtscript-install_qch_docs: module-qtbase-install_qch_docs module-qttools-install_qch_docs
	@if not exist qtscript\ mkdir qtscript\ & if not exist qtscript\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtscript\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtscript\qtscript.pro -o Makefile ) && $(MAKE) -f Makefile install_qch_docs
module-qttranslations-install_qch_docs: module-qttools-install_qch_docs
	@if not exist qttranslations\ mkdir qttranslations\ & if not exist qttranslations\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qttranslations\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qttranslations\qttranslations.pro -o Makefile ) && $(MAKE) -f Makefile install_qch_docs
module-qtdoc-install_qch_docs: module-qtdeclarative-install_qch_docs
	@if not exist qtdoc\ mkdir qtdoc\ & if not exist qtdoc\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtdoc\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtdoc\qtdoc.pro -o Makefile ) && $(MAKE) -f Makefile install_qch_docs
install_qch_docs: module-qtbase-install_qch_docs module-qtmacextras-install_qch_docs module-qtx11extras-install_qch_docs module-qtimageformats-install_qch_docs module-qtandroidextras-install_qch_docs module-qtserialport-install_qch_docs module-qtserialbus-install_qch_docs module-qtactiveqt-install_qch_docs module-qtxmlpatterns-install_qch_docs module-qtsvg-install_qch_docs module-qtdeclarative-install_qch_docs module-qtcanvas3d-install_qch_docs module-qtenginio-install_qch_docs module-qt3d-install_qch_docs module-qtwayland-install_qch_docs module-qtconnectivity-install_qch_docs module-qtwebsockets-install_qch_docs module-qtwebchannel-install_qch_docs module-qtsensors-install_qch_docs module-qtmultimedia-install_qch_docs module-qtwinextras-install_qch_docs module-qtgraphicaleffects-install_qch_docs module-qtquickcontrols-install_qch_docs module-qtquickcontrols2-install_qch_docs module-qtlocation-install_qch_docs module-qtwebengine-install_qch_docs module-qtwebview-install_qch_docs module-qttools-install_qch_docs module-qtscript-install_qch_docs module-qttranslations-install_qch_docs module-qtdoc-install_qch_docs

module-qtbase-uninstall_qch_docs:
	@if not exist qtbase\ mkdir qtbase\ & if not exist qtbase\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtbase\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtbase\qtbase.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_qch_docs
module-qtmacextras-uninstall_qch_docs: module-qtbase-uninstall_qch_docs
	@if not exist qtmacextras\ mkdir qtmacextras\ & if not exist qtmacextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtmacextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtmacextras\qtmacextras.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_qch_docs
module-qtx11extras-uninstall_qch_docs: module-qtbase-uninstall_qch_docs
	@if not exist qtx11extras\ mkdir qtx11extras\ & if not exist qtx11extras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtx11extras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtx11extras\qtx11extras.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_qch_docs
module-qtimageformats-uninstall_qch_docs: module-qtbase-uninstall_qch_docs
	@if not exist qtimageformats\ mkdir qtimageformats\ & if not exist qtimageformats\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtimageformats\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtimageformats\qtimageformats.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_qch_docs
module-qtandroidextras-uninstall_qch_docs: module-qtbase-uninstall_qch_docs
	@if not exist qtandroidextras\ mkdir qtandroidextras\ & if not exist qtandroidextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtandroidextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtandroidextras\qtandroidextras.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_qch_docs
module-qtserialport-uninstall_qch_docs: module-qtbase-uninstall_qch_docs
	@if not exist qtserialport\ mkdir qtserialport\ & if not exist qtserialport\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtserialport\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtserialport\qtserialport.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_qch_docs
module-qtserialbus-uninstall_qch_docs: module-qtserialport-uninstall_qch_docs
	@if not exist qtserialbus\ mkdir qtserialbus\ & if not exist qtserialbus\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtserialbus\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtserialbus\qtserialbus.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_qch_docs
module-qtactiveqt-uninstall_qch_docs: module-qtbase-uninstall_qch_docs
	@if not exist qtactiveqt\ mkdir qtactiveqt\ & if not exist qtactiveqt\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtactiveqt\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtactiveqt\qtactiveqt.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_qch_docs
module-qtxmlpatterns-uninstall_qch_docs: module-qtbase-uninstall_qch_docs
	@if not exist qtxmlpatterns\ mkdir qtxmlpatterns\ & if not exist qtxmlpatterns\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtxmlpatterns\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtxmlpatterns\qtxmlpatterns.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_qch_docs
module-qtsvg-uninstall_qch_docs: module-qtbase-uninstall_qch_docs
	@if not exist qtsvg\ mkdir qtsvg\ & if not exist qtsvg\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtsvg\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtsvg\qtsvg.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_qch_docs
module-qtdeclarative-uninstall_qch_docs: module-qtbase-uninstall_qch_docs module-qtsvg-uninstall_qch_docs module-qtxmlpatterns-uninstall_qch_docs
	@if not exist qtdeclarative\ mkdir qtdeclarative\ & if not exist qtdeclarative\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtdeclarative\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtdeclarative\qtdeclarative.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_qch_docs
module-qtcanvas3d-uninstall_qch_docs: module-qtdeclarative-uninstall_qch_docs
	@if not exist qtcanvas3d\ mkdir qtcanvas3d\ & if not exist qtcanvas3d\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtcanvas3d\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtcanvas3d\qtcanvas3d.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_qch_docs
module-qtenginio-uninstall_qch_docs: module-qtdeclarative-uninstall_qch_docs
	@if not exist qtenginio\ mkdir qtenginio\ & if not exist qtenginio\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtenginio\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtenginio\qtenginio.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_qch_docs
module-qt3d-uninstall_qch_docs: module-qtdeclarative-uninstall_qch_docs module-qtimageformats-uninstall_qch_docs
	@if not exist qt3d\ mkdir qt3d\ & if not exist qt3d\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qt3d\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qt3d\qt3d.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_qch_docs
module-qtwayland-uninstall_qch_docs: module-qtbase-uninstall_qch_docs module-qtdeclarative-uninstall_qch_docs
	@if not exist qtwayland\ mkdir qtwayland\ & if not exist qtwayland\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwayland\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwayland\qtwayland.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_qch_docs
module-qtconnectivity-uninstall_qch_docs: module-qtbase-uninstall_qch_docs module-qtdeclarative-uninstall_qch_docs module-qtandroidextras-uninstall_qch_docs
	@if not exist qtconnectivity\ mkdir qtconnectivity\ & if not exist qtconnectivity\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtconnectivity\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtconnectivity\qtconnectivity.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_qch_docs
module-qtwebsockets-uninstall_qch_docs: module-qtbase-uninstall_qch_docs module-qtdeclarative-uninstall_qch_docs
	@if not exist qtwebsockets\ mkdir qtwebsockets\ & if not exist qtwebsockets\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebsockets\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebsockets\qtwebsockets.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_qch_docs
module-qtwebchannel-uninstall_qch_docs: module-qtbase-uninstall_qch_docs module-qtdeclarative-uninstall_qch_docs module-qtwebsockets-uninstall_qch_docs
	@if not exist qtwebchannel\ mkdir qtwebchannel\ & if not exist qtwebchannel\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebchannel\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebchannel\qtwebchannel.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_qch_docs
module-qtsensors-uninstall_qch_docs: module-qtbase-uninstall_qch_docs module-qtdeclarative-uninstall_qch_docs
	@if not exist qtsensors\ mkdir qtsensors\ & if not exist qtsensors\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtsensors\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtsensors\qtsensors.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_qch_docs
module-qtmultimedia-uninstall_qch_docs: module-qtbase-uninstall_qch_docs module-qtdeclarative-uninstall_qch_docs
	@if not exist qtmultimedia\ mkdir qtmultimedia\ & if not exist qtmultimedia\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtmultimedia\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtmultimedia\qtmultimedia.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_qch_docs
module-qtwinextras-uninstall_qch_docs: module-qtbase-uninstall_qch_docs module-qtdeclarative-uninstall_qch_docs module-qtmultimedia-uninstall_qch_docs
	@if not exist qtwinextras\ mkdir qtwinextras\ & if not exist qtwinextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwinextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwinextras\qtwinextras.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_qch_docs
module-qtgraphicaleffects-uninstall_qch_docs: module-qtdeclarative-uninstall_qch_docs
	@if not exist qtgraphicaleffects\ mkdir qtgraphicaleffects\ & if not exist qtgraphicaleffects\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtgraphicaleffects\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtgraphicaleffects\qtgraphicaleffects.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_qch_docs
module-qtquickcontrols-uninstall_qch_docs: module-qtdeclarative-uninstall_qch_docs module-qtgraphicaleffects-uninstall_qch_docs
	@if not exist qtquickcontrols\ mkdir qtquickcontrols\ & if not exist qtquickcontrols\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtquickcontrols\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtquickcontrols\qtquickcontrols.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_qch_docs
module-qtquickcontrols2-uninstall_qch_docs: module-qtquickcontrols-uninstall_qch_docs
	@if not exist qtquickcontrols2\ mkdir qtquickcontrols2\ & if not exist qtquickcontrols2\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtquickcontrols2\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtquickcontrols2\qtquickcontrols2.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_qch_docs
module-qtlocation-uninstall_qch_docs: module-qtbase-uninstall_qch_docs module-qtdeclarative-uninstall_qch_docs module-qtquickcontrols-uninstall_qch_docs module-qtserialport-uninstall_qch_docs
	@if not exist qtlocation\ mkdir qtlocation\ & if not exist qtlocation\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtlocation\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtlocation\qtlocation.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_qch_docs
module-qtwebengine-uninstall_qch_docs: module-qtquickcontrols-uninstall_qch_docs module-qtwebchannel-uninstall_qch_docs module-qtlocation-uninstall_qch_docs
	@if not exist qtwebengine\ mkdir qtwebengine\ & if not exist qtwebengine\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebengine\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebengine\qtwebengine.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_qch_docs
module-qtwebview-uninstall_qch_docs: module-qtdeclarative-uninstall_qch_docs module-qtwebengine-uninstall_qch_docs
	@if not exist qtwebview\ mkdir qtwebview\ & if not exist qtwebview\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebview\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebview\qtwebview.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_qch_docs
module-qttools-uninstall_qch_docs: module-qtbase-uninstall_qch_docs module-qtdeclarative-uninstall_qch_docs module-qtactiveqt-uninstall_qch_docs
	@if not exist qttools\ mkdir qttools\ & if not exist qttools\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qttools\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qttools\qttools.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_qch_docs
module-qtscript-uninstall_qch_docs: module-qtbase-uninstall_qch_docs module-qttools-uninstall_qch_docs
	@if not exist qtscript\ mkdir qtscript\ & if not exist qtscript\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtscript\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtscript\qtscript.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_qch_docs
module-qttranslations-uninstall_qch_docs: module-qttools-uninstall_qch_docs
	@if not exist qttranslations\ mkdir qttranslations\ & if not exist qttranslations\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qttranslations\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qttranslations\qttranslations.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_qch_docs
module-qtdoc-uninstall_qch_docs: module-qtdeclarative-uninstall_qch_docs
	@if not exist qtdoc\ mkdir qtdoc\ & if not exist qtdoc\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtdoc\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtdoc\qtdoc.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_qch_docs
uninstall_qch_docs: module-qtbase-uninstall_qch_docs module-qtmacextras-uninstall_qch_docs module-qtx11extras-uninstall_qch_docs module-qtimageformats-uninstall_qch_docs module-qtandroidextras-uninstall_qch_docs module-qtserialport-uninstall_qch_docs module-qtserialbus-uninstall_qch_docs module-qtactiveqt-uninstall_qch_docs module-qtxmlpatterns-uninstall_qch_docs module-qtsvg-uninstall_qch_docs module-qtdeclarative-uninstall_qch_docs module-qtcanvas3d-uninstall_qch_docs module-qtenginio-uninstall_qch_docs module-qt3d-uninstall_qch_docs module-qtwayland-uninstall_qch_docs module-qtconnectivity-uninstall_qch_docs module-qtwebsockets-uninstall_qch_docs module-qtwebchannel-uninstall_qch_docs module-qtsensors-uninstall_qch_docs module-qtmultimedia-uninstall_qch_docs module-qtwinextras-uninstall_qch_docs module-qtgraphicaleffects-uninstall_qch_docs module-qtquickcontrols-uninstall_qch_docs module-qtquickcontrols2-uninstall_qch_docs module-qtlocation-uninstall_qch_docs module-qtwebengine-uninstall_qch_docs module-qtwebview-uninstall_qch_docs module-qttools-uninstall_qch_docs module-qtscript-uninstall_qch_docs module-qttranslations-uninstall_qch_docs module-qtdoc-uninstall_qch_docs

module-qtbase-install_docs:
	@if not exist qtbase\ mkdir qtbase\ & if not exist qtbase\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtbase\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtbase\qtbase.pro -o Makefile ) && $(MAKE) -f Makefile install_docs
module-qtmacextras-install_docs: module-qtbase-install_docs
	@if not exist qtmacextras\ mkdir qtmacextras\ & if not exist qtmacextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtmacextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtmacextras\qtmacextras.pro -o Makefile ) && $(MAKE) -f Makefile install_docs
module-qtx11extras-install_docs: module-qtbase-install_docs
	@if not exist qtx11extras\ mkdir qtx11extras\ & if not exist qtx11extras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtx11extras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtx11extras\qtx11extras.pro -o Makefile ) && $(MAKE) -f Makefile install_docs
module-qtimageformats-install_docs: module-qtbase-install_docs
	@if not exist qtimageformats\ mkdir qtimageformats\ & if not exist qtimageformats\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtimageformats\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtimageformats\qtimageformats.pro -o Makefile ) && $(MAKE) -f Makefile install_docs
module-qtandroidextras-install_docs: module-qtbase-install_docs
	@if not exist qtandroidextras\ mkdir qtandroidextras\ & if not exist qtandroidextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtandroidextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtandroidextras\qtandroidextras.pro -o Makefile ) && $(MAKE) -f Makefile install_docs
module-qtserialport-install_docs: module-qtbase-install_docs
	@if not exist qtserialport\ mkdir qtserialport\ & if not exist qtserialport\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtserialport\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtserialport\qtserialport.pro -o Makefile ) && $(MAKE) -f Makefile install_docs
module-qtserialbus-install_docs: module-qtserialport-install_docs
	@if not exist qtserialbus\ mkdir qtserialbus\ & if not exist qtserialbus\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtserialbus\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtserialbus\qtserialbus.pro -o Makefile ) && $(MAKE) -f Makefile install_docs
module-qtactiveqt-install_docs: module-qtbase-install_docs
	@if not exist qtactiveqt\ mkdir qtactiveqt\ & if not exist qtactiveqt\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtactiveqt\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtactiveqt\qtactiveqt.pro -o Makefile ) && $(MAKE) -f Makefile install_docs
module-qtxmlpatterns-install_docs: module-qtbase-install_docs
	@if not exist qtxmlpatterns\ mkdir qtxmlpatterns\ & if not exist qtxmlpatterns\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtxmlpatterns\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtxmlpatterns\qtxmlpatterns.pro -o Makefile ) && $(MAKE) -f Makefile install_docs
module-qtsvg-install_docs: module-qtbase-install_docs
	@if not exist qtsvg\ mkdir qtsvg\ & if not exist qtsvg\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtsvg\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtsvg\qtsvg.pro -o Makefile ) && $(MAKE) -f Makefile install_docs
module-qtdeclarative-install_docs: module-qtbase-install_docs module-qtsvg-install_docs module-qtxmlpatterns-install_docs
	@if not exist qtdeclarative\ mkdir qtdeclarative\ & if not exist qtdeclarative\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtdeclarative\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtdeclarative\qtdeclarative.pro -o Makefile ) && $(MAKE) -f Makefile install_docs
module-qtcanvas3d-install_docs: module-qtdeclarative-install_docs
	@if not exist qtcanvas3d\ mkdir qtcanvas3d\ & if not exist qtcanvas3d\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtcanvas3d\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtcanvas3d\qtcanvas3d.pro -o Makefile ) && $(MAKE) -f Makefile install_docs
module-qtenginio-install_docs: module-qtdeclarative-install_docs
	@if not exist qtenginio\ mkdir qtenginio\ & if not exist qtenginio\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtenginio\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtenginio\qtenginio.pro -o Makefile ) && $(MAKE) -f Makefile install_docs
module-qt3d-install_docs: module-qtdeclarative-install_docs module-qtimageformats-install_docs
	@if not exist qt3d\ mkdir qt3d\ & if not exist qt3d\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qt3d\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qt3d\qt3d.pro -o Makefile ) && $(MAKE) -f Makefile install_docs
module-qtwayland-install_docs: module-qtbase-install_docs module-qtdeclarative-install_docs
	@if not exist qtwayland\ mkdir qtwayland\ & if not exist qtwayland\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwayland\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwayland\qtwayland.pro -o Makefile ) && $(MAKE) -f Makefile install_docs
module-qtconnectivity-install_docs: module-qtbase-install_docs module-qtdeclarative-install_docs module-qtandroidextras-install_docs
	@if not exist qtconnectivity\ mkdir qtconnectivity\ & if not exist qtconnectivity\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtconnectivity\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtconnectivity\qtconnectivity.pro -o Makefile ) && $(MAKE) -f Makefile install_docs
module-qtwebsockets-install_docs: module-qtbase-install_docs module-qtdeclarative-install_docs
	@if not exist qtwebsockets\ mkdir qtwebsockets\ & if not exist qtwebsockets\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebsockets\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebsockets\qtwebsockets.pro -o Makefile ) && $(MAKE) -f Makefile install_docs
module-qtwebchannel-install_docs: module-qtbase-install_docs module-qtdeclarative-install_docs module-qtwebsockets-install_docs
	@if not exist qtwebchannel\ mkdir qtwebchannel\ & if not exist qtwebchannel\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebchannel\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebchannel\qtwebchannel.pro -o Makefile ) && $(MAKE) -f Makefile install_docs
module-qtsensors-install_docs: module-qtbase-install_docs module-qtdeclarative-install_docs
	@if not exist qtsensors\ mkdir qtsensors\ & if not exist qtsensors\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtsensors\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtsensors\qtsensors.pro -o Makefile ) && $(MAKE) -f Makefile install_docs
module-qtmultimedia-install_docs: module-qtbase-install_docs module-qtdeclarative-install_docs
	@if not exist qtmultimedia\ mkdir qtmultimedia\ & if not exist qtmultimedia\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtmultimedia\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtmultimedia\qtmultimedia.pro -o Makefile ) && $(MAKE) -f Makefile install_docs
module-qtwinextras-install_docs: module-qtbase-install_docs module-qtdeclarative-install_docs module-qtmultimedia-install_docs
	@if not exist qtwinextras\ mkdir qtwinextras\ & if not exist qtwinextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwinextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwinextras\qtwinextras.pro -o Makefile ) && $(MAKE) -f Makefile install_docs
module-qtgraphicaleffects-install_docs: module-qtdeclarative-install_docs
	@if not exist qtgraphicaleffects\ mkdir qtgraphicaleffects\ & if not exist qtgraphicaleffects\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtgraphicaleffects\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtgraphicaleffects\qtgraphicaleffects.pro -o Makefile ) && $(MAKE) -f Makefile install_docs
module-qtquickcontrols-install_docs: module-qtdeclarative-install_docs module-qtgraphicaleffects-install_docs
	@if not exist qtquickcontrols\ mkdir qtquickcontrols\ & if not exist qtquickcontrols\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtquickcontrols\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtquickcontrols\qtquickcontrols.pro -o Makefile ) && $(MAKE) -f Makefile install_docs
module-qtquickcontrols2-install_docs: module-qtquickcontrols-install_docs
	@if not exist qtquickcontrols2\ mkdir qtquickcontrols2\ & if not exist qtquickcontrols2\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtquickcontrols2\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtquickcontrols2\qtquickcontrols2.pro -o Makefile ) && $(MAKE) -f Makefile install_docs
module-qtlocation-install_docs: module-qtbase-install_docs module-qtdeclarative-install_docs module-qtquickcontrols-install_docs module-qtserialport-install_docs
	@if not exist qtlocation\ mkdir qtlocation\ & if not exist qtlocation\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtlocation\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtlocation\qtlocation.pro -o Makefile ) && $(MAKE) -f Makefile install_docs
module-qtwebengine-install_docs: module-qtquickcontrols-install_docs module-qtwebchannel-install_docs module-qtlocation-install_docs
	@if not exist qtwebengine\ mkdir qtwebengine\ & if not exist qtwebengine\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebengine\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebengine\qtwebengine.pro -o Makefile ) && $(MAKE) -f Makefile install_docs
module-qtwebview-install_docs: module-qtdeclarative-install_docs module-qtwebengine-install_docs
	@if not exist qtwebview\ mkdir qtwebview\ & if not exist qtwebview\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebview\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebview\qtwebview.pro -o Makefile ) && $(MAKE) -f Makefile install_docs
module-qttools-install_docs: module-qtbase-install_docs module-qtdeclarative-install_docs module-qtactiveqt-install_docs
	@if not exist qttools\ mkdir qttools\ & if not exist qttools\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qttools\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qttools\qttools.pro -o Makefile ) && $(MAKE) -f Makefile install_docs
module-qtscript-install_docs: module-qtbase-install_docs module-qttools-install_docs
	@if not exist qtscript\ mkdir qtscript\ & if not exist qtscript\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtscript\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtscript\qtscript.pro -o Makefile ) && $(MAKE) -f Makefile install_docs
module-qttranslations-install_docs: module-qttools-install_docs
	@if not exist qttranslations\ mkdir qttranslations\ & if not exist qttranslations\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qttranslations\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qttranslations\qttranslations.pro -o Makefile ) && $(MAKE) -f Makefile install_docs
module-qtdoc-install_docs: module-qtdeclarative-install_docs
	@if not exist qtdoc\ mkdir qtdoc\ & if not exist qtdoc\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtdoc\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtdoc\qtdoc.pro -o Makefile ) && $(MAKE) -f Makefile install_docs
install_docs: module-qtbase-install_docs module-qtmacextras-install_docs module-qtx11extras-install_docs module-qtimageformats-install_docs module-qtandroidextras-install_docs module-qtserialport-install_docs module-qtserialbus-install_docs module-qtactiveqt-install_docs module-qtxmlpatterns-install_docs module-qtsvg-install_docs module-qtdeclarative-install_docs module-qtcanvas3d-install_docs module-qtenginio-install_docs module-qt3d-install_docs module-qtwayland-install_docs module-qtconnectivity-install_docs module-qtwebsockets-install_docs module-qtwebchannel-install_docs module-qtsensors-install_docs module-qtmultimedia-install_docs module-qtwinextras-install_docs module-qtgraphicaleffects-install_docs module-qtquickcontrols-install_docs module-qtquickcontrols2-install_docs module-qtlocation-install_docs module-qtwebengine-install_docs module-qtwebview-install_docs module-qttools-install_docs module-qtscript-install_docs module-qttranslations-install_docs module-qtdoc-install_docs

module-qtbase-uninstall_docs:
	@if not exist qtbase\ mkdir qtbase\ & if not exist qtbase\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtbase\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtbase\qtbase.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_docs
module-qtmacextras-uninstall_docs: module-qtbase-uninstall_docs
	@if not exist qtmacextras\ mkdir qtmacextras\ & if not exist qtmacextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtmacextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtmacextras\qtmacextras.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_docs
module-qtx11extras-uninstall_docs: module-qtbase-uninstall_docs
	@if not exist qtx11extras\ mkdir qtx11extras\ & if not exist qtx11extras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtx11extras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtx11extras\qtx11extras.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_docs
module-qtimageformats-uninstall_docs: module-qtbase-uninstall_docs
	@if not exist qtimageformats\ mkdir qtimageformats\ & if not exist qtimageformats\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtimageformats\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtimageformats\qtimageformats.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_docs
module-qtandroidextras-uninstall_docs: module-qtbase-uninstall_docs
	@if not exist qtandroidextras\ mkdir qtandroidextras\ & if not exist qtandroidextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtandroidextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtandroidextras\qtandroidextras.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_docs
module-qtserialport-uninstall_docs: module-qtbase-uninstall_docs
	@if not exist qtserialport\ mkdir qtserialport\ & if not exist qtserialport\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtserialport\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtserialport\qtserialport.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_docs
module-qtserialbus-uninstall_docs: module-qtserialport-uninstall_docs
	@if not exist qtserialbus\ mkdir qtserialbus\ & if not exist qtserialbus\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtserialbus\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtserialbus\qtserialbus.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_docs
module-qtactiveqt-uninstall_docs: module-qtbase-uninstall_docs
	@if not exist qtactiveqt\ mkdir qtactiveqt\ & if not exist qtactiveqt\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtactiveqt\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtactiveqt\qtactiveqt.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_docs
module-qtxmlpatterns-uninstall_docs: module-qtbase-uninstall_docs
	@if not exist qtxmlpatterns\ mkdir qtxmlpatterns\ & if not exist qtxmlpatterns\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtxmlpatterns\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtxmlpatterns\qtxmlpatterns.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_docs
module-qtsvg-uninstall_docs: module-qtbase-uninstall_docs
	@if not exist qtsvg\ mkdir qtsvg\ & if not exist qtsvg\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtsvg\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtsvg\qtsvg.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_docs
module-qtdeclarative-uninstall_docs: module-qtbase-uninstall_docs module-qtsvg-uninstall_docs module-qtxmlpatterns-uninstall_docs
	@if not exist qtdeclarative\ mkdir qtdeclarative\ & if not exist qtdeclarative\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtdeclarative\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtdeclarative\qtdeclarative.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_docs
module-qtcanvas3d-uninstall_docs: module-qtdeclarative-uninstall_docs
	@if not exist qtcanvas3d\ mkdir qtcanvas3d\ & if not exist qtcanvas3d\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtcanvas3d\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtcanvas3d\qtcanvas3d.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_docs
module-qtenginio-uninstall_docs: module-qtdeclarative-uninstall_docs
	@if not exist qtenginio\ mkdir qtenginio\ & if not exist qtenginio\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtenginio\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtenginio\qtenginio.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_docs
module-qt3d-uninstall_docs: module-qtdeclarative-uninstall_docs module-qtimageformats-uninstall_docs
	@if not exist qt3d\ mkdir qt3d\ & if not exist qt3d\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qt3d\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qt3d\qt3d.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_docs
module-qtwayland-uninstall_docs: module-qtbase-uninstall_docs module-qtdeclarative-uninstall_docs
	@if not exist qtwayland\ mkdir qtwayland\ & if not exist qtwayland\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwayland\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwayland\qtwayland.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_docs
module-qtconnectivity-uninstall_docs: module-qtbase-uninstall_docs module-qtdeclarative-uninstall_docs module-qtandroidextras-uninstall_docs
	@if not exist qtconnectivity\ mkdir qtconnectivity\ & if not exist qtconnectivity\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtconnectivity\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtconnectivity\qtconnectivity.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_docs
module-qtwebsockets-uninstall_docs: module-qtbase-uninstall_docs module-qtdeclarative-uninstall_docs
	@if not exist qtwebsockets\ mkdir qtwebsockets\ & if not exist qtwebsockets\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebsockets\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebsockets\qtwebsockets.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_docs
module-qtwebchannel-uninstall_docs: module-qtbase-uninstall_docs module-qtdeclarative-uninstall_docs module-qtwebsockets-uninstall_docs
	@if not exist qtwebchannel\ mkdir qtwebchannel\ & if not exist qtwebchannel\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebchannel\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebchannel\qtwebchannel.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_docs
module-qtsensors-uninstall_docs: module-qtbase-uninstall_docs module-qtdeclarative-uninstall_docs
	@if not exist qtsensors\ mkdir qtsensors\ & if not exist qtsensors\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtsensors\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtsensors\qtsensors.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_docs
module-qtmultimedia-uninstall_docs: module-qtbase-uninstall_docs module-qtdeclarative-uninstall_docs
	@if not exist qtmultimedia\ mkdir qtmultimedia\ & if not exist qtmultimedia\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtmultimedia\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtmultimedia\qtmultimedia.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_docs
module-qtwinextras-uninstall_docs: module-qtbase-uninstall_docs module-qtdeclarative-uninstall_docs module-qtmultimedia-uninstall_docs
	@if not exist qtwinextras\ mkdir qtwinextras\ & if not exist qtwinextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwinextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwinextras\qtwinextras.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_docs
module-qtgraphicaleffects-uninstall_docs: module-qtdeclarative-uninstall_docs
	@if not exist qtgraphicaleffects\ mkdir qtgraphicaleffects\ & if not exist qtgraphicaleffects\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtgraphicaleffects\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtgraphicaleffects\qtgraphicaleffects.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_docs
module-qtquickcontrols-uninstall_docs: module-qtdeclarative-uninstall_docs module-qtgraphicaleffects-uninstall_docs
	@if not exist qtquickcontrols\ mkdir qtquickcontrols\ & if not exist qtquickcontrols\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtquickcontrols\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtquickcontrols\qtquickcontrols.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_docs
module-qtquickcontrols2-uninstall_docs: module-qtquickcontrols-uninstall_docs
	@if not exist qtquickcontrols2\ mkdir qtquickcontrols2\ & if not exist qtquickcontrols2\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtquickcontrols2\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtquickcontrols2\qtquickcontrols2.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_docs
module-qtlocation-uninstall_docs: module-qtbase-uninstall_docs module-qtdeclarative-uninstall_docs module-qtquickcontrols-uninstall_docs module-qtserialport-uninstall_docs
	@if not exist qtlocation\ mkdir qtlocation\ & if not exist qtlocation\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtlocation\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtlocation\qtlocation.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_docs
module-qtwebengine-uninstall_docs: module-qtquickcontrols-uninstall_docs module-qtwebchannel-uninstall_docs module-qtlocation-uninstall_docs
	@if not exist qtwebengine\ mkdir qtwebengine\ & if not exist qtwebengine\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebengine\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebengine\qtwebengine.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_docs
module-qtwebview-uninstall_docs: module-qtdeclarative-uninstall_docs module-qtwebengine-uninstall_docs
	@if not exist qtwebview\ mkdir qtwebview\ & if not exist qtwebview\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebview\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebview\qtwebview.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_docs
module-qttools-uninstall_docs: module-qtbase-uninstall_docs module-qtdeclarative-uninstall_docs module-qtactiveqt-uninstall_docs
	@if not exist qttools\ mkdir qttools\ & if not exist qttools\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qttools\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qttools\qttools.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_docs
module-qtscript-uninstall_docs: module-qtbase-uninstall_docs module-qttools-uninstall_docs
	@if not exist qtscript\ mkdir qtscript\ & if not exist qtscript\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtscript\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtscript\qtscript.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_docs
module-qttranslations-uninstall_docs: module-qttools-uninstall_docs
	@if not exist qttranslations\ mkdir qttranslations\ & if not exist qttranslations\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qttranslations\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qttranslations\qttranslations.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_docs
module-qtdoc-uninstall_docs: module-qtdeclarative-uninstall_docs
	@if not exist qtdoc\ mkdir qtdoc\ & if not exist qtdoc\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtdoc\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtdoc\qtdoc.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_docs
uninstall_docs: module-qtbase-uninstall_docs module-qtmacextras-uninstall_docs module-qtx11extras-uninstall_docs module-qtimageformats-uninstall_docs module-qtandroidextras-uninstall_docs module-qtserialport-uninstall_docs module-qtserialbus-uninstall_docs module-qtactiveqt-uninstall_docs module-qtxmlpatterns-uninstall_docs module-qtsvg-uninstall_docs module-qtdeclarative-uninstall_docs module-qtcanvas3d-uninstall_docs module-qtenginio-uninstall_docs module-qt3d-uninstall_docs module-qtwayland-uninstall_docs module-qtconnectivity-uninstall_docs module-qtwebsockets-uninstall_docs module-qtwebchannel-uninstall_docs module-qtsensors-uninstall_docs module-qtmultimedia-uninstall_docs module-qtwinextras-uninstall_docs module-qtgraphicaleffects-uninstall_docs module-qtquickcontrols-uninstall_docs module-qtquickcontrols2-uninstall_docs module-qtlocation-uninstall_docs module-qtwebengine-uninstall_docs module-qtwebview-uninstall_docs module-qttools-uninstall_docs module-qtscript-uninstall_docs module-qttranslations-uninstall_docs module-qtdoc-uninstall_docs

module-qtbase-qch_docs:
	@if not exist qtbase\ mkdir qtbase\ & if not exist qtbase\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtbase\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtbase\qtbase.pro -o Makefile ) && $(MAKE) -f Makefile qch_docs
module-qtmacextras-qch_docs: module-qtbase-qch_docs
	@if not exist qtmacextras\ mkdir qtmacextras\ & if not exist qtmacextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtmacextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtmacextras\qtmacextras.pro -o Makefile ) && $(MAKE) -f Makefile qch_docs
module-qtx11extras-qch_docs: module-qtbase-qch_docs
	@if not exist qtx11extras\ mkdir qtx11extras\ & if not exist qtx11extras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtx11extras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtx11extras\qtx11extras.pro -o Makefile ) && $(MAKE) -f Makefile qch_docs
module-qtimageformats-qch_docs: module-qtbase-qch_docs
	@if not exist qtimageformats\ mkdir qtimageformats\ & if not exist qtimageformats\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtimageformats\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtimageformats\qtimageformats.pro -o Makefile ) && $(MAKE) -f Makefile qch_docs
module-qtandroidextras-qch_docs: module-qtbase-qch_docs
	@if not exist qtandroidextras\ mkdir qtandroidextras\ & if not exist qtandroidextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtandroidextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtandroidextras\qtandroidextras.pro -o Makefile ) && $(MAKE) -f Makefile qch_docs
module-qtserialport-qch_docs: module-qtbase-qch_docs
	@if not exist qtserialport\ mkdir qtserialport\ & if not exist qtserialport\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtserialport\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtserialport\qtserialport.pro -o Makefile ) && $(MAKE) -f Makefile qch_docs
module-qtserialbus-qch_docs: module-qtserialport-qch_docs
	@if not exist qtserialbus\ mkdir qtserialbus\ & if not exist qtserialbus\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtserialbus\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtserialbus\qtserialbus.pro -o Makefile ) && $(MAKE) -f Makefile qch_docs
module-qtactiveqt-qch_docs: module-qtbase-qch_docs
	@if not exist qtactiveqt\ mkdir qtactiveqt\ & if not exist qtactiveqt\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtactiveqt\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtactiveqt\qtactiveqt.pro -o Makefile ) && $(MAKE) -f Makefile qch_docs
module-qtxmlpatterns-qch_docs: module-qtbase-qch_docs
	@if not exist qtxmlpatterns\ mkdir qtxmlpatterns\ & if not exist qtxmlpatterns\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtxmlpatterns\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtxmlpatterns\qtxmlpatterns.pro -o Makefile ) && $(MAKE) -f Makefile qch_docs
module-qtsvg-qch_docs: module-qtbase-qch_docs
	@if not exist qtsvg\ mkdir qtsvg\ & if not exist qtsvg\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtsvg\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtsvg\qtsvg.pro -o Makefile ) && $(MAKE) -f Makefile qch_docs
module-qtdeclarative-qch_docs: module-qtbase-qch_docs module-qtsvg-qch_docs module-qtxmlpatterns-qch_docs
	@if not exist qtdeclarative\ mkdir qtdeclarative\ & if not exist qtdeclarative\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtdeclarative\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtdeclarative\qtdeclarative.pro -o Makefile ) && $(MAKE) -f Makefile qch_docs
module-qtcanvas3d-qch_docs: module-qtdeclarative-qch_docs
	@if not exist qtcanvas3d\ mkdir qtcanvas3d\ & if not exist qtcanvas3d\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtcanvas3d\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtcanvas3d\qtcanvas3d.pro -o Makefile ) && $(MAKE) -f Makefile qch_docs
module-qtenginio-qch_docs: module-qtdeclarative-qch_docs
	@if not exist qtenginio\ mkdir qtenginio\ & if not exist qtenginio\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtenginio\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtenginio\qtenginio.pro -o Makefile ) && $(MAKE) -f Makefile qch_docs
module-qt3d-qch_docs: module-qtdeclarative-qch_docs module-qtimageformats-qch_docs
	@if not exist qt3d\ mkdir qt3d\ & if not exist qt3d\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qt3d\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qt3d\qt3d.pro -o Makefile ) && $(MAKE) -f Makefile qch_docs
module-qtwayland-qch_docs: module-qtbase-qch_docs module-qtdeclarative-qch_docs
	@if not exist qtwayland\ mkdir qtwayland\ & if not exist qtwayland\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwayland\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwayland\qtwayland.pro -o Makefile ) && $(MAKE) -f Makefile qch_docs
module-qtconnectivity-qch_docs: module-qtbase-qch_docs module-qtdeclarative-qch_docs module-qtandroidextras-qch_docs
	@if not exist qtconnectivity\ mkdir qtconnectivity\ & if not exist qtconnectivity\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtconnectivity\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtconnectivity\qtconnectivity.pro -o Makefile ) && $(MAKE) -f Makefile qch_docs
module-qtwebsockets-qch_docs: module-qtbase-qch_docs module-qtdeclarative-qch_docs
	@if not exist qtwebsockets\ mkdir qtwebsockets\ & if not exist qtwebsockets\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebsockets\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebsockets\qtwebsockets.pro -o Makefile ) && $(MAKE) -f Makefile qch_docs
module-qtwebchannel-qch_docs: module-qtbase-qch_docs module-qtdeclarative-qch_docs module-qtwebsockets-qch_docs
	@if not exist qtwebchannel\ mkdir qtwebchannel\ & if not exist qtwebchannel\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebchannel\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebchannel\qtwebchannel.pro -o Makefile ) && $(MAKE) -f Makefile qch_docs
module-qtsensors-qch_docs: module-qtbase-qch_docs module-qtdeclarative-qch_docs
	@if not exist qtsensors\ mkdir qtsensors\ & if not exist qtsensors\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtsensors\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtsensors\qtsensors.pro -o Makefile ) && $(MAKE) -f Makefile qch_docs
module-qtmultimedia-qch_docs: module-qtbase-qch_docs module-qtdeclarative-qch_docs
	@if not exist qtmultimedia\ mkdir qtmultimedia\ & if not exist qtmultimedia\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtmultimedia\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtmultimedia\qtmultimedia.pro -o Makefile ) && $(MAKE) -f Makefile qch_docs
module-qtwinextras-qch_docs: module-qtbase-qch_docs module-qtdeclarative-qch_docs module-qtmultimedia-qch_docs
	@if not exist qtwinextras\ mkdir qtwinextras\ & if not exist qtwinextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwinextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwinextras\qtwinextras.pro -o Makefile ) && $(MAKE) -f Makefile qch_docs
module-qtgraphicaleffects-qch_docs: module-qtdeclarative-qch_docs
	@if not exist qtgraphicaleffects\ mkdir qtgraphicaleffects\ & if not exist qtgraphicaleffects\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtgraphicaleffects\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtgraphicaleffects\qtgraphicaleffects.pro -o Makefile ) && $(MAKE) -f Makefile qch_docs
module-qtquickcontrols-qch_docs: module-qtdeclarative-qch_docs module-qtgraphicaleffects-qch_docs
	@if not exist qtquickcontrols\ mkdir qtquickcontrols\ & if not exist qtquickcontrols\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtquickcontrols\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtquickcontrols\qtquickcontrols.pro -o Makefile ) && $(MAKE) -f Makefile qch_docs
module-qtquickcontrols2-qch_docs: module-qtquickcontrols-qch_docs
	@if not exist qtquickcontrols2\ mkdir qtquickcontrols2\ & if not exist qtquickcontrols2\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtquickcontrols2\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtquickcontrols2\qtquickcontrols2.pro -o Makefile ) && $(MAKE) -f Makefile qch_docs
module-qtlocation-qch_docs: module-qtbase-qch_docs module-qtdeclarative-qch_docs module-qtquickcontrols-qch_docs module-qtserialport-qch_docs
	@if not exist qtlocation\ mkdir qtlocation\ & if not exist qtlocation\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtlocation\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtlocation\qtlocation.pro -o Makefile ) && $(MAKE) -f Makefile qch_docs
module-qtwebengine-qch_docs: module-qtquickcontrols-qch_docs module-qtwebchannel-qch_docs module-qtlocation-qch_docs
	@if not exist qtwebengine\ mkdir qtwebengine\ & if not exist qtwebengine\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebengine\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebengine\qtwebengine.pro -o Makefile ) && $(MAKE) -f Makefile qch_docs
module-qtwebview-qch_docs: module-qtdeclarative-qch_docs module-qtwebengine-qch_docs
	@if not exist qtwebview\ mkdir qtwebview\ & if not exist qtwebview\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebview\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebview\qtwebview.pro -o Makefile ) && $(MAKE) -f Makefile qch_docs
module-qttools-qch_docs: module-qtbase-qch_docs module-qtdeclarative-qch_docs module-qtactiveqt-qch_docs
	@if not exist qttools\ mkdir qttools\ & if not exist qttools\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qttools\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qttools\qttools.pro -o Makefile ) && $(MAKE) -f Makefile qch_docs
module-qtscript-qch_docs: module-qtbase-qch_docs module-qttools-qch_docs
	@if not exist qtscript\ mkdir qtscript\ & if not exist qtscript\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtscript\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtscript\qtscript.pro -o Makefile ) && $(MAKE) -f Makefile qch_docs
module-qttranslations-qch_docs: module-qttools-qch_docs
	@if not exist qttranslations\ mkdir qttranslations\ & if not exist qttranslations\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qttranslations\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qttranslations\qttranslations.pro -o Makefile ) && $(MAKE) -f Makefile qch_docs
module-qtdoc-qch_docs: module-qtdeclarative-qch_docs
	@if not exist qtdoc\ mkdir qtdoc\ & if not exist qtdoc\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtdoc\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtdoc\qtdoc.pro -o Makefile ) && $(MAKE) -f Makefile qch_docs
qch_docs: module-qtbase-qch_docs module-qtmacextras-qch_docs module-qtx11extras-qch_docs module-qtimageformats-qch_docs module-qtandroidextras-qch_docs module-qtserialport-qch_docs module-qtserialbus-qch_docs module-qtactiveqt-qch_docs module-qtxmlpatterns-qch_docs module-qtsvg-qch_docs module-qtdeclarative-qch_docs module-qtcanvas3d-qch_docs module-qtenginio-qch_docs module-qt3d-qch_docs module-qtwayland-qch_docs module-qtconnectivity-qch_docs module-qtwebsockets-qch_docs module-qtwebchannel-qch_docs module-qtsensors-qch_docs module-qtmultimedia-qch_docs module-qtwinextras-qch_docs module-qtgraphicaleffects-qch_docs module-qtquickcontrols-qch_docs module-qtquickcontrols2-qch_docs module-qtlocation-qch_docs module-qtwebengine-qch_docs module-qtwebview-qch_docs module-qttools-qch_docs module-qtscript-qch_docs module-qttranslations-qch_docs module-qtdoc-qch_docs

module-qtbase-prepare_docs:
	@if not exist qtbase\ mkdir qtbase\ & if not exist qtbase\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtbase\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtbase\qtbase.pro -o Makefile ) && $(MAKE) -f Makefile prepare_docs
module-qtmacextras-prepare_docs: module-qtbase-prepare_docs
	@if not exist qtmacextras\ mkdir qtmacextras\ & if not exist qtmacextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtmacextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtmacextras\qtmacextras.pro -o Makefile ) && $(MAKE) -f Makefile prepare_docs
module-qtx11extras-prepare_docs: module-qtbase-prepare_docs
	@if not exist qtx11extras\ mkdir qtx11extras\ & if not exist qtx11extras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtx11extras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtx11extras\qtx11extras.pro -o Makefile ) && $(MAKE) -f Makefile prepare_docs
module-qtimageformats-prepare_docs: module-qtbase-prepare_docs
	@if not exist qtimageformats\ mkdir qtimageformats\ & if not exist qtimageformats\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtimageformats\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtimageformats\qtimageformats.pro -o Makefile ) && $(MAKE) -f Makefile prepare_docs
module-qtandroidextras-prepare_docs: module-qtbase-prepare_docs
	@if not exist qtandroidextras\ mkdir qtandroidextras\ & if not exist qtandroidextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtandroidextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtandroidextras\qtandroidextras.pro -o Makefile ) && $(MAKE) -f Makefile prepare_docs
module-qtserialport-prepare_docs: module-qtbase-prepare_docs
	@if not exist qtserialport\ mkdir qtserialport\ & if not exist qtserialport\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtserialport\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtserialport\qtserialport.pro -o Makefile ) && $(MAKE) -f Makefile prepare_docs
module-qtserialbus-prepare_docs: module-qtserialport-prepare_docs
	@if not exist qtserialbus\ mkdir qtserialbus\ & if not exist qtserialbus\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtserialbus\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtserialbus\qtserialbus.pro -o Makefile ) && $(MAKE) -f Makefile prepare_docs
module-qtactiveqt-prepare_docs: module-qtbase-prepare_docs
	@if not exist qtactiveqt\ mkdir qtactiveqt\ & if not exist qtactiveqt\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtactiveqt\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtactiveqt\qtactiveqt.pro -o Makefile ) && $(MAKE) -f Makefile prepare_docs
module-qtxmlpatterns-prepare_docs: module-qtbase-prepare_docs
	@if not exist qtxmlpatterns\ mkdir qtxmlpatterns\ & if not exist qtxmlpatterns\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtxmlpatterns\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtxmlpatterns\qtxmlpatterns.pro -o Makefile ) && $(MAKE) -f Makefile prepare_docs
module-qtsvg-prepare_docs: module-qtbase-prepare_docs
	@if not exist qtsvg\ mkdir qtsvg\ & if not exist qtsvg\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtsvg\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtsvg\qtsvg.pro -o Makefile ) && $(MAKE) -f Makefile prepare_docs
module-qtdeclarative-prepare_docs: module-qtbase-prepare_docs module-qtsvg-prepare_docs module-qtxmlpatterns-prepare_docs
	@if not exist qtdeclarative\ mkdir qtdeclarative\ & if not exist qtdeclarative\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtdeclarative\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtdeclarative\qtdeclarative.pro -o Makefile ) && $(MAKE) -f Makefile prepare_docs
module-qtcanvas3d-prepare_docs: module-qtdeclarative-prepare_docs
	@if not exist qtcanvas3d\ mkdir qtcanvas3d\ & if not exist qtcanvas3d\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtcanvas3d\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtcanvas3d\qtcanvas3d.pro -o Makefile ) && $(MAKE) -f Makefile prepare_docs
module-qtenginio-prepare_docs: module-qtdeclarative-prepare_docs
	@if not exist qtenginio\ mkdir qtenginio\ & if not exist qtenginio\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtenginio\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtenginio\qtenginio.pro -o Makefile ) && $(MAKE) -f Makefile prepare_docs
module-qt3d-prepare_docs: module-qtdeclarative-prepare_docs module-qtimageformats-prepare_docs
	@if not exist qt3d\ mkdir qt3d\ & if not exist qt3d\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qt3d\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qt3d\qt3d.pro -o Makefile ) && $(MAKE) -f Makefile prepare_docs
module-qtwayland-prepare_docs: module-qtbase-prepare_docs module-qtdeclarative-prepare_docs
	@if not exist qtwayland\ mkdir qtwayland\ & if not exist qtwayland\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwayland\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwayland\qtwayland.pro -o Makefile ) && $(MAKE) -f Makefile prepare_docs
module-qtconnectivity-prepare_docs: module-qtbase-prepare_docs module-qtdeclarative-prepare_docs module-qtandroidextras-prepare_docs
	@if not exist qtconnectivity\ mkdir qtconnectivity\ & if not exist qtconnectivity\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtconnectivity\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtconnectivity\qtconnectivity.pro -o Makefile ) && $(MAKE) -f Makefile prepare_docs
module-qtwebsockets-prepare_docs: module-qtbase-prepare_docs module-qtdeclarative-prepare_docs
	@if not exist qtwebsockets\ mkdir qtwebsockets\ & if not exist qtwebsockets\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebsockets\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebsockets\qtwebsockets.pro -o Makefile ) && $(MAKE) -f Makefile prepare_docs
module-qtwebchannel-prepare_docs: module-qtbase-prepare_docs module-qtdeclarative-prepare_docs module-qtwebsockets-prepare_docs
	@if not exist qtwebchannel\ mkdir qtwebchannel\ & if not exist qtwebchannel\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebchannel\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebchannel\qtwebchannel.pro -o Makefile ) && $(MAKE) -f Makefile prepare_docs
module-qtsensors-prepare_docs: module-qtbase-prepare_docs module-qtdeclarative-prepare_docs
	@if not exist qtsensors\ mkdir qtsensors\ & if not exist qtsensors\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtsensors\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtsensors\qtsensors.pro -o Makefile ) && $(MAKE) -f Makefile prepare_docs
module-qtmultimedia-prepare_docs: module-qtbase-prepare_docs module-qtdeclarative-prepare_docs
	@if not exist qtmultimedia\ mkdir qtmultimedia\ & if not exist qtmultimedia\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtmultimedia\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtmultimedia\qtmultimedia.pro -o Makefile ) && $(MAKE) -f Makefile prepare_docs
module-qtwinextras-prepare_docs: module-qtbase-prepare_docs module-qtdeclarative-prepare_docs module-qtmultimedia-prepare_docs
	@if not exist qtwinextras\ mkdir qtwinextras\ & if not exist qtwinextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwinextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwinextras\qtwinextras.pro -o Makefile ) && $(MAKE) -f Makefile prepare_docs
module-qtgraphicaleffects-prepare_docs: module-qtdeclarative-prepare_docs
	@if not exist qtgraphicaleffects\ mkdir qtgraphicaleffects\ & if not exist qtgraphicaleffects\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtgraphicaleffects\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtgraphicaleffects\qtgraphicaleffects.pro -o Makefile ) && $(MAKE) -f Makefile prepare_docs
module-qtquickcontrols-prepare_docs: module-qtdeclarative-prepare_docs module-qtgraphicaleffects-prepare_docs
	@if not exist qtquickcontrols\ mkdir qtquickcontrols\ & if not exist qtquickcontrols\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtquickcontrols\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtquickcontrols\qtquickcontrols.pro -o Makefile ) && $(MAKE) -f Makefile prepare_docs
module-qtquickcontrols2-prepare_docs: module-qtquickcontrols-prepare_docs
	@if not exist qtquickcontrols2\ mkdir qtquickcontrols2\ & if not exist qtquickcontrols2\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtquickcontrols2\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtquickcontrols2\qtquickcontrols2.pro -o Makefile ) && $(MAKE) -f Makefile prepare_docs
module-qtlocation-prepare_docs: module-qtbase-prepare_docs module-qtdeclarative-prepare_docs module-qtquickcontrols-prepare_docs module-qtserialport-prepare_docs
	@if not exist qtlocation\ mkdir qtlocation\ & if not exist qtlocation\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtlocation\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtlocation\qtlocation.pro -o Makefile ) && $(MAKE) -f Makefile prepare_docs
module-qtwebengine-prepare_docs: module-qtquickcontrols-prepare_docs module-qtwebchannel-prepare_docs module-qtlocation-prepare_docs
	@if not exist qtwebengine\ mkdir qtwebengine\ & if not exist qtwebengine\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebengine\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebengine\qtwebengine.pro -o Makefile ) && $(MAKE) -f Makefile prepare_docs
module-qtwebview-prepare_docs: module-qtdeclarative-prepare_docs module-qtwebengine-prepare_docs
	@if not exist qtwebview\ mkdir qtwebview\ & if not exist qtwebview\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebview\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebview\qtwebview.pro -o Makefile ) && $(MAKE) -f Makefile prepare_docs
module-qttools-prepare_docs: module-qtbase-prepare_docs module-qtdeclarative-prepare_docs module-qtactiveqt-prepare_docs
	@if not exist qttools\ mkdir qttools\ & if not exist qttools\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qttools\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qttools\qttools.pro -o Makefile ) && $(MAKE) -f Makefile prepare_docs
module-qtscript-prepare_docs: module-qtbase-prepare_docs module-qttools-prepare_docs
	@if not exist qtscript\ mkdir qtscript\ & if not exist qtscript\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtscript\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtscript\qtscript.pro -o Makefile ) && $(MAKE) -f Makefile prepare_docs
module-qttranslations-prepare_docs: module-qttools-prepare_docs
	@if not exist qttranslations\ mkdir qttranslations\ & if not exist qttranslations\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qttranslations\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qttranslations\qttranslations.pro -o Makefile ) && $(MAKE) -f Makefile prepare_docs
module-qtdoc-prepare_docs: module-qtdeclarative-prepare_docs
	@if not exist qtdoc\ mkdir qtdoc\ & if not exist qtdoc\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtdoc\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtdoc\qtdoc.pro -o Makefile ) && $(MAKE) -f Makefile prepare_docs
prepare_docs: module-qtbase-prepare_docs module-qtmacextras-prepare_docs module-qtx11extras-prepare_docs module-qtimageformats-prepare_docs module-qtandroidextras-prepare_docs module-qtserialport-prepare_docs module-qtserialbus-prepare_docs module-qtactiveqt-prepare_docs module-qtxmlpatterns-prepare_docs module-qtsvg-prepare_docs module-qtdeclarative-prepare_docs module-qtcanvas3d-prepare_docs module-qtenginio-prepare_docs module-qt3d-prepare_docs module-qtwayland-prepare_docs module-qtconnectivity-prepare_docs module-qtwebsockets-prepare_docs module-qtwebchannel-prepare_docs module-qtsensors-prepare_docs module-qtmultimedia-prepare_docs module-qtwinextras-prepare_docs module-qtgraphicaleffects-prepare_docs module-qtquickcontrols-prepare_docs module-qtquickcontrols2-prepare_docs module-qtlocation-prepare_docs module-qtwebengine-prepare_docs module-qtwebview-prepare_docs module-qttools-prepare_docs module-qtscript-prepare_docs module-qttranslations-prepare_docs module-qtdoc-prepare_docs

module-qtbase-generate_docs:
	@if not exist qtbase\ mkdir qtbase\ & if not exist qtbase\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtbase\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtbase\qtbase.pro -o Makefile ) && $(MAKE) -f Makefile generate_docs
module-qtmacextras-generate_docs: module-qtbase-generate_docs
	@if not exist qtmacextras\ mkdir qtmacextras\ & if not exist qtmacextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtmacextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtmacextras\qtmacextras.pro -o Makefile ) && $(MAKE) -f Makefile generate_docs
module-qtx11extras-generate_docs: module-qtbase-generate_docs
	@if not exist qtx11extras\ mkdir qtx11extras\ & if not exist qtx11extras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtx11extras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtx11extras\qtx11extras.pro -o Makefile ) && $(MAKE) -f Makefile generate_docs
module-qtimageformats-generate_docs: module-qtbase-generate_docs
	@if not exist qtimageformats\ mkdir qtimageformats\ & if not exist qtimageformats\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtimageformats\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtimageformats\qtimageformats.pro -o Makefile ) && $(MAKE) -f Makefile generate_docs
module-qtandroidextras-generate_docs: module-qtbase-generate_docs
	@if not exist qtandroidextras\ mkdir qtandroidextras\ & if not exist qtandroidextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtandroidextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtandroidextras\qtandroidextras.pro -o Makefile ) && $(MAKE) -f Makefile generate_docs
module-qtserialport-generate_docs: module-qtbase-generate_docs
	@if not exist qtserialport\ mkdir qtserialport\ & if not exist qtserialport\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtserialport\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtserialport\qtserialport.pro -o Makefile ) && $(MAKE) -f Makefile generate_docs
module-qtserialbus-generate_docs: module-qtserialport-generate_docs
	@if not exist qtserialbus\ mkdir qtserialbus\ & if not exist qtserialbus\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtserialbus\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtserialbus\qtserialbus.pro -o Makefile ) && $(MAKE) -f Makefile generate_docs
module-qtactiveqt-generate_docs: module-qtbase-generate_docs
	@if not exist qtactiveqt\ mkdir qtactiveqt\ & if not exist qtactiveqt\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtactiveqt\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtactiveqt\qtactiveqt.pro -o Makefile ) && $(MAKE) -f Makefile generate_docs
module-qtxmlpatterns-generate_docs: module-qtbase-generate_docs
	@if not exist qtxmlpatterns\ mkdir qtxmlpatterns\ & if not exist qtxmlpatterns\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtxmlpatterns\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtxmlpatterns\qtxmlpatterns.pro -o Makefile ) && $(MAKE) -f Makefile generate_docs
module-qtsvg-generate_docs: module-qtbase-generate_docs
	@if not exist qtsvg\ mkdir qtsvg\ & if not exist qtsvg\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtsvg\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtsvg\qtsvg.pro -o Makefile ) && $(MAKE) -f Makefile generate_docs
module-qtdeclarative-generate_docs: module-qtbase-generate_docs module-qtsvg-generate_docs module-qtxmlpatterns-generate_docs
	@if not exist qtdeclarative\ mkdir qtdeclarative\ & if not exist qtdeclarative\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtdeclarative\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtdeclarative\qtdeclarative.pro -o Makefile ) && $(MAKE) -f Makefile generate_docs
module-qtcanvas3d-generate_docs: module-qtdeclarative-generate_docs
	@if not exist qtcanvas3d\ mkdir qtcanvas3d\ & if not exist qtcanvas3d\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtcanvas3d\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtcanvas3d\qtcanvas3d.pro -o Makefile ) && $(MAKE) -f Makefile generate_docs
module-qtenginio-generate_docs: module-qtdeclarative-generate_docs
	@if not exist qtenginio\ mkdir qtenginio\ & if not exist qtenginio\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtenginio\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtenginio\qtenginio.pro -o Makefile ) && $(MAKE) -f Makefile generate_docs
module-qt3d-generate_docs: module-qtdeclarative-generate_docs module-qtimageformats-generate_docs
	@if not exist qt3d\ mkdir qt3d\ & if not exist qt3d\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qt3d\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qt3d\qt3d.pro -o Makefile ) && $(MAKE) -f Makefile generate_docs
module-qtwayland-generate_docs: module-qtbase-generate_docs module-qtdeclarative-generate_docs
	@if not exist qtwayland\ mkdir qtwayland\ & if not exist qtwayland\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwayland\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwayland\qtwayland.pro -o Makefile ) && $(MAKE) -f Makefile generate_docs
module-qtconnectivity-generate_docs: module-qtbase-generate_docs module-qtdeclarative-generate_docs module-qtandroidextras-generate_docs
	@if not exist qtconnectivity\ mkdir qtconnectivity\ & if not exist qtconnectivity\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtconnectivity\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtconnectivity\qtconnectivity.pro -o Makefile ) && $(MAKE) -f Makefile generate_docs
module-qtwebsockets-generate_docs: module-qtbase-generate_docs module-qtdeclarative-generate_docs
	@if not exist qtwebsockets\ mkdir qtwebsockets\ & if not exist qtwebsockets\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebsockets\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebsockets\qtwebsockets.pro -o Makefile ) && $(MAKE) -f Makefile generate_docs
module-qtwebchannel-generate_docs: module-qtbase-generate_docs module-qtdeclarative-generate_docs module-qtwebsockets-generate_docs
	@if not exist qtwebchannel\ mkdir qtwebchannel\ & if not exist qtwebchannel\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebchannel\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebchannel\qtwebchannel.pro -o Makefile ) && $(MAKE) -f Makefile generate_docs
module-qtsensors-generate_docs: module-qtbase-generate_docs module-qtdeclarative-generate_docs
	@if not exist qtsensors\ mkdir qtsensors\ & if not exist qtsensors\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtsensors\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtsensors\qtsensors.pro -o Makefile ) && $(MAKE) -f Makefile generate_docs
module-qtmultimedia-generate_docs: module-qtbase-generate_docs module-qtdeclarative-generate_docs
	@if not exist qtmultimedia\ mkdir qtmultimedia\ & if not exist qtmultimedia\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtmultimedia\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtmultimedia\qtmultimedia.pro -o Makefile ) && $(MAKE) -f Makefile generate_docs
module-qtwinextras-generate_docs: module-qtbase-generate_docs module-qtdeclarative-generate_docs module-qtmultimedia-generate_docs
	@if not exist qtwinextras\ mkdir qtwinextras\ & if not exist qtwinextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwinextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwinextras\qtwinextras.pro -o Makefile ) && $(MAKE) -f Makefile generate_docs
module-qtgraphicaleffects-generate_docs: module-qtdeclarative-generate_docs
	@if not exist qtgraphicaleffects\ mkdir qtgraphicaleffects\ & if not exist qtgraphicaleffects\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtgraphicaleffects\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtgraphicaleffects\qtgraphicaleffects.pro -o Makefile ) && $(MAKE) -f Makefile generate_docs
module-qtquickcontrols-generate_docs: module-qtdeclarative-generate_docs module-qtgraphicaleffects-generate_docs
	@if not exist qtquickcontrols\ mkdir qtquickcontrols\ & if not exist qtquickcontrols\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtquickcontrols\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtquickcontrols\qtquickcontrols.pro -o Makefile ) && $(MAKE) -f Makefile generate_docs
module-qtquickcontrols2-generate_docs: module-qtquickcontrols-generate_docs
	@if not exist qtquickcontrols2\ mkdir qtquickcontrols2\ & if not exist qtquickcontrols2\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtquickcontrols2\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtquickcontrols2\qtquickcontrols2.pro -o Makefile ) && $(MAKE) -f Makefile generate_docs
module-qtlocation-generate_docs: module-qtbase-generate_docs module-qtdeclarative-generate_docs module-qtquickcontrols-generate_docs module-qtserialport-generate_docs
	@if not exist qtlocation\ mkdir qtlocation\ & if not exist qtlocation\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtlocation\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtlocation\qtlocation.pro -o Makefile ) && $(MAKE) -f Makefile generate_docs
module-qtwebengine-generate_docs: module-qtquickcontrols-generate_docs module-qtwebchannel-generate_docs module-qtlocation-generate_docs
	@if not exist qtwebengine\ mkdir qtwebengine\ & if not exist qtwebengine\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebengine\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebengine\qtwebengine.pro -o Makefile ) && $(MAKE) -f Makefile generate_docs
module-qtwebview-generate_docs: module-qtdeclarative-generate_docs module-qtwebengine-generate_docs
	@if not exist qtwebview\ mkdir qtwebview\ & if not exist qtwebview\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebview\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebview\qtwebview.pro -o Makefile ) && $(MAKE) -f Makefile generate_docs
module-qttools-generate_docs: module-qtbase-generate_docs module-qtdeclarative-generate_docs module-qtactiveqt-generate_docs
	@if not exist qttools\ mkdir qttools\ & if not exist qttools\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qttools\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qttools\qttools.pro -o Makefile ) && $(MAKE) -f Makefile generate_docs
module-qtscript-generate_docs: module-qtbase-generate_docs module-qttools-generate_docs
	@if not exist qtscript\ mkdir qtscript\ & if not exist qtscript\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtscript\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtscript\qtscript.pro -o Makefile ) && $(MAKE) -f Makefile generate_docs
module-qttranslations-generate_docs: module-qttools-generate_docs
	@if not exist qttranslations\ mkdir qttranslations\ & if not exist qttranslations\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qttranslations\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qttranslations\qttranslations.pro -o Makefile ) && $(MAKE) -f Makefile generate_docs
module-qtdoc-generate_docs: module-qtdeclarative-generate_docs
	@if not exist qtdoc\ mkdir qtdoc\ & if not exist qtdoc\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtdoc\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtdoc\qtdoc.pro -o Makefile ) && $(MAKE) -f Makefile generate_docs
generate_docs: module-qtbase-generate_docs module-qtmacextras-generate_docs module-qtx11extras-generate_docs module-qtimageformats-generate_docs module-qtandroidextras-generate_docs module-qtserialport-generate_docs module-qtserialbus-generate_docs module-qtactiveqt-generate_docs module-qtxmlpatterns-generate_docs module-qtsvg-generate_docs module-qtdeclarative-generate_docs module-qtcanvas3d-generate_docs module-qtenginio-generate_docs module-qt3d-generate_docs module-qtwayland-generate_docs module-qtconnectivity-generate_docs module-qtwebsockets-generate_docs module-qtwebchannel-generate_docs module-qtsensors-generate_docs module-qtmultimedia-generate_docs module-qtwinextras-generate_docs module-qtgraphicaleffects-generate_docs module-qtquickcontrols-generate_docs module-qtquickcontrols2-generate_docs module-qtlocation-generate_docs module-qtwebengine-generate_docs module-qtwebview-generate_docs module-qttools-generate_docs module-qtscript-generate_docs module-qttranslations-generate_docs module-qtdoc-generate_docs

module-qtbase-check:
	@if not exist qtbase\ mkdir qtbase\ & if not exist qtbase\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtbase\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtbase\qtbase.pro -o Makefile ) && $(MAKE) -f Makefile check
module-qtmacextras-check: module-qtbase-check
	@if not exist qtmacextras\ mkdir qtmacextras\ & if not exist qtmacextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtmacextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtmacextras\qtmacextras.pro -o Makefile ) && $(MAKE) -f Makefile check
module-qtx11extras-check: module-qtbase-check
	@if not exist qtx11extras\ mkdir qtx11extras\ & if not exist qtx11extras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtx11extras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtx11extras\qtx11extras.pro -o Makefile ) && $(MAKE) -f Makefile check
module-qtimageformats-check: module-qtbase-check
	@if not exist qtimageformats\ mkdir qtimageformats\ & if not exist qtimageformats\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtimageformats\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtimageformats\qtimageformats.pro -o Makefile ) && $(MAKE) -f Makefile check
module-qtandroidextras-check: module-qtbase-check
	@if not exist qtandroidextras\ mkdir qtandroidextras\ & if not exist qtandroidextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtandroidextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtandroidextras\qtandroidextras.pro -o Makefile ) && $(MAKE) -f Makefile check
module-qtserialport-check: module-qtbase-check
	@if not exist qtserialport\ mkdir qtserialport\ & if not exist qtserialport\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtserialport\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtserialport\qtserialport.pro -o Makefile ) && $(MAKE) -f Makefile check
module-qtserialbus-check: module-qtserialport-check
	@if not exist qtserialbus\ mkdir qtserialbus\ & if not exist qtserialbus\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtserialbus\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtserialbus\qtserialbus.pro -o Makefile ) && $(MAKE) -f Makefile check
module-qtactiveqt-check: module-qtbase-check
	@if not exist qtactiveqt\ mkdir qtactiveqt\ & if not exist qtactiveqt\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtactiveqt\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtactiveqt\qtactiveqt.pro -o Makefile ) && $(MAKE) -f Makefile check
module-qtxmlpatterns-check: module-qtbase-check
	@if not exist qtxmlpatterns\ mkdir qtxmlpatterns\ & if not exist qtxmlpatterns\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtxmlpatterns\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtxmlpatterns\qtxmlpatterns.pro -o Makefile ) && $(MAKE) -f Makefile check
module-qtsvg-check: module-qtbase-check
	@if not exist qtsvg\ mkdir qtsvg\ & if not exist qtsvg\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtsvg\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtsvg\qtsvg.pro -o Makefile ) && $(MAKE) -f Makefile check
module-qtdeclarative-check: module-qtbase-check module-qtsvg-check module-qtxmlpatterns-check
	@if not exist qtdeclarative\ mkdir qtdeclarative\ & if not exist qtdeclarative\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtdeclarative\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtdeclarative\qtdeclarative.pro -o Makefile ) && $(MAKE) -f Makefile check
module-qtcanvas3d-check: module-qtdeclarative-check
	@if not exist qtcanvas3d\ mkdir qtcanvas3d\ & if not exist qtcanvas3d\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtcanvas3d\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtcanvas3d\qtcanvas3d.pro -o Makefile ) && $(MAKE) -f Makefile check
module-qtenginio-check: module-qtdeclarative-check
	@if not exist qtenginio\ mkdir qtenginio\ & if not exist qtenginio\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtenginio\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtenginio\qtenginio.pro -o Makefile ) && $(MAKE) -f Makefile check
module-qt3d-check: module-qtdeclarative-check module-qtimageformats-check
	@if not exist qt3d\ mkdir qt3d\ & if not exist qt3d\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qt3d\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qt3d\qt3d.pro -o Makefile ) && $(MAKE) -f Makefile check
module-qtwayland-check: module-qtbase-check module-qtdeclarative-check
	@if not exist qtwayland\ mkdir qtwayland\ & if not exist qtwayland\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwayland\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwayland\qtwayland.pro -o Makefile ) && $(MAKE) -f Makefile check
module-qtconnectivity-check: module-qtbase-check module-qtdeclarative-check module-qtandroidextras-check
	@if not exist qtconnectivity\ mkdir qtconnectivity\ & if not exist qtconnectivity\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtconnectivity\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtconnectivity\qtconnectivity.pro -o Makefile ) && $(MAKE) -f Makefile check
module-qtwebsockets-check: module-qtbase-check module-qtdeclarative-check
	@if not exist qtwebsockets\ mkdir qtwebsockets\ & if not exist qtwebsockets\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebsockets\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebsockets\qtwebsockets.pro -o Makefile ) && $(MAKE) -f Makefile check
module-qtwebchannel-check: module-qtbase-check module-qtdeclarative-check module-qtwebsockets-check
	@if not exist qtwebchannel\ mkdir qtwebchannel\ & if not exist qtwebchannel\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebchannel\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebchannel\qtwebchannel.pro -o Makefile ) && $(MAKE) -f Makefile check
module-qtsensors-check: module-qtbase-check module-qtdeclarative-check
	@if not exist qtsensors\ mkdir qtsensors\ & if not exist qtsensors\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtsensors\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtsensors\qtsensors.pro -o Makefile ) && $(MAKE) -f Makefile check
module-qtmultimedia-check: module-qtbase-check module-qtdeclarative-check
	@if not exist qtmultimedia\ mkdir qtmultimedia\ & if not exist qtmultimedia\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtmultimedia\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtmultimedia\qtmultimedia.pro -o Makefile ) && $(MAKE) -f Makefile check
module-qtwinextras-check: module-qtbase-check module-qtdeclarative-check module-qtmultimedia-check
	@if not exist qtwinextras\ mkdir qtwinextras\ & if not exist qtwinextras\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwinextras\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwinextras\qtwinextras.pro -o Makefile ) && $(MAKE) -f Makefile check
module-qtgraphicaleffects-check: module-qtdeclarative-check
	@if not exist qtgraphicaleffects\ mkdir qtgraphicaleffects\ & if not exist qtgraphicaleffects\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtgraphicaleffects\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtgraphicaleffects\qtgraphicaleffects.pro -o Makefile ) && $(MAKE) -f Makefile check
module-qtquickcontrols-check: module-qtdeclarative-check module-qtgraphicaleffects-check
	@if not exist qtquickcontrols\ mkdir qtquickcontrols\ & if not exist qtquickcontrols\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtquickcontrols\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtquickcontrols\qtquickcontrols.pro -o Makefile ) && $(MAKE) -f Makefile check
module-qtquickcontrols2-check: module-qtquickcontrols-check
	@if not exist qtquickcontrols2\ mkdir qtquickcontrols2\ & if not exist qtquickcontrols2\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtquickcontrols2\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtquickcontrols2\qtquickcontrols2.pro -o Makefile ) && $(MAKE) -f Makefile check
module-qtlocation-check: module-qtbase-check module-qtdeclarative-check module-qtquickcontrols-check module-qtserialport-check
	@if not exist qtlocation\ mkdir qtlocation\ & if not exist qtlocation\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtlocation\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtlocation\qtlocation.pro -o Makefile ) && $(MAKE) -f Makefile check
module-qtwebengine-check: module-qtquickcontrols-check module-qtwebchannel-check module-qtlocation-check
	@if not exist qtwebengine\ mkdir qtwebengine\ & if not exist qtwebengine\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebengine\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebengine\qtwebengine.pro -o Makefile ) && $(MAKE) -f Makefile check
module-qtwebview-check: module-qtdeclarative-check module-qtwebengine-check
	@if not exist qtwebview\ mkdir qtwebview\ & if not exist qtwebview\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtwebview\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtwebview\qtwebview.pro -o Makefile ) && $(MAKE) -f Makefile check
module-qttools-check: module-qtbase-check module-qtdeclarative-check module-qtactiveqt-check
	@if not exist qttools\ mkdir qttools\ & if not exist qttools\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qttools\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qttools\qttools.pro -o Makefile ) && $(MAKE) -f Makefile check
module-qtscript-check: module-qtbase-check module-qttools-check
	@if not exist qtscript\ mkdir qtscript\ & if not exist qtscript\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtscript\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtscript\qtscript.pro -o Makefile ) && $(MAKE) -f Makefile check
module-qttranslations-check: module-qttools-check
	@if not exist qttranslations\ mkdir qttranslations\ & if not exist qttranslations\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qttranslations\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qttranslations\qttranslations.pro -o Makefile ) && $(MAKE) -f Makefile check
module-qtdoc-check: module-qtdeclarative-check
	@if not exist qtdoc\ mkdir qtdoc\ & if not exist qtdoc\ exit 1
	@set MAKEFLAGS=$(MAKEFLAGS)
	cd qtdoc\ && ( if not exist Makefile $(QMAKE) E:\XfsFile\CodeLibs\QtCode\Qt5.6\qt-everywhere-opensource-src-5.6.0\qtdoc\qtdoc.pro -o Makefile ) && $(MAKE) -f Makefile check
check: module-qtbase-check module-qtmacextras-check module-qtx11extras-check module-qtimageformats-check module-qtandroidextras-check module-qtserialport-check module-qtserialbus-check module-qtactiveqt-check module-qtxmlpatterns-check module-qtsvg-check module-qtdeclarative-check module-qtcanvas3d-check module-qtenginio-check module-qt3d-check module-qtwayland-check module-qtconnectivity-check module-qtwebsockets-check module-qtwebchannel-check module-qtsensors-check module-qtmultimedia-check module-qtwinextras-check module-qtgraphicaleffects-check module-qtquickcontrols-check module-qtquickcontrols2-check module-qtlocation-check module-qtwebengine-check module-qtwebview-check module-qttools-check module-qtscript-check module-qttranslations-check module-qtdoc-check
install:install_subtargets  FORCE

uninstall: uninstall_subtargets FORCE

FORCE:

